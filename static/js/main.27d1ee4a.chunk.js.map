{"version":3,"sources":["LabelMaker/labelLayouts/Label.js","LabelMaker/LabelModal.js","LabelMaker/components/QuantitySelector.js","LabelMaker/LabelsList.js","LabelMaker/SettingsModal.js","LabelMaker/LabelsPrintView.js","LabelMaker/SoapLabels.js","LabelMaker/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Label","props","settings","padding","pt","pb","pl","pr","pl1","pr1","pl2","pr2","layout","leftColumnWidth","layoutNbPerRow","textAlignment","seperatorWidth","demo","styleFont","fontFamily","font","styleFontAlign","textAlign","styleAlign","styleBackgroundColor","backgroundColor","Grid","item","className","xs","paddingTop","paddingBottom","paddingLeft","paddingRight","style","soapName","ingredients","brand","phrase","borderLeft","translations","LabelModal","editLabel","React","useThinSpace","setUseThinSpace","useSoapCalcRecipe","setUseSoapCalcRecipe","translateFrench","setTranslateFrench","setSoapName","soapNameError","setSoapNameError","soapIngredients","setSoapIngredients","soapCode","setSoapCode","soapPhrase","setSoapPhrase","soapFragrances","setSoapFragrances","soapColorants","setSoapColorants","soapRecipeError","setSoapRecipeError","ingredientsCodeOutput","setIngredientsCodeOutput","handleSoapRecipeChange","event","target","value","allIngredients","soapCodeData","rxMatchWater","match","length","rxMatchLye","matchAll","forEach","oilElem","sortableRecipeData","soapItem","push","sort","a","b","map","ingredient","join","toLowerCase","generateIngredients","name","console","log","isColumnLayout","pagePadding","Math","max","arrPerRow","Array","keys","tooltipSoapCode","Dialog","open","scroll","maxWidth","DialogContent","dividers","Box","FormControl","fullWidth","component","container","spacing","IconButton","onClick","onClose","TextField","required","id","label","size","helperText","error","onChange","_soapName","replaceAll","width","FormControlLabel","control","Checkbox","checked","_useThinSpace","multiline","rows","Tooltip","title","placement","disabled","Button","endIcon","saveLabel","i","soapBrand","QuantitySelector","quantity","setQuantity","updateQuantity","newQty","handleUpdateQty","LabelsList","confirmDeleteOpen","setConfirmDeleteOpen","labelModalOpen","setLabelModalOpen","undefined","setEditLabel","handleConfirmDeleteClose","index","soapLabels","indexOf","splice","saveSoapLabels","soapLabel","qty","parseInt","handleSoapLabelQtyChange","e","handleEdit","handleDelete","DialogTitle","DialogActions","variant","autoFocus","sliderStyle","marginLeft","marginRight","sliderPaddingProperties","min","marks","SettingsModal","setSoapBrand","soapBrandError","setFont","fontError","setPadding","setLayout","isLayoutColumn","setIsLayoutColumn","setLayoutNbPerRow","layoutNbPerRowArray","setLayoutNbPerRowArray","setTextAlignment","setLeftColumnWidth","setSeperatorWidth","handleSoapBrandChange","updateSettings","handleFontChange","handlePaddingChange","property","newPadding","RadioGroup","saveSettings","Radio","FormLabel","Slider","valueLabelDisplay","InputLabel","Select","labelId","val","MenuItem","step","LabelsPrintView","settingsModalOpen","setSettingsModalOpen","window","print","_layoutNbPerRow","_layout","labels","reduceRight","r","_","s","row","l","renderedLabels","defaultSettings","SoapLabels","setSoapLabels","setSettings","cookies","Cookies","get","_soapLabels","set","JSON","stringify","path","_settings","images","Main","bgTileIndex","setBgTileIndex","mainClassName","setMainClassName","updateBgTileIndex","nextBgTileIndex","_bgTileIndex","Container","theme","createTheme","typography","button","fontSize","fontWeight","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6vBAKe,SAASA,EAAMC,GAE7B,IAAKA,IAAUA,EAAMC,WAAaD,EAAMC,SAASC,QAChD,OAAO,KAER,MAA6CF,EAAMC,SAASC,QAArDC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,GAAIC,EAAnB,EAAmBA,GAAIC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,IAAKC,EAAjC,EAAiCA,IAAKC,EAAtC,EAAsCA,IAChCC,EAASX,EAAMW,QAAU,UACzBC,EAAkBZ,EAAMC,SAASW,gBACjCC,EAAiBb,EAAMC,SAASY,eAChCC,EAAgBd,EAAMC,SAASa,cAC/BC,EAAiBf,EAAMC,SAASc,eAChCC,IAAShB,EAAMgB,KAEfC,EAAY,CAACC,WAAYlB,EAAMC,SAASkB,MACxCC,EAAiB,CAACF,WAAYlB,EAAMC,SAASkB,KAAME,UAAWP,GAC9DQ,EAAa,CAACD,UAAWP,GACzBS,EAAuB,CAACC,gBAAkBR,EAAO,UAAY,eAEnE,OACC,cAAC,WAAD,UACa,YAAXL,EACA,eAACc,EAAA,EAAD,CAAMC,MAAI,EACTC,UAAU,gBACVC,GAAI,GAAGf,EACPgB,WAAY1B,EAAG,KACf2B,cAAe1B,EAAG,KAClB2B,YAAa1B,EAAG,KAChB2B,aAAc1B,EAAG,KACjB2B,MAAOV,EAPR,UASC,mBAAGU,MAAOb,EAAgBO,UAAU,gBAApC,SAAqD3B,EAAMkC,WAC3D,mBAAGD,MAAOX,EAAYK,UAAU,uBAAhC,SAAwD3B,EAAMmC,cAC7DnC,EAAMoC,OAAU,mBAAGH,MAAOX,EAAYK,UAAU,iBAAhC,SAAkD3B,EAAMoC,QACxEpC,EAAMqC,QAAW,mBAAGJ,MAAOX,EAAYK,UAAU,kBAAhC,SAAmD3B,EAAMqC,YAG5E,eAACZ,EAAA,EAAD,CAAMG,GAAI,GAAIF,MAAI,EACjBC,UAAU,uBACVE,WAAY1B,EAAG,KACf2B,cAAe1B,EAAG,KAClB6B,MAAOV,EAJR,UAMC,cAACE,EAAA,EAAD,CAAMC,MAAI,EACTE,GAAI,GAAGhB,EACPmB,YAAaxB,EAAI,KACjByB,aAAcxB,EAAI,KAClBmB,UAAU,2BAJX,SAMC,mBAAGA,UAAU,8BAAb,SAA4C3B,EAAMmC,gBAEnD,eAACV,EAAA,EAAD,CAAMC,MAAI,EACTE,GAAI,IAAI,EAAEhB,GACVmB,YAAatB,EAAI,KACjBuB,aAActB,EAAI,KAClBiB,UAAU,4BACVM,MAAO,CAACK,WAAW,GAAD,OAAKvB,EAAL,kBALnB,UAOEf,EAAMoC,OAAU,mBAAGT,UAAU,wBAAb,SAAsC3B,EAAMoC,QAC7D,mBAAGH,MAAOhB,EAAWU,UAAU,uBAA/B,SAAuD3B,EAAMkC,WAC5DlC,EAAMqC,QAAW,mBAAGV,UAAU,yBAAb,SAAuC3B,EAAMqC,iBC3CrE,IAAME,EAAe,CACpB,oBAAqB,uBACrB,cAAe,oBACf,YAAa,iBACb,cAAe,iBACf,aAAc,kBACd,aAAc,iBACd,eAAgB,kBAChB,sBAAuB,mBACvB,sBAAuB,mBACvB,4BAA6B,mBAC7B,WAAY,mBACZ,gBAAiB,+BACjB,eAAgB,kBAChB,kCAAmC,kBACnC,oBAAqB,mBACrB,YAAa,gBACb,WAAY,iBACZ,yBAA0B,eAC1B,gBAAiB,oBACjB,aAAc,qBACd,cAAe,sBACf,gBAAiB,sBAGH,SAASC,EAAWxC,GAClC,IAAQyC,EAAczC,EAAdyC,UACR,EAAmBC,WAAe1C,EAAMC,UAAjCA,EAAP,oBACA,EAAwCyC,YAAe,GAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkDF,YAAe,GAAjE,mBAAOG,EAAP,KAA0BC,EAA1B,KACA,EAA8CJ,YAAe,GAA7D,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAgCN,WAAe,IAA/C,mBAAOR,EAAP,KAAiBe,EAAjB,KACA,EAA0CP,YAAe,GAAzD,mBAAOQ,EAAP,KAAsBC,EAAtB,KACA,EAA8CT,WAAe,IAA7D,mBAAOU,EAAP,KAAwBC,EAAxB,KACA,EAAgCX,WAAe,IAA/C,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,GAAoCb,WAAe,IAAnD,qBAAOc,GAAP,MAAmBC,GAAnB,MACA,GAA4Cf,WAAe,IAA3D,qBAAOgB,GAAP,MAAuBC,GAAvB,MACA,GAA0CjB,WAAe,IAAzD,qBAAOkB,GAAP,MAAsBC,GAAtB,MAEA,GAA8CnB,YAAe,GAA7D,qBAAOoB,GAAP,MAAwBC,GAAxB,MAEA,GAA0DrB,WAAe,IAAzE,qBAAOsB,GAAP,MAA8BC,GAA9B,MA2BMC,GAAyB,SAACC,GAC5BtB,EACFU,EAAYY,EAAMC,OAAOC,OAEzBhB,EAAmBc,EAAMC,OAAOC,QAqElC3B,aAAgB,YA7CY,WAC3B,IAAI4B,EAAiBhB,EAErB,GAAIT,EAAmB,CACtB,IAAKS,EACJ,OAED,IAAMiB,EAAe,GAEfC,EAAelB,EAASmB,MAAM,sCAChCD,GAAgBA,EAAaE,OAAS,GAAKF,EAAa,KAC3DD,EAAaxB,EAAkB,MAAQ,SAAWyB,EAAa,IAGhE,IAAMG,EAAarB,EAASmB,MAAM,2CAC9BE,GAAcA,EAAWD,OAAS,GAAKC,EAAW,KACrDJ,EAAaxB,EAAkB,sBAAwB,OAAS4B,EAAW,IAI/D,YAAOrB,EAASsB,SAAS,sEAC9BC,SAAQ,SAACC,GAChBP,EAAaxB,EAAkBR,EAAauC,EAAQ,IAAMA,EAAQ,IAAMA,EAAQ,MAGjF,IAAMC,EAAqB,GAC3B,IAAK,IAAIC,KAAYT,EACpBQ,EAAmBE,KAAK,CAACD,EAAUT,EAAaS,KAEjDD,EAAmBG,MAAK,SAASC,EAAGC,GACnC,OAAOA,EAAE,GAAKD,EAAE,MAGjBb,EAAiBS,EAAmBM,KAAI,SAACC,GAAD,OAAgBA,EAAW,MAAIC,KAAK,MAAMC,mBAElFlB,EAAiBlB,EAGlBC,EAAmBiB,GAGnBA,EAAc,UADWvB,EAAkB,iBAAgB,cAC7C,aAA2BuB,EAA3B,aAA8CZ,IAAkB,eAAhE,aAAmFE,IAAiB,cAApG,KACdK,GAAyBK,GAIzBmB,KACE,CAACnC,EAAUF,EAAiBQ,GAAeF,GAAgBF,GAAYb,EAAcE,EAAmBE,IAE3GL,aAAgB,WACZD,GAAaA,EAAUiD,MAAQjD,EAAUN,aAC3CwD,QAAQC,IAAInD,GACZQ,EAAYR,EAAUiD,MACtBjC,GAAchB,EAAUJ,QACxBkB,EAAYd,EAAUa,UACtBD,EAAmBZ,EAAUW,iBAAmBX,EAAUN,aAC1DwB,GAAkBlB,EAAUiB,gBAC5BG,GAAiBpB,EAAUmB,eAC3BZ,EAAmBP,EAAUM,iBAC7BD,EAAqBL,EAAUI,qBAAuBJ,EAAUa,YAEhEL,EAAY,IACZQ,GAAc,IACdF,EAAY,IACZF,EAAmB,IACnBM,GAAkB,IAClBE,GAAiB,IACjBb,GAAmB,GACnBF,GAAqB,MAEpB,CAACL,IAEJ,IAIMoD,GAAqC,YAApB5F,EAASU,OAC1BmF,GAAc,CACnB3F,GAAI4F,KAAKC,IAAI,EAAG,GAAG/F,EAASC,QAAQC,IAAI,KACxCC,GAAI2F,KAAKC,IAAI,EAAG,GAAG/F,EAASC,QAAQE,IAAI,KACxCC,GAAI0F,KAAKC,IAAI,EAAG,IAAIH,GAAiB5F,EAASC,QAAQG,GAAKJ,EAASC,QAAQK,MAAM,KAClFD,GAAIyF,KAAKC,IAAI,EAAG,IAAIH,GAAiB5F,EAASC,QAAQI,GAAKL,EAASC,QAAQQ,MAAM,MAE7EuF,GAAS,YAAOC,MAAML,GAAiB5F,EAASY,eAAiB,GAAGsF,QAEpEC,GAAe,gIACoCrD,EAAkB,yBAA2B,GADjF,2BAGrB,OACC,cAACsD,EAAA,EAAD,CAAQC,KAAMtG,EAAMsG,KAAMC,OAAO,OAAOC,SAAU,SAAlD,SACC,cAACC,EAAA,EAAD,CAAeC,UAAU,EAAzB,SACC,eAACC,EAAA,EAAD,CAAKhF,UAAU,WAAf,UACC,cAACiF,EAAA,EAAD,CAAaC,WAAW,EAAMC,UAAU,OAAOnF,UAAU,OAAzD,SACC,eAACF,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,WAAtC,UACC,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACA,oBAAID,UAAU,oBAAd,8BAEA,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAGD,UAAU,gBAA5B,SACC,cAACsF,EAAA,EAAD,CAAYC,QA1BC,WACnBlH,EAAMmH,WAyBA,SAAkC,cAAC,IAAD,QAEnC,eAAC1F,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,UACC,cAACwF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,YACHC,MAAM,YACNC,KAAK,QACLC,WAAW,GACXpD,MAAOnC,EACPwF,MAAOxE,EACPyE,SAvJqB,SAACxD,GAC7B,IAAMyD,EAAYzD,EAAMC,OAAOC,MAC/BpB,EAAYN,EAAeiF,EAAUC,WAAW,IAAK,UAAOD,EAAUC,WAAW,SAAK,OAsJ/E5F,MAAO,CAAE6F,MAAO,UAEjB,cAACC,EAAA,EAAD,CAAkBC,QAAS,cAACC,EAAA,EAAD,CAAUC,QAASvF,EAAcgF,SArKlC,SAACxD,GACjC,IAAMgE,IAAkBhE,EAAMC,OAAO8D,QACrCtF,EAAgBuF,GAChBlF,EAAYkF,EAAgBjG,EAAS2F,WAAW,IAAK,UAAO3F,EAAS2F,WAAW,SAAK,SAkKqBN,MAAM,oCAE3G,cAAC9F,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACwF,EAAA,EAAD,CACCE,GAAG,SACHC,MAAM,SACNC,KAAK,QACLC,WAAW,GACXpD,MAAOb,GACPmE,SA/JuB,SAACxD,GAC/BV,GAAcU,EAAMC,OAAOC,QA+JpBpC,MAAO,CAAE6F,MAAO,YAGjBjF,EACA,cAACpB,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,SACC,cAACwF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,YACHC,MAAM,YACNC,KAAK,QACL7F,UAAU,eACVyG,WAAS,EACTC,KAAM,EACNhE,MAAOf,EACPoE,MAAO5D,GACP6D,SAAUzD,OAIZ,cAACzC,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,SACC,cAACwF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,mBACHC,MAAM,mBACNC,KAAK,QACL7F,UAAU,eACVyG,WAAS,EACTC,KAAM,EACNhE,MAAOjB,EACPsE,MAAO5D,GACP6D,SAAUzD,OAIb,eAACzC,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,UACC,cAACmG,EAAA,EAAD,CACCC,QAAS,cAACC,EAAA,EAAD,CACTC,QAASrF,EACT8E,SAhN8B,SAACxD,GACtCrB,IAAuBqB,EAAMC,OAAO8D,YAgN7BX,MAAM,iDAEP,cAACe,EAAA,EAAD,CAASC,MAAOnC,GAAiBoC,UAAU,QAA3C,SACC,cAACvB,EAAA,EAAD,CAAYO,KAAK,QAAjB,SACC,cAAC,IAAD,WAIH,cAAC/F,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACmG,EAAA,EAAD,CACCU,UAAW5F,EACXmF,QAAS,cAACC,EAAA,EAAD,CACTC,QAASnF,EACT4E,SA3N4B,SAACxD,GACpCnB,IAAqBmB,EAAMC,OAAO8D,YA2N3BX,MAAM,uCAGR,cAAC9F,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACwF,EAAA,EAAD,CACCE,GAAG,kBACHC,MAAM,oBACNC,KAAK,QACLnD,MAAOX,GACPiE,SA3N2B,SAACxD,GACnCR,GAAkBQ,EAAMC,OAAOC,QA2NxBpC,MAAO,CAAE6F,MAAO,YAGlB,cAACrG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACwF,EAAA,EAAD,CACCE,GAAG,iBACHC,MAAM,mBACNC,KAAK,QACLnD,MAAOT,GACP+D,SAlO0B,SAACxD,GAClCN,GAAiBM,EAAMC,OAAOC,QAkOvBpC,MAAO,CAAE6F,MAAO,YAGlB,eAACrG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAID,UAAU,kBAA7B,UACC,cAAC+G,EAAA,EAAD,CACC/G,UAAU,SACV6F,KAAK,QACLmB,QAAS,cAAC,IAAD,IAHV,mBAIA,cAACD,EAAA,EAAD,CACC/G,UAAU,SACV6F,KAAK,QACLmB,QAAS,cAAC,IAAD,IACTzB,QAnOgB,WACvB/D,GAAkBjB,GAClB6B,IAAoBT,GACjBpB,GAAYoB,GAAYU,KAE1BhE,EAAM4I,UACL1G,EACA8B,GACAV,EACAF,EACAM,GACAE,GACAJ,GACAX,EACAE,GAED/C,EAAMmH,YA+MD,0BASH,oBAAIxF,UAAU,cAAd,2BACA,cAACF,EAAA,EAAD,yBAAME,UAAU,cAAiBmE,IAAjC,aACEG,GAAUZ,KAAI,SAAAwD,GAAC,OACf,cAAC,EAAD,CAEC5I,SAAUA,EACVU,OAAQV,EAASU,OACjBuB,SAAUA,EACVC,YAAa6B,GACb5B,MAAOnC,EAAS6I,UAChBzG,OAAQmB,IAPT,gBACeqF,iB,+CC3TP,SAASE,EAAiB/I,GACxC,MAAgC0C,WAAe1C,EAAMgJ,UAArD,mBAAOA,EAAP,KAAiBC,EAAjB,KAQMC,EAAiB,SAACC,GACvBF,EAAYE,GACZnJ,EAAMoJ,gBAAgBD,IAGvB,OACC,sBAAKxH,UAAU,kBAAf,UACC,cAACsF,EAAA,EAAD,CAAYO,KAAK,QAAQ7F,UAAU,aAAauF,QAb7B,WACpBgC,EAAeF,EAAS,IAYvB,SAAuE,cAAC,IAAD,MACvE,sBAAMrH,UAAU,gBAAhB,SAAiCqH,IACjC,cAAC/B,EAAA,EAAD,CAAYO,KAAK,QAAQ7F,UAAU,aAAauF,QAZhC,WACjBgC,EAAeF,EAAS,IAWvB,SAAoE,cAAC,IAAD,S,wCClBxD,SAASK,EAAWrJ,GAClC,MAAmB0C,WAAe1C,EAAMC,UAAjCA,EAAP,oBACA,EAAkDyC,YAAe,GAAjE,mBAAO4G,EAAP,KAA0BC,EAA1B,KACA,EAA4C7G,YAAe,GAA3D,mBAAO8G,EAAP,KAAuBC,EAAvB,KACA,EAAkC/G,gBAAegH,GAAjD,mBAAOjH,EAAP,KAAkBkH,EAAlB,KA6DMC,EAA2B,WAChCL,GAAqB,GACrB,IAAMM,EAAQ7J,EAAM8J,WAAWC,QAAQtH,GACnCoH,GAAS,IACZ7J,EAAM8J,WAAWE,OAAOH,EAAO,GAC/B7J,EAAMiK,eAAejK,EAAM8J,aAE5BH,OAAaD,IAOVG,EAAQ,EAEZ,OACC,eAAC,WAAD,WACC,eAACpI,EAAA,EAAD,CAAME,UAAU,uBAAhB,UACC,sBAAKA,UAAU,qBAAf,UACC,oBAAIA,UAAU,cAAd,6BACA,qBAAKA,UAAU,yBAAf,SACC,cAAC+G,EAAA,EAAD,CAAQxB,QAhFgB,WAC5BuC,GAAkB,GAClBE,OAAaD,IA8E8Bf,QAAS,cAAC,IAAD,IAAhD,iCAGF,cAAClH,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,gBAAtC,SACE3B,EAAM8J,YAAc9J,EAAM8J,WAAWpF,OAAS1E,EAAM8J,WAAWzE,KAAI,SAAA6E,GAEnE,OADAL,IAEC,eAACpI,EAAA,EAAD,CACCC,MAAI,EAACE,GAAI,GACTD,UAAU,kCAFX,UAKC,uBAAMA,UAAU,mBAAhB,UAAoCuI,EAAUxE,KAA9C,OACA,sBAAK/D,UAAU,0CAAf,UACC,cAAC,EAAD,CACCqH,SAAUkB,EAAUlB,SACpBI,gBAAiB,SAACe,GAAD,OArDO,SAACD,EAAWC,GAC5CD,EAAUlB,SAAWoB,SAASD,GAC9BnK,EAAMiK,eAAejK,EAAM8J,YAmDOO,CAAyBH,EAAWC,MAE/D,cAAClD,EAAA,EAAD,CAAYO,KAAK,QAAQN,QAAS,SAACoD,GAAD,OAlDvB,SAACJ,GACnBP,EAAaO,GACbT,GAAkB,GAgD8Bc,CAAWL,IAApD,SAAgE,cAAC,IAAD,MAChE,cAACjD,EAAA,EAAD,CAAYO,KAAK,QAAQN,QAAS,SAACoD,GAAD,OA9CrB,SAACJ,GACrBP,EAAaO,GACbX,GAAqB,GA4C2BiB,CAAaN,IAAtD,SAAkE,cAAC,IAAD,WAZpE,uBAGsBL,OAcvB,uEAGDpH,GACA,eAAC4D,EAAA,EAAD,CACCC,KAAMgD,EACNnC,QAASyC,EACT,kBAAgB,qBAHjB,UAKC,cAACa,EAAA,EAAD,CAAanD,GAAG,qBAAhB,sCACwB7E,EAAUiD,KADlC,SAGA,eAACgF,EAAA,EAAD,WACC,cAAChC,EAAA,EAAD,CAAQiC,QAAQ,WAAWzD,QAlDG,WACnCqC,GAAqB,GACrBI,OAAaD,IAgDR,gBACA,cAAChB,EAAA,EAAD,CAAQiC,QAAQ,YAAYzD,QAAS0C,EAA0BgB,WAAS,EAAxE,0BAOJ,cAAC,EAAD,CACCtE,KAAMkD,EACNrC,QA3H2B,WAC7BsC,GAAkB,GAClBE,OAAaD,IA0HXd,UAtHe,SAAClD,EAAMvD,EAAamB,EAAUF,EAAiBM,EAAgBE,EAAevB,EAAQQ,EAAmBE,GACtHN,GACHA,EAAUiD,KAAOA,EACjBjD,EAAUN,YAAcA,EACxBM,EAAUa,SAAWA,EACrBb,EAAUW,gBAAkBA,EAC5BX,EAAUiB,eAAiBA,EAC3BjB,EAAUmB,cAAgBA,EAC1BnB,EAAUJ,OAASA,EACnBI,EAAUI,kBAAoBA,EAC9BJ,EAAUM,gBAAkBA,EAC5B4C,QAAQC,IAAInD,IAEZzC,EAAM8J,WAAW7E,KAChB,CACCS,OACAvD,cACAmB,WACAF,kBACAM,iBACAE,gBACAvB,SACAQ,oBACAE,kBACAiG,SAAU,IAIbhJ,EAAMiK,eAAejK,EAAM8J,YAC3BH,OAAaD,IA0FXjH,UAAWA,EACXxC,SAAUA,O,wFCpIR4K,GAAc,CAACC,WAAY,GAAIC,YAAa,GAAIjD,MAAO,QACvDkD,GAA0B,CAC/BC,IAAK,GAAIjF,IAAK,IACdkF,MAAO,CAAC,CAAC7G,MAAO,GAAIkD,MAAO,MAAO,CAAClD,MAAO,IAAKkD,MAAO,SAGxC,SAAS4D,GAAcnL,GACrC,MAAoC0C,WAAe1C,EAAMC,UAAlDA,EAAP,oBAEA,EAAkCyC,WAAe1C,EAAMC,SAASmC,OAAhE,mBAAO0G,EAAP,KAAkBsC,EAAlB,KACA,EAAgD1I,YAAe,GAAxD2I,EAAP,oBACA,EAAwB3I,WAAe1C,EAAMC,SAASkB,MAAtD,mBAAOA,EAAP,KAAamK,EAAb,KACA,EAAsC5I,YAAe,GAA9C6I,EAAP,oBACA,EAA8B7I,WAAe1C,EAAMC,SAASC,SAA5D,mBAAOA,EAAP,KAAgBsL,EAAhB,KAEA,EAA4B9I,WAAe1C,EAAMC,SAASU,QAA1D,mBAAOA,EAAP,KAAe8K,EAAf,KACA,EAA4C/I,WAAyC,YAA1B1C,EAAMC,SAASU,QAA1E,mBAAO+K,EAAP,KAAuBC,EAAvB,KACA,EAA4CjJ,WAAe1C,EAAMC,SAASY,gBAA1E,mBAAOA,EAAP,KAAuB+K,EAAvB,KACA,EAAsDlJ,WAAA,YAAmBwD,MAAMlG,EAAMC,SAASY,gBAAgBsF,SAA9G,mBAAO0F,EAAP,KAA4BC,EAA5B,KACA,EAA0CpJ,WAAe1C,EAAMC,SAASa,eAAxE,mBAAOA,EAAP,KAAsBiL,EAAtB,KACA,GAA8CrJ,WAAe1C,EAAMC,SAASW,iBAA5E,qBAAOA,GAAP,MAAwBoL,GAAxB,MACA,GAA4CtJ,WAAe1C,EAAMC,SAASc,gBAA1E,qBAAOA,GAAP,MAAuBkL,GAAvB,MAEMC,GAAwB,SAAC/H,GAC9BiH,EAAajH,EAAMC,OAAOC,OAC1BpE,EAASmC,MAAQ+B,EAAMC,OAAOC,MAC9B8H,MAEKC,GAAmB,SAACjI,GACzBmH,EAAQnH,EAAMC,OAAOC,OACrBpE,EAASkB,KAAOgD,EAAMC,OAAOC,MAC7B8H,MAQKE,GAAsB,SAAChI,EAAOiI,GACnCpM,EAAQoM,GAAYjI,EACpB,IAAMkI,EAAU,eAAOrM,GACvBsL,EAAWe,GACXtM,EAASC,QAAUqM,EACnBJ,MA4BKA,GAAiB,aASvB,OACC,cAAC9F,EAAA,EAAD,CAAQC,KAAMtG,EAAMsG,KAAMC,OAAO,OAAOC,SAAU,SAAlD,SACC,cAACC,EAAA,EAAD,CAAeC,UAAU,EAAzB,SACC,cAACC,EAAA,EAAD,CAAKhF,UAAU,WAAf,SACC,cAACiF,EAAA,EAAD,CAAaC,WAAW,EAAMC,UAAU,OAAOnF,UAAU,OAAzD,SACC,cAAC6K,GAAA,EAAD,CACC,aAAW,SACXnI,MAAO1D,EACPgH,SAxDqB,SAACxD,GAC3BsH,EAAUtH,EAAMC,OAAOC,OACvBsH,EAAyC,YAAvBxH,EAAMC,OAAOC,OAC/BpE,EAASU,OAASwD,EAAMC,OAAOC,MAC/B8H,MAqDKzG,KAAK,sBAJN,SAMC,eAACjE,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,WAAtC,UACC,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,oBAAID,UAAU,oBAAd,wBAED,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAGD,UAAU,gBAA5B,SACC,cAACsF,EAAA,EAAD,CAAYC,QArBA,WACnBlH,EAAMmH,UACNnH,EAAMyM,aAAaxM,IAmBZ,SAAkC,cAAC,IAAD,QAEnC,cAACwB,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,SACC,eAACH,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,uBAAtC,UACC,eAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,UACC,cAACmG,EAAA,EAAD,CAAkB1D,MAAM,UAAU2D,QAAS,cAAC0E,GAAA,EAAD,IAAWnF,MAAM,mBAC5D,8BACEsE,EAAoBxG,KAAI,SAAAwD,GAAC,OACzB,cAAC,EAAD,CAEC5I,SAAUA,EACVU,OAAO,UACPuB,SAAS,YACTC,YAAY,0JACZC,MAAOnC,EAASmC,MAChBC,OAAO,qBACPrB,MAAM,GARP,gBACe6H,YAYjB6C,GACA,eAAC,WAAD,WACC,cAACjK,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACwF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,OACHC,MAAM,OACNE,WAAW,gCACXD,KAAK,QACLnD,MAAOlD,EACPuG,MAAO6D,EACP5D,SAAUyE,GACVnK,MAAO,CAAE6F,MAAO,YAGlB,cAACrG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACwF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,aACHC,MAAM,aACNC,KAAK,QACLC,WAAW,GACXpD,MAAOyE,EACPpB,MAAO2D,EACP1D,SAAUuE,GACVjK,MAAO,CAAE6F,MAAO,YAGlB,cAACrG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,yBACA,cAAC8F,GAAA,EAAD,yBACCtF,GAAG,cACHC,MAAM,cACNC,KAAK,QACLnD,MAAO+F,SAASlK,EAAQC,IACxBwH,SAAU,SAAC2C,GAAD,OAAO+B,GAAoB/B,EAAElG,OAAOC,MAAO,OACrDwI,kBAAkB,QACd7B,IAPL,IAQC/I,MAAO4I,WAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,4BACA,cAAC8F,GAAA,EAAD,yBACCtF,GAAG,iBACHC,MAAM,iBACNC,KAAK,QACLnD,MAAO+F,SAASlK,EAAQE,IACxBuH,SAAU,SAAC2C,GAAD,OAAO+B,GAAoB/B,EAAElG,OAAOC,MAAO,OACrDwI,kBAAkB,QACd7B,IAPL,IAQC/I,MAAO4I,WAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,0BACA,cAAC8F,GAAA,EAAD,yBACCtF,GAAG,eACHC,MAAM,eACNC,KAAK,QACLnD,MAAO+F,SAASlK,EAAQG,IACxBsH,SAAU,SAAC2C,GAAD,OAAO+B,GAAoB/B,EAAElG,OAAOC,MAAO,OACrDwI,kBAAkB,QACd7B,IAPL,IAQC/I,MAAO4I,WAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,2BACA,cAAC8F,GAAA,EAAD,yBACCtF,GAAG,gBACHC,MAAM,gBACNC,KAAK,QACLnD,MAAO+F,SAASlK,EAAQI,IACxBqH,SAAU,SAAC2C,GAAD,OAAO+B,GAAoB/B,EAAElG,OAAOC,MAAO,OACrDwI,kBAAkB,QACd7B,IAPL,IAQC/I,MAAO4I,WAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACiG,GAAA,EAAD,CAAYxF,GAAG,iBAAf,uDACA,eAACyF,GAAA,EAAD,CACC1F,UAAQ,EACRC,GAAG,WACH0F,QAAQ,iBACRzF,MAAM,4CACNC,KAAK,QACLnD,MAAOxD,EAEP8G,SA5JqB,SAACxD,GACnC,IAAM8I,EAAM7C,SAASjG,EAAMC,OAAOC,OACpB4I,GAAK,GAAKA,GAAK,IAE5BrB,EAAkBqB,GAClBnB,EAAuB,YAAI5F,MAAM+G,GAAK9G,SACtClG,EAASY,eAAiBoM,EAC1Bd,OAsJYlK,MAAO,CAAE6F,MAAO,QATjB,UAWC,cAACoF,GAAA,EAAD,CAAU7I,MAAO,EAAjB,eACA,cAAC6I,GAAA,EAAD,CAAU7I,MAAO,EAAjB,eACA,cAAC6I,GAAA,EAAD,CAAU7I,MAAO,EAAjB,eACA,cAAC6I,GAAA,EAAD,CAAU7I,MAAO,EAAjB,eACA,cAAC6I,GAAA,EAAD,CAAU7I,MAAO,EAAjB,uBAIH,cAAC5C,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACiG,GAAA,EAAD,CAAYxF,GAAG,sBAAf,4BACA,eAACyF,GAAA,EAAD,CACC1F,UAAQ,EACRC,GAAG,gBACH0F,QAAQ,sBACRzF,MAAM,iBACNC,KAAK,QACLnD,MAAOvD,EACP6G,SAtLoB,SAACxD,GAClC4H,EAAiB5H,EAAMC,OAAOC,OAC9BpE,EAASa,cAAgBqD,EAAMC,OAAOC,MACtC8H,MAoLalK,MAAO,CAAE6F,MAAO,QARjB,UAUC,cAACoF,GAAA,EAAD,CAAU7I,MAAM,OAAhB,kBACA,cAAC6I,GAAA,EAAD,CAAU7I,MAAM,QAAhB,mCAQP,cAAC5C,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAID,UAAU,iBAA7B,SACC,eAACF,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,uBAAtC,UACC,eAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,UACC,cAACmG,EAAA,EAAD,CAAkB1D,MAAM,OAAO2D,QAAS,cAAC0E,GAAA,EAAD,IAAWnF,MAAM,oBACzD,cAAC,EAAD,CACCtH,SAAUA,EACVU,OAAO,OACPuB,SAAS,YACTC,YAAY,0JACZC,MAAOnC,EAASmC,MAChBC,OAAO,qBACPrB,MAAM,QAGN0K,GACD,eAAC,WAAD,WACC,cAACjK,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACwF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,OACHC,MAAM,OACNE,WAAW,gCACXD,KAAK,QACLnD,MAAOlD,EACPuG,MAAO6D,EACP5D,SAAUyE,GACVnK,MAAO,CAAE6F,MAAO,YAGlB,cAACrG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACwF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,aACHC,MAAM,aACNC,KAAK,QACLC,WAAW,GACXpD,MAAOyE,EACPpB,MAAO2D,EACP1D,SAAUuE,GACVjK,MAAO,CAAE6F,MAAO,YAGlB,cAACrG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,yBACA,cAAC8F,GAAA,EAAD,yBACCtF,GAAG,cACHC,MAAM,cACNC,KAAK,QACLnD,MAAO+F,SAASlK,EAAQC,IACxBwH,SAAU,SAAC2C,GAAD,OAAO+B,GAAoB/B,EAAElG,OAAOC,MAAO,OACrDwI,kBAAkB,QACd7B,IAPL,IAQC/I,MAAO4I,WAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,4BACA,cAAC8F,GAAA,EAAD,yBACCtF,GAAG,iBACHC,MAAM,iBACNC,KAAK,QACLnD,MAAO+F,SAASlK,EAAQE,IACxBuH,SAAU,SAAC2C,GAAD,OAAO+B,GAAoB/B,EAAElG,OAAOC,MAAO,OACrDwI,kBAAkB,QACd7B,IAPL,IAQC/I,MAAO4I,WAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,mCACA,cAAC8F,GAAA,EAAD,yBACCtF,GAAG,gBACHC,MAAM,wBACNC,KAAK,QACLnD,MAAO+F,SAASlK,EAAQK,KACxBoH,SAAU,SAAC2C,GAAD,OAAO+B,GAAoB/B,EAAElG,OAAOC,MAAO,QACrDwI,kBAAkB,QACd7B,IAPL,IAQC/I,MAAO4I,WAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,oCACA,cAAC8F,GAAA,EAAD,yBACCtF,GAAG,iBACHC,MAAM,yBACNC,KAAK,QACLnD,MAAO+F,SAASlK,EAAQM,KACxBmH,SAAU,SAAC2C,GAAD,OAAO+B,GAAoB/B,EAAElG,OAAOC,MAAO,QACrDwI,kBAAkB,QACd7B,IAPL,IAQC/I,MAAO4I,WAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,mCACA,cAAC8F,GAAA,EAAD,yBACCtF,GAAG,gBACHC,MAAM,wBACNC,KAAK,QACLnD,MAAO+F,SAASlK,EAAQO,KACxBkH,SAAU,SAAC2C,GAAD,OAAO+B,GAAoB/B,EAAElG,OAAOC,MAAO,QACrDwI,kBAAkB,QACd7B,IAPL,IAQC/I,MAAO4I,WAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,oCACA,cAAC8F,GAAA,EAAD,yBACCtF,GAAG,iBACHC,MAAM,yBACNC,KAAK,QACLnD,MAAO+F,SAASlK,EAAQQ,KACxBiH,SAAU,SAAC2C,GAAD,OAAO+B,GAAoB/B,EAAElG,OAAOC,MAAO,QACrDwI,kBAAkB,QACd7B,IAPL,IAQC/I,MAAO4I,WAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,8BACA,cAAC8F,GAAA,EAAD,CACCtF,GAAG,gBACHC,MAAM,mBACNlD,MAAO+F,SAAyB,IAAhBxJ,IAChB+G,SAvVsB,SAACxD,GACpC6H,GAAmB7H,EAAMC,OAAOC,MAAM,KACtCpE,EAASW,gBAAkBuD,EAAMC,OAAOC,MAAM,IAC9C8H,MAqVa3E,KAAK,QACLqF,kBAAkB,OAClB5B,IAAK,GAAIjF,IAAK,GACdkF,MAAO,CAAC,CAAC7G,MAAO,GAAIkD,MAAO,OAAQ,CAAClD,MAAO,GAAIkD,MAAO,QACtDtF,MAAO4I,UAIV,cAACpJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC8F,GAAA,EAAD,CAAW7F,UAAU,SAArB,6BACA,cAAC8F,GAAA,EAAD,CACCtF,GAAG,iBACHC,MAAM,kBACNlD,MAAO+F,SAASrJ,IAChB4G,SAlWqB,SAACxD,GACnC8H,GAAkB9H,EAAMC,OAAOC,OAC/BpE,EAASc,eAAiBoD,EAAMC,OAAOC,MACvC8H,MAgWa3E,KAAK,QACLqF,kBAAkB,OAClBM,KAAM,EACNlC,IAAK,EAAGjF,IAAK,GACb/D,MAAO4I,+B,8CCraP,SAASuC,GAAgBpN,GACvC,MAAmB0C,WAAe1C,EAAMC,UAAjCA,EAAP,oBACA,EAAgDyC,WAAe1C,EAAMC,SAASY,gBAAvEA,EAAP,oBACA,EAAwC6B,WAAe1C,EAAMC,SAASU,QAA/DA,EAAP,oBACA,EAAkD+B,YAAe,GAAjE,mBAAO2K,EAAP,KAA0BC,EAA1B,KAsDA,GAHA5K,aAAgB,cACb,CAAC7B,EAAgBF,KAEhBV,EACH,OAAO,KAGR,IAAM4F,EAA4B,YAAXlF,EACjBmF,EAAc,CACnB3F,GAAI4F,KAAKC,IAAI,EAAG,GAAG/F,EAASC,QAAQC,IAAI,KACxCC,GAAI2F,KAAKC,IAAI,EAAG,GAAG/F,EAASC,QAAQE,IAAI,KACxCC,GAAI0F,KAAKC,IAAI,EAAG,IAAIH,EAAiB5F,EAASC,QAAQG,GAAKJ,EAASC,QAAQK,MAAM,KAClFD,GAAIyF,KAAKC,IAAI,EAAG,IAAIH,EAAiB5F,EAASC,QAAQI,GAAKL,EAASC,QAAQQ,MAAM,MAGnF,OACC,eAAC,WAAD,WACC,cAAC,GAAD,CACCT,SAAUA,EACVwM,aAAczM,EAAMyM,aACpBnG,KAAM+G,EACNlG,QAlE8B,WAChCmG,GAAqB,MAmEpB,sBAAK3L,UAAU,6BAAf,UACC,qBAAIA,UAAU,cAAd,sCACC,cAAC2G,EAAA,EAAD,CAASC,MAAM,+FAA+FC,UAAU,QAAxH,SACC,cAACvB,EAAA,EAAD,CAAYO,KAAK,QAAjB,SACC,cAAC,IAAD,WAIH,sBAAK7F,UAAU,yBAAf,UACC,cAACsF,EAAA,EAAD,CAAYC,QApCS,WACxBqG,OAAOC,SAmCJ,SAAuC,cAAC,KAAD,MACvC,cAACvG,EAAA,EAAD,CAAYC,QAjFgB,WAC/BoG,GAAqB,IAgFlB,SAA8C,cAAC,KAAD,YAGhD,cAAC7L,EAAA,EAAD,yBAAMC,MAAI,EAACC,UAAU,mBAAsBmE,GAA3C,aACE9F,EAAM8J,YAAc9J,EAAM8J,WAAWpF,OA9ElB,SAACoF,EAAY2D,EAAiBC,GACrC,SAAZA,IACFD,EAAkB,GAGnB,IAAIE,EAAS,GASb,OARA7D,EAAWjF,SAAQ,SAAAqF,GAClB,IAAK,IAAIrB,EAAE,EAAGA,EAAEqB,EAAUlB,SAAUH,IACnC8E,EAAO1I,KAAKiF,MAIDyD,EAAOC,aAAY,SAACC,EAAEhF,EAAEiF,EAAEC,GAAP,OAAcF,EAAE5I,KAAK8I,EAAE/D,OAAO,EAAEyD,IAAkBI,IAAG,IAEzExI,KAAI,SAAC2I,EAAKH,GACrB,OACA,qBAAKlM,UAAU,eAAf,SACEqM,EAAI3I,KAAI,SAACkC,EAAO0G,GAChB,IAAMpE,EAAQgE,EAAEJ,EAAgBQ,EAChC,OACC,cAAC,EAAD,CACChO,SAAUA,EACVU,OAAQV,EAASU,OAEjBuB,SAAUqF,EAAM7B,KAChBvD,YAAaoF,EAAMpF,YACnBC,MAAOnC,EAASmC,MAChBC,OAAQkF,EAAMlF,QAPf,uBAGsBwH,QAPzB,0BAAsDgE,OA8DNK,CAAelO,EAAM8J,WAAY7J,EAASY,eAAgBZ,EAASU,QAAU,WChGhI,IAAMwN,GAAkB,CACvB,KAAQ,qBACR,MAAS,aACT,OAAU,UACV,eAAkB,EAClB,cAAiB,OACjB,gBAAmB,IACnB,eAAkB,EAClB,QAAW,CAAC,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,KAG9E,SAASC,KAEvB,MAAoC1L,WAAe,IAAnD,mBAAOoH,EAAP,KAAmBuE,EAAnB,KACA,EAAgC3L,gBAAegH,GAA/C,mBAAOzJ,EAAP,KAAiBqO,EAAjB,KA0BA,OATA5L,aAAgB,WACf,IAAM6L,EAAU,IAAIC,IACpBH,EAAcE,EAAQE,IAAI,eAAiB,IAC3CH,EAAYC,EAAQE,IAAI,aAAeN,MACrC,IAEHzL,aAAgB,cACb,CAACoH,EAAY7J,IAGf,eAAC0G,EAAA,EAAD,CAAKhF,UAAU,MAAf,UACE1B,GAAa,cAAC,EAAD,CACbA,SAAUA,EACVgK,eA3BoB,SAACyE,GACvBL,EAAc,YAAIvE,IAClB,IAAMyE,EAAU,IAAIC,IACpBD,EAAQI,IAAI,aAAcC,KAAKC,UAAU/E,GAAa,CAAEgF,KAAM,MAC9DnJ,QAAQC,IAAI2I,EAAQE,IAAI,gBAwBtB3E,WAAYA,IAEZ7J,GAAa,cAAC,GAAD,CACb6J,WAAYA,EACZ7J,SAAUA,EACVwM,aA1BkB,SAACsC,GACrBT,EAAYS,GACZ,IAAMR,EAAU,IAAIC,IACpBD,EAAQI,IAAI,WAAYC,KAAKC,UAAU5O,GAAW,CAAE6O,KAAM,MAC1DnJ,QAAQC,IAAI2I,EAAQE,IAAI,mBC1B1B,IAAMO,GAAS,CACd,YACA,OACA,UACA,aACA,eACA,aACA,cACA,kBACA,cACA,kBACA,uBACA,eACA,sBACA,QACA,UACA,SACA,YACA,SAGc,SAASC,KAEvB,MAAsCvM,WAAe,GAArD,mBAAOwM,EAAP,KAAoBC,EAApB,KACA,EAA0CzM,WAAe,IAAzD,mBAAO0M,EAAP,KAAsBC,EAAtB,KAiBMC,EAAoB,SAACC,IACV,IAAIf,KACZG,IAAI,kBAAmBY,EAAiB,CAAET,KAAM,MACxDK,EAAeI,IAahB,OAVA7M,aAAgB,WACf,IAAM6L,EAAU,IAAIC,IACdgB,EAAepF,SAASmE,EAAQE,IAAI,qBAAuB,EACjEU,EAAeK,KACb,IAEH9M,aAAgB,WACf2M,EAAiB,aAAD,OAAcL,GAAOE,OACnC,CAACA,IAGH,sBAAKvN,UAAWyN,EAAhB,UACC,eAACK,EAAA,EAAD,CAAW9N,UAAU,oCAArB,UACC,oBAAIA,UAAU,YAAd,yBACA,sBAAKA,UAAU,6CAAf,UACC,cAACsF,EAAA,EAAD,CAAYC,QAnCS,WACxB,IAAIqI,EAAkBL,EAAc,EAChCK,EAAkB,IACrBA,EAAkBP,GAAOtK,OAAS,GAEnC4K,EAAkBC,IA8Bf,SAAuC,cAAC,IAAD,MACvC,cAACtI,EAAA,EAAD,CAAYC,QA7BK,WACpB,IAAIqI,EAAkBL,EAAc,EAChCK,GAAmBP,GAAOtK,SAC7B6K,EAAkB,GAEnBD,EAAkBC,IAwBf,SAAmC,cAAC,IAAD,YAGrC,cAACE,EAAA,EAAD,CAAW9N,UAAU,YAArB,SACC,cAAC,GAAD,MAED,cAAC8N,EAAA,EAAD,CAAW9N,UAAU,iBAArB,SACC,mBAAGA,UAAU,kBAAb,oDC1EJ,IAAM+N,GAAQC,YAAY,CACzBC,WAAY,CACX1O,WAAY,CACX,OACA,QACA,qBACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACCqE,KAAK,KACPsK,OAAQ,CACNC,SAAU,OACVC,WAAY,UAcDC,OATf,WACE,OACE,eAACC,EAAA,EAAD,CAAeP,MAAOA,GAAtB,UACF,cAACQ,EAAA,EAAD,IACA,cAAC,GAAD,QCtBaC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.27d1ee4a.chunk.js","sourcesContent":["import './Label.css';\r\nimport './LabelWideRow.css';\r\nimport * as React from 'react';\r\nimport { Grid } from '@mui/material';\r\n\r\nexport default function Label(props) {\r\n\t\r\n\tif (!props || !props.settings || !props.settings.padding) {\r\n\t\treturn null;\r\n\t}\r\n\tconst {pt, pb, pl, pr, pl1, pr1, pl2, pr2} = props.settings.padding;\r\n\tconst layout = props.layout || \"columns\";\r\n\tconst leftColumnWidth = props.settings.leftColumnWidth;\r\n\tconst layoutNbPerRow = props.settings.layoutNbPerRow;\r\n\tconst textAlignment = props.settings.textAlignment;\r\n\tconst seperatorWidth = props.settings.seperatorWidth;\r\n\tconst demo = !!props.demo;\r\n\r\n\tconst styleFont = {fontFamily: props.settings.font};\r\n\tconst styleFontAlign = {fontFamily: props.settings.font, textAlign: textAlignment};\r\n\tconst styleAlign = {textAlign: textAlignment};\r\n\tconst styleBackgroundColor = {backgroundColor:  demo ? '#f8f8f8' : 'transparent'};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{layout === \"columns\" ? (\r\n\t\t\t\t<Grid item \r\n\t\t\t\t\tclassName=\"labelGridItem\" \r\n\t\t\t\t\txs={12/layoutNbPerRow} \r\n\t\t\t\t\tpaddingTop={pt+'px'}\r\n\t\t\t\t\tpaddingBottom={pb+'px'}\r\n\t\t\t\t\tpaddingLeft={pl+'px'}\r\n\t\t\t\t\tpaddingRight={pr+'px'}\r\n\t\t\t\t\tstyle={styleBackgroundColor}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p style={styleFontAlign} className=\"labelSoapName\">{props.soapName}</p>\r\n\t\t\t\t\t<p style={styleAlign} className=\"labelSoapIngredients\">{props.ingredients}</p>\r\n\t\t\t\t\t{props.brand && (<p style={styleAlign} className=\"labelSoapBrand\">{props.brand}</p>)}\r\n\t\t\t\t\t{props.phrase && (<p style={styleAlign} className=\"labelSoapPhrase\">{props.phrase}</p>)}\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t<Grid xs={12} item\r\n\t\t\t\t\tclassName=\"labelWideRowGridItem\"\r\n\t\t\t\t\tpaddingTop={pt+'px'}\r\n\t\t\t\t\tpaddingBottom={pb+'px'}\r\n\t\t\t\t\tstyle={styleBackgroundColor}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item \r\n\t\t\t\t\t\txs={12*leftColumnWidth} \r\n\t\t\t\t\t\tpaddingLeft={pl1+'px'}\r\n\t\t\t\t\t\tpaddingRight={pr1+'px'}\r\n\t\t\t\t\t\tclassName=\"labelWideRowGridItemLeft\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p className=\"labelWideRowSoapIngredients\">{props.ingredients}</p>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item \r\n\t\t\t\t\t\txs={12*(1-leftColumnWidth)} \r\n\t\t\t\t\t\tpaddingLeft={pl2+'px'}\r\n\t\t\t\t\t\tpaddingRight={pr2+'px'}\r\n\t\t\t\t\t\tclassName=\"labelWideRowGridItemRight\" \r\n\t\t\t\t\t\tstyle={{borderLeft: `${seperatorWidth}px solid #000`}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{props.brand && (<p className=\"labelWideRowSoapBrand\">{props.brand}</p>)}\r\n\t\t\t\t\t\t<p style={styleFont} className=\"labelWideRowSoapName\">{props.soapName}</p>\r\n\t\t\t\t\t\t{props.phrase && (<p className=\"labelWideRowSoapPhrase\">{props.phrase}</p>)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './LabelModal.css';\r\nimport * as React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport { TextField } from '@mui/material';\r\nimport { FormControl } from '@mui/material';\r\nimport { FormControlLabel } from '@mui/material';\r\nimport { Checkbox } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport { Tooltip } from '@mui/material';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport BackspaceIcon from '@mui/icons-material/Backspace';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nimport Label from './labelLayouts/Label';\r\n\r\nconst translations = {\r\n\t'Almond Oil, sweet': 'Huile d\\'amande douce',\r\n\t'Aloe Butter': 'Beurre d\\'aloès',\r\n\t'Argan Oil': 'Huile d\\'argane',\r\n\t'Avocado Oil': 'Huile d\\'avocat',\r\n\t'Canola Oil': 'Huile de canola',\r\n\t'Castor Oil': 'Huile de ricin',\r\n\t'Cocoa Butter': 'Beurre de cacao',\r\n\t'Coconut Oil, 76 deg': 'Huile de coconut',\r\n\t'Coconut Oil, 92 deg': 'Huile de coconut',\r\n\t'Coconut Oil, fractionated': 'Huile de coconut',\r\n\t'Corn Oil': 'Huile de maïs',\r\n\t'Grapeseed Oil': 'Huile de pépins de raisin',\r\n\t'Kokum Butter': 'Beurre de kokum',\r\n\t'Jojoba Oil (a Liquid Wax Ester)': 'Huile de jojoba',\r\n\t'Mango Seed Butter': 'Beurre de mangue',\r\n\t'Olive Oil': 'Huile d\\'olive',\r\n\t'Palm Oil': 'Huile de palme',\r\n\t'Rice Bran Oil, refined': 'Huile de riz',\r\n\t'Safflower Oil': 'Huile de carthame',\r\n\t'Sesame Oil': 'Huile de sésame',\r\n\t'Shea Butter': 'Beurre de karité',\r\n\t'Sunflower Oil': 'Huile de tournesol',\r\n}\r\n\r\nexport default function LabelModal(props) {\r\n\tconst { editLabel } = props;\r\n\tconst [settings] = React.useState(props.settings);\r\n\tconst [useThinSpace, setUseThinSpace] = React.useState(false);\r\n\tconst [useSoapCalcRecipe, setUseSoapCalcRecipe] = React.useState(false);\r\n\tconst [translateFrench, setTranslateFrench] = React.useState(false);\r\n\tconst [soapName, setSoapName] = React.useState('');\r\n\tconst [soapNameError, setSoapNameError] = React.useState(false);\r\n\tconst [soapIngredients, setSoapIngredients] = React.useState('');\r\n\tconst [soapCode, setSoapCode] = React.useState('');\r\n\tconst [soapPhrase, setSoapPhrase] = React.useState('');\r\n\tconst [soapFragrances, setSoapFragrances] = React.useState('');\r\n\tconst [soapColorants, setSoapColorants] = React.useState('');\r\n\r\n\tconst [soapRecipeError, setSoapRecipeError] = React.useState(false);\r\n\t\r\n\tconst [ingredientsCodeOutput, setIngredientsCodeOutput] = React.useState('');\r\n\t\r\n\tconst handleUseThinSpaceChange = (event) => {\r\n\t\tconst _useThinSpace = !!event.target.checked;\r\n\t\tsetUseThinSpace(_useThinSpace);\r\n\t\tsetSoapName(_useThinSpace ? soapName.replaceAll(\" \", \" \") : soapName.replaceAll(\" \", \" \"));\r\n\t};\r\n\tconst handleUseSoapCalcRecipeChange = (event) => {\r\n\t\tsetUseSoapCalcRecipe(!!event.target.checked);\r\n\t};\r\n\tconst handleTranslateFrenchChange = (event) => {\r\n\t\tsetTranslateFrench(!!event.target.checked);\r\n\t};\r\n\tconst handleSoapNameChange = (event) => {\r\n\t\tconst _soapName = event.target.value;\r\n\t\tsetSoapName(useThinSpace ? _soapName.replaceAll(\" \", \" \") : _soapName.replaceAll(\" \", \" \"));\r\n\t};\r\n\tconst handleSoapPhraseChange = (event) => {\r\n\t\tsetSoapPhrase(event.target.value);\r\n\t};\r\n\tconst handleSoapFragrancesChange = (event) => {\r\n\t\tsetSoapFragrances(event.target.value);\r\n\t};\r\n\tconst handleSoapColorantsChange = (event) => {\r\n\t\tsetSoapColorants(event.target.value);\r\n\t};\r\n\r\n\tconst handleSoapRecipeChange = (event) => {\r\n\t\tif(useSoapCalcRecipe) {\r\n\t\t\tsetSoapCode(event.target.value);\r\n\t\t} else {\r\n\t\t\tsetSoapIngredients(event.target.value);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleClickSave = () => {\r\n\t\tsetSoapNameError(!soapName);\r\n\t\tsetSoapRecipeError(!soapCode);\r\n\t\tif(soapName && soapCode && ingredientsCodeOutput) {\r\n\t\t\t// name, ingredients, soapCode, soapIngredients, soapFragrances, soapColorants, phrase, translateFrench\r\n\t\t\tprops.saveLabel(\r\n\t\t\t\tsoapName, \r\n\t\t\t\tingredientsCodeOutput, \r\n\t\t\t\tsoapCode, \r\n\t\t\t\tsoapIngredients, \r\n\t\t\t\tsoapFragrances, \r\n\t\t\t\tsoapColorants, \r\n\t\t\t\tsoapPhrase, \r\n\t\t\t\tuseSoapCalcRecipe, \r\n\t\t\t\ttranslateFrench\r\n\t\t\t);\r\n\t\t\tprops.onClose();\r\n\t\t}\r\n\t};\r\n\r\n\tconst generateIngredients = () => {\r\n\t\tlet allIngredients = soapCode;\r\n\r\n\t\tif (useSoapCalcRecipe) {\r\n\t\t\tif (!soapCode) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst soapCodeData = {};\r\n\r\n\t\t\tconst rxMatchWater = soapCode.match(/^Water [0-9.]+ [0-9.]+ ([0-9.]+$)/m);\r\n\t\t\tif (rxMatchWater && rxMatchWater.length > 1 && rxMatchWater[1]) {\r\n\t\t\t\tsoapCodeData[translateFrench ? \"Eau\" : \"Water\"] = rxMatchWater[1];\r\n\t\t\t}\r\n\r\n\t\t\tconst rxMatchLye = soapCode.match(/^Lye - NaOH [0-9.]+ [0-9.]+ ([0-9.]+$)/m);\r\n\t\t\tif (rxMatchLye && rxMatchLye.length > 1 && rxMatchLye[1]) {\r\n\t\t\t\tsoapCodeData[translateFrench ? \"Hydroxyde de sodium\" : \"Lye\"] = rxMatchLye[1];\r\n\t\t\t}\r\n\r\n\t\t\t// 1 Coconut Oil, 76 deg 30.00 0.595 9.52 270.00\r\n\t\t\tconst arrOils = [...soapCode.matchAll(/^[0-9.]+ ([\\s\\w,]+) [0-9.]+\\.[0-9.]+ [0-9.]+ [0-9.]+ ([0-9.]+)$/gm)];\r\n\t\t\tarrOils.forEach((oilElem) => {\r\n\t\t\t\tsoapCodeData[translateFrench ? translations[oilElem[1]] : oilElem[1]] = oilElem[2];\r\n\t\t\t});\r\n\r\n\t\t\tconst sortableRecipeData = [];\r\n\t\t\tfor (let soapItem in soapCodeData) {\r\n\t\t\t\tsortableRecipeData.push([soapItem, soapCodeData[soapItem]]);\r\n\t\t\t}\r\n\t\t\tsortableRecipeData.sort(function(a, b) {\r\n\t\t\t\treturn b[1] - a[1];\r\n\t\t\t});\r\n\r\n\t\t\tallIngredients = sortableRecipeData.map((ingredient) => ingredient[0]).join(\", \").toLowerCase();\r\n\t\t} else {\r\n\t\t\tallIngredients = soapIngredients;\r\n\t\t}\r\n\r\n\t\tsetSoapIngredients(allIngredients);\r\n\r\n\t\tconst ingredientsLabel = translateFrench ? \"Ingrédients\" : \"Ingredients\";\r\n\t\tallIngredients = `${ingredientsLabel}: ${allIngredients}, ${soapFragrances || \"fragrance(s)\"}, ${soapColorants || \"colorant(s)\"}.`\r\n\t\tsetIngredientsCodeOutput(allIngredients);\r\n\t};\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tgenerateIngredients();\r\n\t}, [soapCode, soapIngredients, soapColorants, soapFragrances, soapPhrase, useThinSpace, useSoapCalcRecipe, translateFrench]);\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tif(editLabel && editLabel.name && editLabel.ingredients) {\r\n\t\t\tconsole.log(editLabel);\r\n\t\t\tsetSoapName(editLabel.name);\r\n\t\t\tsetSoapPhrase(editLabel.phrase);\r\n\t\t\tsetSoapCode(editLabel.soapCode);\r\n\t\t\tsetSoapIngredients(editLabel.soapIngredients || editLabel.ingredients);\r\n\t\t\tsetSoapFragrances(editLabel.soapFragrances);\r\n\t\t\tsetSoapColorants(editLabel.soapColorants);\r\n\t\t\tsetTranslateFrench(editLabel.translateFrench);\r\n\t\t\tsetUseSoapCalcRecipe(editLabel.useSoapCalcRecipe && !!editLabel.soapCode);\r\n\t\t} else {\r\n\t\t\tsetSoapName(\"\");\r\n\t\t\tsetSoapPhrase(\"\");\r\n\t\t\tsetSoapCode(\"\");\r\n\t\t\tsetSoapIngredients(\"\");\r\n\t\t\tsetSoapFragrances(\"\");\r\n\t\t\tsetSoapColorants(\"\");\r\n\t\t\tsetTranslateFrench(false);\r\n\t\t\tsetUseSoapCalcRecipe(true);\r\n\t\t}\r\n\t}, [editLabel]);\r\n\r\n\tconst handleClose = () => {\r\n\t\tprops.onClose();\r\n\t};\r\n\t\r\n\tconst isColumnLayout = settings.layout === \"columns\";\r\n\tconst pagePadding = {\r\n\t\tpt: Math.max(0, 20-settings.padding.pt)+'px',\r\n\t\tpb: Math.max(0, 20-settings.padding.pb)+'px',\r\n\t\tpl: Math.max(0, 20-(isColumnLayout ? settings.padding.pl : settings.padding.pl1))+'px',\r\n\t\tpr: Math.max(0, 20-(isColumnLayout ? settings.padding.pr : settings.padding.pr2))+'px',\r\n\t};\r\n\tconst arrPerRow = [...Array(isColumnLayout ? settings.layoutNbPerRow : 1).keys()];\r\n\r\n\tconst tooltipSoapCode = `You can copy and paste the soapcalc.net generated recipe, \r\n\t\tand this if checked, all ingredients will be extracted${translateFrench ? \", translated in french\" : \"\"} and ordered by weight.`;\r\n\t\r\n\treturn (\r\n\t\t<Dialog open={props.open} scroll=\"body\" maxWidth={'1000px'}>\r\n\t\t\t<DialogContent dividers={false}>\r\n\t\t\t\t<Box className=\"modalBox\">\r\n\t\t\t\t\t<FormControl fullWidth={true} component=\"form\" className=\"form\">\r\n\t\t\t\t\t\t<Grid container spacing={2} className=\"gridForm\">\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<h2 className=\"secondTitle title\">New Soap Label</h2>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} className=\"gridItemClose\">\r\n\t\t\t\t\t\t\t\t<IconButton onClick={handleClose}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tid=\"soap-name\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Name\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapName}\r\n\t\t\t\t\t\t\t\t\terror={soapNameError}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapNameChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControlLabel control={<Checkbox checked={useThinSpace} onChange={handleUseThinSpaceChange} />} label=\"Use thin spaces in Soap Name\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"phrase\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Phrase\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapPhrase}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapPhraseChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{useSoapCalcRecipe ? (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tid=\"soap-code\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Code\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"tfRecipeCode\"\r\n\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\trows={8}\r\n\t\t\t\t\t\t\t\t\t\tvalue={soapCode}\r\n\t\t\t\t\t\t\t\t\t\terror={soapRecipeError}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleSoapRecipeChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tid=\"soap-ingredients\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Ingredients\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"tfRecipeCode\"\r\n\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\trows={8}\r\n\t\t\t\t\t\t\t\t\t\tvalue={soapIngredients}\r\n\t\t\t\t\t\t\t\t\t\terror={soapRecipeError}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleSoapRecipeChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel \r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox \r\n\t\t\t\t\t\t\t\t\tchecked={useSoapCalcRecipe} \r\n\t\t\t\t\t\t\t\t\tonChange={handleUseSoapCalcRecipeChange} />} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Extract ingredients from soapcalc.net recipe\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Tooltip title={tooltipSoapCode} placement=\"right\">\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t<InfoIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel \r\n\t\t\t\t\t\t\t\t\tdisabled={!useSoapCalcRecipe}\r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox \r\n\t\t\t\t\t\t\t\t\tchecked={translateFrench} \r\n\t\t\t\t\t\t\t\t\tonChange={handleTranslateFrenchChange} />} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Translate ingredients in french.\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"soap-fragrances\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Fragrance(s)\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapFragrances}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapFragrancesChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"soap-colorants\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Colorant(s)\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapColorants}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapColorantsChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemButtons\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tendIcon={<BackspaceIcon />}>Clear</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tendIcon={<SaveIcon />} \r\n\t\t\t\t\t\t\t\t\tonClick={handleClickSave}>Save</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h2 className=\"secondTitle\">Label Preview</h2>\r\n\t\t\t\t\t<Grid className=\"gridResult\" {...pagePadding}>\r\n\t\t\t\t\t\t{arrPerRow.map(i => (\r\n\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\tkey={`label-${i}`}\r\n\t\t\t\t\t\t\t\tsettings={settings}\r\n\t\t\t\t\t\t\t\tlayout={settings.layout}\r\n\t\t\t\t\t\t\t\tsoapName={soapName}\r\n\t\t\t\t\t\t\t\tingredients={ingredientsCodeOutput}\r\n\t\t\t\t\t\t\t\tbrand={settings.soapBrand}\r\n\t\t\t\t\t\t\t\tphrase={soapPhrase}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","\r\nimport './QuantitySelector.css';\r\nimport * as React from 'react';\r\nimport { IconButton } from '@mui/material';\r\n\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\n// const styles = {\r\n// \ticonButton: {\r\n// \t\tpadding: '2px',\r\n// \t\t'svg': {\r\n// \t\t\twidth: '20px',\r\n// \t\t\theight: '20px',\r\n// \t\t},\r\n// \t}\r\n// }\r\n\r\nexport default function QuantitySelector(props) {\r\n\tconst [quantity, setQuantity] = React.useState(props.quantity);\r\n\r\n\tconst handleRemove = () => {\r\n\t\tupdateQuantity(quantity-1);\r\n\t};\r\n\tconst handleAdd = () => {\r\n\t\tupdateQuantity(quantity+1);\r\n\t};\r\n\tconst updateQuantity = (newQty) => {\r\n\t\tsetQuantity(newQty);\r\n\t\tprops.handleUpdateQty(newQty);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"wrapperQuantity\">\r\n\t\t\t<IconButton size=\"small\" className=\"iconButton\" onClick={handleRemove}><RemoveIcon/></IconButton>\r\n\t\t\t<span className=\"labelQuantity\">{quantity}</span>\r\n\t\t\t<IconButton size=\"small\" className=\"iconButton\" onClick={handleAdd}><AddIcon/></IconButton>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './SoapLabels.css';\r\nimport * as React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport LabelModal from './LabelModal';\r\nimport QuantitySelector from './components/QuantitySelector';\r\n\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\n\r\n\r\nexport default function LabelsList(props) {\r\n\tconst [settings] = React.useState(props.settings);\r\n\tconst [confirmDeleteOpen, setConfirmDeleteOpen] = React.useState(false);\r\n\tconst [labelModalOpen, setLabelModalOpen] = React.useState(false);\r\n\tconst [editLabel, setEditLabel] = React.useState(undefined);\r\n\r\n\t// Label Modal\r\n\tconst handleLabelModalOpen = () => {\r\n\t\tsetLabelModalOpen(true);\r\n\t\tsetEditLabel(undefined);\r\n\t}\r\n\tconst handleLabelModalClose = () => {\r\n\t\tsetLabelModalOpen(false);\r\n\t\tsetEditLabel(undefined);\r\n\t}\r\n\t\r\n\t// (New / Edit)\r\n\tconst saveLabel = (name, ingredients, soapCode, soapIngredients, soapFragrances, soapColorants, phrase, useSoapCalcRecipe, translateFrench) => {\r\n\t\tif (editLabel) {\r\n\t\t\teditLabel.name = name;\r\n\t\t\teditLabel.ingredients = ingredients;\r\n\t\t\teditLabel.soapCode = soapCode;\r\n\t\t\teditLabel.soapIngredients = soapIngredients;\r\n\t\t\teditLabel.soapFragrances = soapFragrances;\r\n\t\t\teditLabel.soapColorants = soapColorants;\r\n\t\t\teditLabel.phrase = phrase;\r\n\t\t\teditLabel.useSoapCalcRecipe = useSoapCalcRecipe;\r\n\t\t\teditLabel.translateFrench = translateFrench;\r\n\t\t\tconsole.log(editLabel);\r\n\t\t} else {\r\n\t\t\tprops.soapLabels.push(\r\n\t\t\t\t{\r\n\t\t\t\t\tname, \r\n\t\t\t\t\tingredients, \r\n\t\t\t\t\tsoapCode, \r\n\t\t\t\t\tsoapIngredients, \r\n\t\t\t\t\tsoapFragrances, \r\n\t\t\t\t\tsoapColorants, \r\n\t\t\t\t\tphrase, \r\n\t\t\t\t\tuseSoapCalcRecipe, \r\n\t\t\t\t\ttranslateFrench, \r\n\t\t\t\t\tquantity: 1,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t\tprops.saveSoapLabels(props.soapLabels);\r\n\t\tsetEditLabel(undefined);\r\n\t}\r\n\t\r\n\t// Change Qty\r\n\tconst handleSoapLabelQtyChange = (soapLabel, qty) => {\r\n\t\tsoapLabel.quantity = parseInt(qty);\r\n\t\tprops.saveSoapLabels(props.soapLabels);\r\n\t};\r\n\t// Edit\r\n\tconst handleEdit = (soapLabel) => {\r\n\t\tsetEditLabel(soapLabel);\r\n\t\tsetLabelModalOpen(true);\r\n\t};\r\n\t// Delete\r\n\tconst handleDelete = (soapLabel) => {\r\n\t\tsetEditLabel(soapLabel);\r\n\t\tsetConfirmDeleteOpen(true);\r\n\t};\r\n\t// Confirm Delete Dialog\r\n\tconst handleConfirmDeleteClose = () => {\r\n\t\tsetConfirmDeleteOpen(false);\r\n\t\tconst index = props.soapLabels.indexOf(editLabel);\r\n\t\tif (index > -1) {\r\n\t\t\tprops.soapLabels.splice(index, 1);\r\n\t\t\tprops.saveSoapLabels(props.soapLabels);\r\n\t\t}\r\n\t\tsetEditLabel(undefined);\r\n\t};\r\n\tconst handleConfirmDeleteDisagree = () => {\r\n\t\tsetConfirmDeleteOpen(false);\r\n\t\tsetEditLabel(undefined);\r\n\t};\r\n\t\r\n\tlet index = 0;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid className=\"gridSettings noPrint\">\r\n\t\t\t\t<div className=\"wrapperForAbsolute\">\r\n\t\t\t\t\t<h2 className=\"secondTitle\">Soap Label List</h2>\r\n\t\t\t\t\t<div className=\"rightAbsoluteContainer\">\r\n\t\t\t\t\t\t<Button onClick={handleLabelModalOpen} endIcon={<AddCircleIcon />}>New Soap Label</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Grid container spacing={0} className=\"soapLabelRows\">\r\n\t\t\t\t\t{props.soapLabels && props.soapLabels.length ? props.soapLabels.map(soapLabel => {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem xs={12}\r\n\t\t\t\t\t\t\t\tclassName=\"soapLabelRow wrapperForAbsolute\"\r\n\t\t\t\t\t\t\t\tkey={`soapLabelRow-${index}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span className=\"soapLabelRowName\">{soapLabel.name} </span>\r\n\t\t\t\t\t\t\t\t<div className=\"soapLabelButtons rightAbsoluteContainer\" >\r\n\t\t\t\t\t\t\t\t\t<QuantitySelector\r\n\t\t\t\t\t\t\t\t\t\tquantity={soapLabel.quantity}\r\n\t\t\t\t\t\t\t\t\t\thandleUpdateQty={(qty) => handleSoapLabelQtyChange(soapLabel, qty)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\" onClick={(e) => handleEdit(soapLabel)}><EditIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\" onClick={(e) => handleDelete(soapLabel)}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}) : (\r\n\t\t\t\t\t\t<div>List is empty. Create a Soap Label</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{editLabel && (\r\n\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\topen={confirmDeleteOpen}\r\n\t\t\t\t\t\tonClose={handleConfirmDeleteClose}\r\n\t\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">\r\n\t\t\t\t\t\t\t{`Delete soap label \"${editLabel.name}\" ?`}\r\n\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={handleConfirmDeleteDisagree}>No</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={handleConfirmDeleteClose} autoFocus>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t</Dialog>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t\t<LabelModal\r\n\t\t\t\topen={labelModalOpen}\r\n\t\t\t\tonClose={handleLabelModalClose}\r\n\t\t\t\tsaveLabel={saveLabel}\r\n\t\t\t\teditLabel={editLabel}\r\n\t\t\t\tsettings={settings}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './SettingsModal.css';\r\nimport * as React from 'react';\r\nimport Label from './labelLayouts/Label';\r\n\r\nimport { Box } from '@mui/material';\r\nimport { Select } from '@mui/material';\r\nimport { MenuItem } from '@mui/material';\r\nimport { TextField } from '@mui/material';\r\nimport { Radio } from '@mui/material';\r\nimport { RadioGroup } from '@mui/material';\r\nimport { FormControlLabel } from '@mui/material';\r\nimport { FormControl } from '@mui/material';\r\nimport { FormLabel } from '@mui/material';\r\nimport { InputLabel } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n// import BackspaceIcon from '@mui/icons-material/Backspace';\r\n// import SaveIcon from '@mui/icons-material/Save';\r\nimport { Slider } from '@mui/material';\r\n\r\nconst sliderStyle = {marginLeft: 12, marginRight: 12, width: \"auto\"};\r\nconst sliderPaddingProperties = {\r\n\tmin: 10, max: 100,\r\n\tmarks: [{value: 10, label: '10'}, {value: 100, label: '100'}]\r\n};\r\n\r\nexport default function SettingsModal(props) {\r\n\tconst [settings/*, setSettings*/] = React.useState(props.settings);\r\n\r\n\tconst [soapBrand, setSoapBrand] = React.useState(props.settings.brand);\r\n\tconst [soapBrandError/*, setSoapBrandError*/] = React.useState(false);\r\n\tconst [font, setFont] = React.useState(props.settings.font);\r\n\tconst [fontError/*, setFontError*/] = React.useState(false);\r\n\tconst [padding, setPadding] = React.useState(props.settings.padding);\r\n\r\n\tconst [layout, setLayout] = React.useState(props.settings.layout);\r\n\tconst [isLayoutColumn, setIsLayoutColumn] = React.useState(props.settings.layout === \"columns\");\r\n\tconst [layoutNbPerRow, setLayoutNbPerRow] = React.useState(props.settings.layoutNbPerRow);\r\n\tconst [layoutNbPerRowArray, setLayoutNbPerRowArray] = React.useState([...Array(props.settings.layoutNbPerRow).keys()]);\r\n\tconst [textAlignment, setTextAlignment] = React.useState(props.settings.textAlignment);\r\n\tconst [leftColumnWidth, setLeftColumnWidth] = React.useState(props.settings.leftColumnWidth);\r\n\tconst [seperatorWidth, setSeperatorWidth] = React.useState(props.settings.seperatorWidth);\r\n\t\r\n\tconst handleSoapBrandChange = (event) => {\r\n\t\tsetSoapBrand(event.target.value);\r\n\t\tsettings.brand = event.target.value;\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleFontChange = (event) => {\r\n\t\tsetFont(event.target.value);\r\n\t\tsettings.font = event.target.value;\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleLayoutChange = (event) => {\r\n\t\tsetLayout(event.target.value);\r\n\t\tsetIsLayoutColumn(event.target.value === \"columns\");\r\n\t\tsettings.layout = event.target.value;\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handlePaddingChange = (value, property) => {\r\n\t\tpadding[property] = value;\r\n\t\tconst newPadding = {...padding};\r\n\t\tsetPadding(newPadding);\r\n\t\tsettings.padding = newPadding;\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleLeftColumnWidthChange = (event) => {\r\n\t\tsetLeftColumnWidth(event.target.value/100);\r\n\t\tsettings.leftColumnWidth = event.target.value/100;\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleSeperatorWidthChange = (event) => {\r\n\t\tsetSeperatorWidth(event.target.value);\r\n\t\tsettings.seperatorWidth = event.target.value;\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleTextAlignmentChange = (event) => {\r\n\t\tsetTextAlignment(event.target.value);\r\n\t\tsettings.textAlignment = event.target.value;\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleLayoutNbPerRowChange = (event) => {\r\n\t\tconst val = parseInt(event.target.value);\r\n\t\tconst valid = val>=2 && val<=6;\r\n\t\tif (valid) {\r\n\t\t\tsetLayoutNbPerRow(val);\r\n\t\t\tsetLayoutNbPerRowArray([...Array(val).keys()]);\r\n\t\t\tsettings.layoutNbPerRow = val;\r\n\t\t\tupdateSettings();\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateSettings = () => {\r\n\t\t// setSettings({...settings});\r\n\t}\r\n\r\n\tconst handleClose = () => {\r\n\t\tprops.onClose();\r\n\t\tprops.saveSettings(settings);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog open={props.open} scroll=\"body\" maxWidth={'1000px'}>\r\n\t\t\t<DialogContent dividers={false}>\r\n\t\t\t\t<Box className=\"modalBox\">\r\n\t\t\t\t\t<FormControl fullWidth={true} component=\"form\" className=\"form\">\r\n\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\taria-label=\"layour\"\r\n\t\t\t\t\t\t\tvalue={layout}\r\n\t\t\t\t\t\t\tonChange={handleLayoutChange}\r\n\t\t\t\t\t\t\tname=\"radio-buttons-group\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid container spacing={2} className=\"gridForm\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<h2 className=\"secondTitle title\">Settings</h2>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6} className=\"gridItemClose\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={handleClose}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={2} className=\"gridLayoutsContainer\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"columns\" control={<Radio />} label=\"Columns Layout\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{layoutNbPerRowArray.map(i => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`label-${i}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsettings={settings}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlayout=\"columns\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsoapName=\"Soap name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tingredients=\"Ingredients: water, coconut oil, palm oil, lye, avocado oil, canola oil, castor oil, olive oil, safflower oil, cocoa butter, fragrance(s), colorant(s).\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbrand={settings.brand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tphrase=\"Some catchy phrase\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdemo={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t{isLayoutColumn && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"font\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Font\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText=\"Has to exist on your computer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={font}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={fontError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleFontChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"soap-brand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Brand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={soapBrand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={soapBrandError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleSoapBrandChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Top padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Top padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pt)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pt')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Bottom padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-bottom\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Bottom padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pb)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pb')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Left padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Left padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Right padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Right padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"nbPerRow-label\">Number of label per row (between 2 and 6)</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"nbPerRow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"nbPerRow-label\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Number of label per row (between 2 and 6)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={layoutNbPerRow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// error={layoutNbPerRowError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleLayoutNbPerRowChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={2}>2</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={3}>3</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={4}>4</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={5}>5</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={6}>6</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"textAlignment-label\">Text Alignment</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"textAlignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"textAlignment-label\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Text Alignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={textAlignment}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTextAlignmentChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"left\">Left</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"right\">Right</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemLayout\">\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={2} className=\"gridLayoutsContainer\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"wide\" control={<Radio />} label=\"Wide Row Layout\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\tsettings={settings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlayout=\"wide\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsoapName=\"Soap name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tingredients=\"Ingredients: water, coconut oil, palm oil, lye, avocado oil, canola oil, castor oil, olive oil, safflower oil, cocoa butter, fragrance(s), colorant(s).\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tbrand={settings.brand}\r\n\t\t\t\t\t\t\t\t\t\t\t\tphrase=\"Some catchy phrase\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdemo={true}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t{!isLayoutColumn && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"font\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Font\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText=\"Has to exist on your computer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={font}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={fontError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleFontChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"soap-brand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Brand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={soapBrand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={soapBrandError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleSoapBrandChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Top padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Top padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pt)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pt')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Bottom padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-bottom\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Bottom padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pb)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pb')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 1 left padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 1 left padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl1')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 1 right padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 1 right padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr1')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 2 left padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 2 left padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl2')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 2 right padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 2 right padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr2')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Left Column Size</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"textAlignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Left Column Size\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(leftColumnWidth*100)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleLeftColumnWidthChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={25} max={75}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarks={[{value: 25, label: '25%'}, {value: 75, label: '75%'}]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Seperator Width</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"seperatorWidth\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seperator Width\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(seperatorWidth)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleSeperatorWidthChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0} max={10}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","import './LabelsPrintView.css';\r\nimport * as React from 'react';\r\nimport Label from './labelLayouts/Label';\r\nimport SettingsModal from './SettingsModal';\r\nimport { IconButton } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { Tooltip } from '@mui/material';\r\n\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nexport default function LabelsPrintView(props) {\r\n\tconst [settings] = React.useState(props.settings);\r\n\tconst [layoutNbPerRow/*, setLayoutNbPerRow*/] = React.useState(props.settings.layoutNbPerRow);\r\n\tconst [layout/*, setLayoutNbPerRow*/] = React.useState(props.settings.layout);\r\n\tconst [settingsModalOpen, setSettingsModalOpen] = React.useState(false);\r\n\r\n\t// Settings Modal\r\n\tconst handleClickOpenSettings = () => {\r\n\t\tsetSettingsModalOpen(true);\r\n\t};\r\n\tconst handleSettingsModalClose = () => {\r\n\t\tsetSettingsModalOpen(false);\r\n\t}\r\n\t\r\n\tconst renderedLabels = (soapLabels, _layoutNbPerRow, _layout) => {\r\n\t\tif(_layout === \"wide\") {\r\n\t\t\t_layoutNbPerRow = 1;\r\n\t\t}\r\n\r\n\t\tlet labels = [];\r\n\t\tsoapLabels.forEach(soapLabel => {\r\n\t\t\tfor (let i=0; i<soapLabel.quantity; i++){\r\n\t\t\t\tlabels.push(soapLabel);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst rows = labels.reduceRight((r,i,_,s) => (r.push(s.splice(0,_layoutNbPerRow)),r),[]);\r\n\r\n\t\treturn rows.map((row, r) => {\r\n\t\t\treturn (\r\n\t\t\t<div className=\"gridPrintRow\" key={`labelPreviewRow-${r}`}>\r\n\t\t\t\t{row.map((label, l) => {\r\n\t\t\t\t\tconst index = r*_layoutNbPerRow+l;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\tsettings={settings}\r\n\t\t\t\t\t\t\tlayout={settings.layout}\r\n\t\t\t\t\t\t\tkey={`labelPreview-${index}`}\r\n\t\t\t\t\t\t\tsoapName={label.name} \r\n\t\t\t\t\t\t\tingredients={label.ingredients} \r\n\t\t\t\t\t\t\tbrand={settings.brand}\r\n\t\t\t\t\t\t\tphrase={label.phrase}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\t// Print\r\n\tconst handleClickPrint = () => {\r\n\t\twindow.print();\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t}, [layoutNbPerRow, layout]);\r\n\r\n\tif(!settings) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst isColumnLayout = layout === \"columns\";\r\n\tconst pagePadding = {\r\n\t\tpt: Math.max(0, 20-settings.padding.pt)+'px',\r\n\t\tpb: Math.max(0, 20-settings.padding.pb)+'px',\r\n\t\tpl: Math.max(0, 20-(isColumnLayout ? settings.padding.pl : settings.padding.pl1))+'px',\r\n\t\tpr: Math.max(0, 20-(isColumnLayout ? settings.padding.pr : settings.padding.pr2))+'px',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<SettingsModal\r\n\t\t\t\tsettings={settings}\r\n\t\t\t\tsaveSettings={props.saveSettings}\r\n\t\t\t\topen={settingsModalOpen}\r\n\t\t\t\tonClose={handleSettingsModalClose}\r\n\t\t\t/>\r\n\t\t\t<div className=\"wrapperForAbsolute noPrint\">\r\n\t\t\t\t<h2 className=\"secondTitle\">Soap Labels Print Preview\r\n\t\t\t\t\t<Tooltip title=\"Lines are for visual aids only. And margins could render differently in your print settings.\" placement=\"right\">\r\n\t\t\t\t\t\t<IconButton size=\"small\">\r\n\t\t\t\t\t\t\t<InfoIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</h2>\r\n\t\t\t\t<div className=\"rightAbsoluteContainer\">\r\n\t\t\t\t\t<IconButton onClick={handleClickPrint}><PrintIcon/></IconButton>\r\n\t\t\t\t\t<IconButton onClick={handleClickOpenSettings}><SettingsIcon/></IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Grid item className=\"gridPrintLabels\" {...pagePadding}>\r\n\t\t\t\t{props.soapLabels && props.soapLabels.length ? renderedLabels(props.soapLabels, settings.layoutNbPerRow, settings.layout) : null}\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './LabelsList.css';\r\nimport * as React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport LabelsList from './LabelsList';\r\nimport LabelsPrintView from './LabelsPrintView';\r\n\r\nconst defaultSettings = {\r\n\t\"font\": \"Shadows Into Light\",\r\n\t\"brand\": \"Soap Brand\",\r\n\t\"layout\": \"columns\",\r\n\t\"layoutNbPerRow\": 3,\r\n\t\"textAlignment\": \"left\",\r\n\t\"leftColumnWidth\": 0.65,\r\n\t\"seperatorWidth\": 5,\r\n\t\"padding\": {'pt': 20, 'pb': 20, 'pl': 20, 'pr': 20, 'pl1': 50, 'pr1': 50, 'pl2': 10, 'pr2': 20},\r\n};\r\n\r\nexport default function SoapLabels() {\r\n\r\n\tconst [soapLabels, setSoapLabels] = React.useState([]);\r\n\tconst [settings, setSettings] = React.useState(undefined);\r\n\r\n\t// Save\r\n\tconst saveSoapLabels = (_soapLabels) => {\r\n\t\tsetSoapLabels([...soapLabels]);\r\n\t\tconst cookies = new Cookies();\r\n\t\tcookies.set('SoapLabels', JSON.stringify(soapLabels), { path: '/' });\r\n\t\tconsole.log(cookies.get('SoapLabels'));\r\n\t};\r\n\t// Settings\r\n\tconst saveSettings = (_settings) => {\r\n\t\tsetSettings(_settings);\r\n\t\tconst cookies = new Cookies();\r\n\t\tcookies.set('Settings', JSON.stringify(settings), { path: '/' });\r\n\t\tconsole.log(cookies.get('Settings'));\r\n\t};\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tconst cookies = new Cookies();\r\n\t\tsetSoapLabels(cookies.get('SoapLabels') || []);\r\n\t\tsetSettings(cookies.get('Settings') || defaultSettings);\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t}, [soapLabels, settings]);\r\n\r\n\treturn (\r\n\t\t<Box className=\"box\">\r\n\t\t\t{settings && (<LabelsList \r\n\t\t\t\tsettings={settings}\r\n\t\t\t\tsaveSoapLabels={saveSoapLabels}\r\n\t\t\t\tsoapLabels={soapLabels}\r\n\t\t\t/>)}\r\n\t\t\t{settings && (<LabelsPrintView \r\n\t\t\t\tsoapLabels={soapLabels}\r\n\t\t\t\tsettings={settings}\r\n\t\t\t\tsaveSettings={saveSettings}\r\n\t\t\t/>)}\r\n\t\t</Box>\r\n\t);\r\n}\r\n","import './Main.css';\r\nimport * as React from 'react';\r\nimport { Container } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport Cookies from 'universal-cookie';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\n\r\nimport SoapLabels from './SoapLabels';\r\n\r\nconst images = [\r\n\t'arab_tile',\r\n\t'bush',\r\n\t'circuit',\r\n\t'full-bloom',\r\n\t'gplaypattern',\r\n\t'greek-vase',\r\n\t'herringbone',\r\n\t'hotel-wallpaper',\r\n\t'more-leaves',\r\n\t'moroccan-flower',\r\n\t'moroccan-flower-dark',\r\n\t'morocco-blue',\r\n\t'new_year_background',\r\n\t'regal',\r\n\t'ripples',\r\n\t'swirls',\r\n\t'tree_bark',\r\n\t'trees',\r\n];\r\n\r\nexport default function Main() {\r\n\r\n\tconst [bgTileIndex, setBgTileIndex] = React.useState(0);\r\n\tconst [mainClassName, setMainClassName] = React.useState(\"\");\r\n\r\n\t// Background\r\n\tconst handlePreviousBg = () => {\r\n\t\tlet nextBgTileIndex = bgTileIndex - 1;\r\n\t\tif (nextBgTileIndex < 0){\r\n\t\t\tnextBgTileIndex = images.length - 1;\r\n\t\t}\r\n\t\tupdateBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\tconst handleNextBg = () => {\r\n\t\tlet nextBgTileIndex = bgTileIndex + 1;\r\n\t\tif (nextBgTileIndex >= images.length){\r\n\t\t\tnextBgTileIndex = 0;\r\n\t\t}\r\n\t\tupdateBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\tconst updateBgTileIndex = (nextBgTileIndex) => {\r\n\t\tconst cookies = new Cookies();\r\n\t\tcookies.set('SoapBgTileIndex', nextBgTileIndex, { path: '/' });\r\n\t\tsetBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst cookies = new Cookies();\r\n\t\tconst _bgTileIndex = parseInt(cookies.get('SoapBgTileIndex')) || 0;\r\n\t\tsetBgTileIndex(_bgTileIndex);\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetMainClassName(`main main_${images[bgTileIndex]}`);\r\n\t}, [bgTileIndex]);\r\n\r\n\treturn (\r\n\t\t<div className={mainClassName}>\r\n\t\t\t<Container className=\"header noPrint wrapperForAbsolute\">\r\n\t\t\t\t<h1 className=\"mainTitle\">Soap Labels</h1>\r\n\t\t\t\t<div className=\"bgSwitcherContainer rightAbsoluteContainer\">\r\n\t\t\t\t\t<IconButton onClick={handlePreviousBg}><ArrowBackIosNewIcon/></IconButton>\r\n\t\t\t\t\t<IconButton onClick={handleNextBg}><ArrowForwardIosIcon/></IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t\t<Container className=\"container\">\r\n\t\t\t\t<SoapLabels/>\r\n\t\t\t</Container>\r\n\t\t\t<Container className=\"footer noPrint\">\r\n\t\t\t\t<p className=\"footerCopyright\">Soap Labels @2021 Joanie Lessnick</p>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './App.css';\r\nimport * as React from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Main from './LabelMaker/Main';\r\n\r\nconst theme = createTheme({\r\n\ttypography: {\r\n\t\tfontFamily: [\r\n\t\t\t'Lato',\r\n\t\t\t'Arial',\r\n\t\t\t'Shadows Into Light',\r\n\t\t\t'-apple-system',\r\n\t\t\t'BlinkMacSystemFont',\r\n\t\t\t'\"Segoe UI\"',\r\n\t\t\t'Roboto',\r\n\t\t\t'\"Helvetica Neue\"',\r\n\t\t\t'Arial',\r\n\t\t\t'sans-serif',\r\n\t\t\t'\"Apple Color Emoji\"',\r\n\t\t\t'\"Segoe UI Emoji\"',\r\n\t\t\t'\"Segoe UI Symbol\"',\r\n\t\t].join(','),\r\n\t\tbutton: {\r\n\t\t  fontSize: '1rem',\r\n\t\t  fontWeight: '600',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n\t\t<CssBaseline />\r\n\t\t<Main />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}