{"version":3,"sources":["store/constants.js","store/actions.js","LabelMaker/labelLayouts/Label.js","LabelMaker/LabelModal.js","LabelMaker/components/QuantitySelector.js","LabelMaker/LabelsList.js","LabelMaker/SettingsModal.js","LabelMaker/LabelsPrintView.js","LabelMaker/SoapLabels.js","LabelMaker/PrivacyPolicyTermsConditions.js","LabelMaker/Main.js","store/reducer.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["SET_CURRENT_SOAP_LABEL","ADD_SOAP_LABEL","EDIT_CURRENT_SOAP_LABEL","DELETE_CURRENT_SOAP_LABEL","EDIT_SETTINGS","useSettings","useSelector","state","settings","useSoapLabels","soapLabels","useCurrentSoapLabel","currentSoapLabel","selectCurrentSoapLabel","_currentSoapLabel","type","constants","editSoapLabel","_soapLabelToEdit","_soapLabelData","soapLabelData","soapLabelToEdit","editSettings","_settingsData","Label","props","layoutProps","layout","demoProps","demo","soapLabel","padding","pt","pb","pl","pr","pl1","pr1","pl2","pr2","leftColumnWidth","layoutNbPerRow","textAlignment","seperatorWidth","brand","styleFont","fontFamily","font","styleFontAlign","textAlign","styleAlign","styleBackgroundColor","backgroundColor","soapDate","date","Date","toLocaleDateString","year","month","day","Grid","item","className","xs","paddingTop","paddingBottom","paddingLeft","paddingRight","style","name","ingredients","phrase","borderLeft","translations","LabelModal","saveLabel","onCloseLabelModal","labelModalOpen","React","useThinSpace","setUseThinSpace","useSoapCalcRecipe","setUseSoapCalcRecipe","translateFrench","setTranslateFrench","soapName","setSoapName","soapNameError","setSoapNameError","soapPhrase","setSoapPhrase","setSoapDate","soapIngredients","setSoapIngredients","soapCode","setSoapCode","soapFragrances","setSoapFragrances","soapColorants","setSoapColorants","soapRecipeError","setSoapRecipeError","ingredientsCodeOutput","setIngredientsCodeOutput","handleSoapRecipeChange","event","target","value","allIngredients","soapCodeData","rxMatchWater","match","length","rxMatchLye","matchAll","forEach","oilElem","sortableRecipeData","soapItem","push","sort","a","b","map","ingredient","join","toLowerCase","generateIngredients","isColumnLayout","pagePadding","Math","max","arrPerRow","Array","keys","tooltipSoapCode","Dialog","open","scroll","maxWidth","DialogContent","dividers","Box","FormControl","fullWidth","component","container","spacing","IconButton","onClick","TextField","required","id","label","size","helperText","error","onChange","_soapName","replaceAll","width","FormControlLabel","control","Checkbox","checked","_useThinSpace","DesktopDatePicker","inputFormat","variant","newValue","renderInput","params","multiline","rows","Tooltip","title","placement","disabled","Button","endIcon","getTime","i","QuantitySelector","quantityProps","quantity","handleUpdateQty","setQuantity","updateQuantity","newQty","LabelsList","confirmDeleteOpen","setConfirmDeleteOpen","setLabelModalOpen","undefined","soapLabelToDelete","setSoapLabelToDelete","dispatch","useDispatch","handleConfirmDeleteClose","index","dateOptions","qty","parseInt","handleSoapLabelQtyChange","e","handleEdit","handleDelete","onClose","DialogTitle","DialogActions","autoFocus","uid","sliderStyle","marginLeft","marginRight","sliderPaddingProperties","min","SettingsModal","onCloseSettingsModal","settingsModalOpen","setBrand","brandError","setFont","fontError","setPagePadding","setPadding","setLayout","isLayoutColumn","setIsLayoutColumn","setLayoutNbPerRow","layoutNbPerRowArray","setLayoutNbPerRowArray","setTextAlignment","setLeftColumnWidth","setSeperatorWidth","handleBrandChange","updateSettings","handleFontChange","handlePagePaddingChange","property","newPagePadding","handlePaddingChange","newPadding","demoSoap","sliderValueLabelDisplay","valueLabelFormatInPx","x","commonFields","smallLabelPadding","FormLabel","Slider","valueLabelDisplay","valueLabelFormat","RadioGroup","Radio","InputLabel","Select","labelId","val","MenuItem","step","LabelsPrintView","setSettingsModalOpen","window","print","_soapLabels","_layoutNbPerRow","_layout","labels","reduceRight","r","_","s","splice","row","l","renderLabels","SoapLabels","PrivacyPolicyTermsConditions","onClosePrivacyTermsModal","privacyTermsModalOpen","href","images","Main","bgTileIndex","setBgTileIndex","mainClassName","setMainClassName","updateBgTileIndex","nextBgTileIndex","Cookies","set","path","cookies","_bgTileIndex","get","setPrivacyTermsModalOpen","Container","defaultSettings","defaultState","reducer","payload","console","log","newState","filter","store","createStore","serialisedState","localStorage","getItem","parsedState","JSON","parse","mergedSettings","warn","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","theme","createTheme","typography","button","fontSize","fontWeight","textTransform","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","LocalizationProvider","dateAdapter","DateAdapter","document","getElementById"],"mappings":"gvBAAaA,G,cAAyB,0BACzBC,EAAiB,iBACjBC,EAA0B,0BAC1BC,EAA4B,4BAC5BC,EAAgB,gB,QCChBC,EAAc,WAC1B,OAAOC,aAAY,SAACC,GACnB,OAAOA,EAAMC,aAGFC,EAAgB,WAC5B,OAAOH,aAAY,SAACC,GACnB,OAAOA,EAAMG,eAGFC,EAAsB,WAClC,OAAOL,aAAY,SAACC,GACnB,OAAOA,EAAMK,qBAMFC,EAAyB,SAACC,GAEtC,MAAO,CACNC,KAAMC,EACNJ,iBAAkBE,IAUPG,EAAgB,SAACC,EAAkBC,GAE/C,MAAO,CACNJ,KAAMC,EACNI,cAAeD,EACfE,gBAAiBH,IAWNI,EAAe,SAACC,GAE5B,MAAO,CACNR,KAAMC,EACNR,SAAUe,I,OCnDG,SAASC,GAAMC,GAC7B,IAAMjB,EAAWH,IAEFqB,EAA2CD,EAAnDE,OAA2BC,EAAwBH,EAA9BI,KAAiBC,EAAaL,EAAbK,UAE7C,EAA6CtB,EAASuB,QAA/CC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,GAAIC,EAAnB,EAAmBA,GAAIC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,IAAKC,EAAjC,EAAiCA,IAAKC,EAAtC,EAAsCA,IAChCZ,EAASD,GAAelB,EAASmB,QAAU,UAC3Ca,EAAkBhC,EAASgC,gBAC3BC,EAAiBjC,EAASiC,eAC1BC,EAAgBlC,EAASkC,cACzBC,EAAiBnC,EAASmC,eAC1BC,EAAQpC,EAASoC,MACjBf,IAASD,EAETiB,EAAY,CAACC,WAAYtC,EAASuC,MAClCC,EAAiB,CAACF,WAAYtC,EAASuC,KAAME,UAAWP,GACxDQ,EAAa,CAACD,UAAWP,GACzBS,EAAuB,CAACC,gBAAkBvB,EAAO,UAAY,eAG7DwB,EAAWvB,EAAUwB,KAAO,IAAIC,KAAKzB,EAAUwB,MAAME,mBAAmB,QAD1D,CAACC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YAC4C,GAEtG,OACC,cAAC,WAAD,UACa,YAAXhC,EACA,eAACiC,EAAA,EAAD,CAAMC,MAAI,EACTC,UAAU,gBACVC,GAAI,GAAGtB,EACPuB,WAAYhC,EAAG,KACfiC,cAAehC,EAAG,KAClBiC,YAAahC,EAAG,KAChBiC,aAAchC,EAAG,KACjBiC,MAAOjB,EAPR,UASC,mBAAGiB,MAAOpB,EAAgBc,UAAU,gBAApC,SAAqDhC,EAAUuC,OAC/D,mBAAGD,MAAOlB,EAAYY,UAAU,uBAAhC,SAAwDhC,EAAUwC,cACjE1B,GAAU,mBAAGwB,MAAOlB,EAAYY,UAAU,iBAAhC,SAAkDlB,IAC5Dd,EAAUyC,QAAW,mBAAGH,MAAOlB,EAAYY,UAAU,kBAAhC,SAAmDhC,EAAUyC,SAClFzC,EAAUwB,MAAS,mBAAGQ,UAAU,gBAAb,SAA8BT,OAGnD,eAACO,EAAA,EAAD,CAAMG,GAAI,GAAIF,MAAI,EACjBC,UAAU,uBACVE,WAAYhC,EAAG,KACfiC,cAAehC,EAAG,KAClBmC,MAAOjB,EAJR,UAMC,eAACS,EAAA,EAAD,CAAMC,MAAI,EACTE,GAAI,GAAGvB,EACP0B,YAAa9B,EAAI,KACjB+B,aAAc9B,EAAI,KAClByB,UAAU,2BAJX,UAMC,mBAAGA,UAAU,8BAAb,SAA4ChC,EAAUwC,cACrDxC,EAAUwB,MAAS,mBAAGQ,UAAU,uBAAb,SAAqCT,OAE1D,eAACO,EAAA,EAAD,CAAMC,MAAI,EACTE,GAAI,IAAI,EAAEvB,GACV0B,YAAa5B,EAAI,KACjB6B,aAAc5B,EAAI,KAClBuB,UAAU,4BACVM,MAAO,CAACI,WAAW,GAAD,OAAK7B,EAAL,kBALnB,UAOEC,GAAU,mBAAGkB,UAAU,wBAAb,SAAsClB,IACjD,mBAAGwB,MAAOvB,EAAWiB,UAAU,uBAA/B,SAAuDhC,EAAUuC,OAChEvC,EAAUyC,QAAW,mBAAGT,UAAU,yBAAb,SAAuChC,EAAUyC,iBChD7E,IAAME,GAAe,CACpB,oBAAqB,uBACrB,cAAe,oBACf,YAAa,iBACb,cAAe,iBACf,aAAc,kBACd,aAAc,iBACd,eAAgB,kBAChB,sBAAuB,mBACvB,sBAAuB,mBACvB,4BAA6B,mBAC7B,WAAY,mBACZ,gBAAiB,+BACjB,eAAgB,kBAChB,kCAAmC,kBACnC,oBAAqB,mBACrB,YAAa,gBACb,WAAY,iBACZ,yBAA0B,eAC1B,gBAAiB,oBACjB,aAAc,qBACd,cAAe,sBACf,gBAAiB,sBAGH,SAASC,GAAWjD,GAClC,IAAMjB,EAAWH,IACXO,EAAmBD,IAElBgE,EAAgDlD,EAAhDkD,UAAWC,EAAqCnD,EAArCmD,kBAAmBC,EAAkBpD,EAAlBoD,eAErC,EAAwCC,YAAe,GAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkDF,YAAe,GAAjE,mBAAOG,EAAP,KAA0BC,EAA1B,KACA,EAA8CJ,YAAe,GAA7D,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAgCN,WAAe,IAA/C,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA0CR,YAAe,GAAzD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAAoCV,WAAe,IAAnD,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAgCZ,WAAe,IAAIvB,MAAnD,oBAAOF,GAAP,MAAiBsC,GAAjB,MACA,GAA8Cb,WAAe,IAA7D,qBAAOc,GAAP,MAAwBC,GAAxB,MACA,GAAgCf,WAAe,IAA/C,qBAAOgB,GAAP,MAAiBC,GAAjB,MACA,GAA4CjB,WAAe,IAA3D,qBAAOkB,GAAP,MAAuBC,GAAvB,MACA,GAA0CnB,WAAe,IAAzD,qBAAOoB,GAAP,MAAsBC,GAAtB,MAEA,GAA8CrB,YAAe,GAA7D,qBAAOsB,GAAP,MAAwBC,GAAxB,MAEA,GAA0DvB,WAAe,IAAzE,qBAAOwB,GAAP,MAA8BC,GAA9B,MA+BMC,GAAyB,SAACC,GAC5BxB,EACFc,GAAYU,EAAMC,OAAOC,OAEzBd,GAAmBY,EAAMC,OAAOC,QAsElC7B,aAAgB,YA7CY,WAC3B,IAAI8B,EAAiBd,GAErB,GAAIb,EAAmB,CACtB,IAAKa,GACJ,OAED,IAAMe,EAAe,GAEfC,EAAehB,GAASiB,MAAM,sCAChCD,GAAgBA,EAAaE,OAAS,GAAKF,EAAa,KAC3DD,EAAa1B,EAAkB,MAAQ,SAAW2B,EAAa,IAGhE,IAAMG,EAAanB,GAASiB,MAAM,2CAC9BE,GAAcA,EAAWD,OAAS,GAAKC,EAAW,KACrDJ,EAAa1B,EAAkB,sBAAwB,OAAS8B,EAAW,IAI/D,YAAOnB,GAASoB,SAAS,sEAC9BC,SAAQ,SAACC,GAChBP,EAAa1B,EAAkBV,GAAa2C,EAAQ,IAAMA,EAAQ,IAAMA,EAAQ,MAGjF,IAAMC,EAAqB,GAC3B,IAAK,IAAIC,KAAYT,EACpBQ,EAAmBE,KAAK,CAACD,EAAUT,EAAaS,KAEjDD,EAAmBG,MAAK,SAASC,EAAGC,GACnC,OAAOA,EAAE,GAAKD,EAAE,MAGjBb,EAAiBS,EAAmBM,KAAI,SAACC,GAAD,OAAgBA,EAAW,MAAIC,KAAK,MAAMC,mBAElFlB,EAAiBhB,GAGlBC,GAAmBe,GAGnBA,EAAc,UADWzB,EAAkB,iBAAgB,cAC7C,aAA2ByB,EAA3B,aAA8CZ,IAAkB,eAAhE,aAAmFE,IAAiB,cAApG,KACdK,GAAyBK,GAIzBmB,KACE,CAACjC,GAAUF,GAAiBM,GAAeF,GAAgBP,EAAYV,EAAcE,EAAmBE,IAE3GL,aAAgB,WACZlE,GAAoBA,EAAiByD,MAAQzD,EAAiB0D,aAChEgB,EAAY1E,EAAiByD,MAC7BsB,GAAY,IAAIpC,KAAK3C,EAAiB0C,OACtCoC,EAAc9E,EAAiB2D,QAC/BwB,GAAYnF,EAAiBkF,UAC7BD,GAAmBjF,EAAiBgF,iBAAmBhF,EAAiB0D,aACxE2B,GAAkBrF,EAAiBoF,gBACnCG,GAAiBvF,EAAiBsF,eAClCd,EAAmBxE,EAAiBuE,iBACpCD,EAAqBtE,EAAiBqE,qBAAuBrE,EAAiBkF,YAE9ER,EAAY,IACZK,GAAY,IAAIpC,MAChBmC,EAAc,IACdK,GAAY,IACZF,GAAmB,IACnBI,GAAkB,IAClBE,GAAiB,IACjBf,EAAmB5E,EAAS2E,kBAAmB,GAC/CD,GAAqB,MAEpB,CAACtE,EAAkBJ,IAEtB,IAIMwH,GAAqC,YAApBxH,EAASmB,OAC1BsG,GAAc,CACnBjG,GAAIkG,KAAKC,IAAI,EAAG,GAAG3H,EAASuB,QAAQC,IAAI,KACxCC,GAAIiG,KAAKC,IAAI,EAAG,GAAG3H,EAASuB,QAAQE,IAAI,KACxCC,GAAIgG,KAAKC,IAAI,EAAG,IAAIH,GAAiBxH,EAASuB,QAAQG,GAAK1B,EAASuB,QAAQK,MAAM,KAClFD,GAAI+F,KAAKC,IAAI,EAAG,IAAIH,GAAiBxH,EAASuB,QAAQI,GAAK3B,EAASuB,QAAQQ,MAAM,MAE7E6F,GAAS,YAAOC,MAAML,GAAiBxH,EAASiC,eAAiB,GAAG6F,QAEpEC,GAAe,gIACoCpD,EAAkB,yBAA2B,GADjF,2BAGrB,OACC,cAACqD,EAAA,EAAD,CAAQC,KAAM5D,EAAgB6D,OAAO,OAAOC,SAAU,SAAtD,SACC,cAACC,EAAA,EAAD,CAAeC,UAAU,EAAzB,SACC,eAACC,EAAA,EAAD,CAAKhF,UAAU,WAAf,UACC,cAACiF,EAAA,EAAD,CAAaC,WAAW,EAAMC,UAAU,OAAOnF,UAAU,OAAzD,SACC,eAACF,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,WAAtC,UACC,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACA,oBAAID,UAAU,oBAAd,8BAEA,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAGD,UAAU,gBAA5B,SACC,cAACsF,EAAA,EAAD,CAAYC,QA1BC,WACnBzE,KAyBM,SAAkC,cAAC,IAAD,QAEnC,cAAChB,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACuF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,YACHC,MAAM,YACNC,KAAK,QACLC,WAAW,GACXhD,MAAOtB,EACPuE,MAAOrE,EACPsE,SA7JqB,SAACpD,GAC7B,IAAMqD,EAAYrD,EAAMC,OAAOC,MAC/BrB,EAAYP,EAAe+E,EAAUC,WAAW,IAAK,UAAOD,EAAUC,WAAW,SAAK,OA4J/E3F,MAAO,CAAE4F,MAAO,YAGlB,cAACpG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACkG,EAAA,EAAD,CACCC,QAAS,cAACC,EAAA,EAAD,CACTC,QAASrF,EACT8E,SAhLyB,SAACpD,GACjC,IAAM4D,IAAkB5D,EAAMC,OAAO0D,QACrCpF,EAAgBqF,GAChB/E,EAAY+E,EAAgBhF,EAAS0E,WAAW,IAAK,UAAO1E,EAAS0E,WAAW,SAAK,SA8K9EN,MAAM,mCAER,cAAC7F,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACuF,EAAA,EAAD,CACCE,GAAG,SACHC,MAAM,SACNC,KAAK,QACLC,WAAW,GACXhD,MAAOlB,EACPoE,SAvKuB,SAACpD,GAC/Bf,EAAce,EAAMC,OAAOC,QAuKpBvC,MAAO,CAAE4F,MAAO,YAGlB,cAACpG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACuG,EAAA,EAAD,CACCb,MAAM,YACNc,YAAY,aACZC,QAAQ,YACR7D,MAAOtD,GACPwG,SAAU,SAACY,GACT9E,GAAY8E,IAEdC,YAAa,SAACC,GAAD,OACZ,cAACrB,EAAA,EAAD,2BAAeqB,GAAf,IAAuBjB,KAAK,QAAQtF,MAAO,CAAE4F,MAAO,gBAItD/E,EACA,cAACrB,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,SACC,cAACuF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,YACHC,MAAM,YACNC,KAAK,QACL5F,UAAU,eACV8G,WAAS,EACTC,KAAM,EACNlE,MAAOb,GACP8D,MAAOxD,GACPyD,SAAUrD,OAIZ,cAAC5C,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,SACC,cAACuF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,mBACHC,MAAM,mBACNC,KAAK,QACL5F,UAAU,eACV8G,WAAS,EACTC,KAAM,EACNlE,MAAOf,GACPgE,MAAOxD,GACPyD,SAAUrD,OAIb,eAAC5C,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,UACC,cAACkG,EAAA,EAAD,CACCC,QAAS,cAACC,EAAA,EAAD,CACTC,QAASnF,EACT4E,SA1O8B,SAACpD,GACtCvB,IAAuBuB,EAAMC,OAAO0D,YA0O7BX,MAAM,iDAEP,cAACqB,EAAA,EAAD,CAASC,MAAOxC,GAAiByC,UAAU,QAA3C,SACC,cAAC5B,EAAA,EAAD,CAAYM,KAAK,QAAjB,SACC,cAAC,IAAD,WAIH,cAAC9F,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACkG,EAAA,EAAD,CACCgB,UAAWhG,EACXiF,QAAS,cAACC,EAAA,EAAD,CACTC,QAASjF,EACT0E,SArP4B,SAACpD,GACpCrB,IAAqBqB,EAAMC,OAAO0D,YAqP3BX,MAAM,uCAGR,cAAC7F,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACuF,EAAA,EAAD,CACCE,GAAG,kBACHC,MAAM,oBACNC,KAAK,QACL/C,MAAOX,GACP6D,SAjP2B,SAACpD,GACnCR,GAAkBQ,EAAMC,OAAOC,QAiPxBvC,MAAO,CAAE4F,MAAO,YAGlB,cAACpG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACuF,EAAA,EAAD,CACCE,GAAG,iBACHC,MAAM,mBACNC,KAAK,QACL/C,MAAOT,GACP2D,SAxP0B,SAACpD,GAClCN,GAAiBM,EAAMC,OAAOC,QAwPvBvC,MAAO,CAAE4F,MAAO,YAGlB,eAACpG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAID,UAAU,kBAA7B,UACC,cAACoH,EAAA,EAAD,CACCpH,UAAU,SACV4F,KAAK,QACLyB,QAAS,cAAC,IAAD,IAHV,mBAIA,cAACD,EAAA,EAAD,CACCpH,UAAU,SACV4F,KAAK,QACLyB,QAAS,cAAC,IAAD,IACT9B,QAzPgB,WACvB7D,GAAkBH,GAClBgB,IAAoBP,IACjBT,GAAYS,IAAYQ,KAE1B3B,EACCU,EACAhC,GAAS+H,UACT9E,GACAR,GACAF,GACAI,GACAE,GACAT,EACAR,EACAE,GAEDP,MAoOK,0BASH,oBAAId,UAAU,cAAd,2BACA,cAACF,EAAA,EAAD,yBAAME,UAAU,cAAiBmE,IAAjC,aACEG,GAAUT,KAAI,SAAA0D,GAAC,OACf,cAAC,GAAD,CAECvJ,UAAW,CAACuD,WAAUf,YAAagC,GAAuBb,aAAYpC,cAFvE,gBACegI,iB,qDC3VP,SAASC,GAAiB7J,GACxC,IAAkB8J,EAAmC9J,EAA7C+J,SAAyBC,EAAoBhK,EAApBgK,gBACjC,EAAgC3G,WAAeyG,GAA/C,mBAAOC,EAAP,KAAiBE,EAAjB,KAQMC,EAAiB,SAACC,GACvBF,EAAYE,GACZH,EAAgBG,IAGjB,OACC,sBAAK9H,UAAU,kBAAf,UACC,cAACsF,EAAA,EAAD,CAAYM,KAAK,QAAQ5F,UAAU,aAAauF,QAb7B,WACpBsC,EAAeH,EAAS,IAYvB,SAAuE,cAAC,KAAD,MACvE,sBAAM1H,UAAU,gBAAhB,SAAiC0H,IACjC,cAACpC,EAAA,EAAD,CAAYM,KAAK,QAAQ5F,UAAU,aAAauF,QAZhC,WACjBsC,EAAeH,EAAS,IAWvB,SAAoE,cAAC,KAAD,S,8CCjBxD,SAASK,GAAWpK,GAClC,MAAkDqD,YAAe,GAAjE,mBAAOgH,EAAP,KAA0BC,EAA1B,KACA,EAA4CjH,YAAe,GAA3D,mBAAOD,EAAP,KAAuBmH,EAAvB,KACA,EAAkDlH,gBAAemH,GAAjE,mBAAOC,EAAP,KAA0BC,EAA1B,KAEMC,EAAWC,cACX3L,EAAaD,IAEbG,EAAmBD,IAuDnB2L,EAA2B,WAChCP,GAAqB,GACrBK,EJtCM,CACNrL,KAAMC,EACNkL,kBIoCyBA,IACzBC,OAAqBF,IAOlBM,EAAQ,EACNC,EAAc,CAAC/I,KAAM,UAAWC,MAAO,OAAQC,IAAK,WAE1D,OACC,eAAC,WAAD,WACC,eAACC,EAAA,EAAD,CAAME,UAAU,uBAAhB,UACC,sBAAKA,UAAU,qBAAf,UACC,oBAAIA,UAAU,cAAd,6BACA,qBAAKA,UAAU,yBAAf,SACC,cAACoH,EAAA,EAAD,CAAQ7B,QAvEgB,WAC5B2C,GAAkB,GAClBI,EAASvL,OAAuBoL,KAqEWd,QAAS,cAAC,KAAD,IAAhD,iCAGF,cAACvH,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,gBAAtC,SACEpD,GAAcA,EAAWsG,OAAStG,EAAWiH,KAAI,SAAA7F,GACjDyK,IACA,IAAMlJ,EAAWvB,EAAUwB,KAAO,IAAIC,KAAKzB,EAAUwB,MAAME,mBAAmB,QAASgJ,GAAe,GACtG,OACC,eAAC5I,EAAA,EAAD,CACCC,MAAI,EAACE,GAAI,GACTD,UAAU,kCAFX,UAKC,uBAAMA,UAAU,mBAAhB,UAAoChC,EAAUuC,KAA9C,OACA,sBAAKP,UAAU,0CAAf,UACC,uBAAMA,UAAU,mBAAhB,UAAoCT,EAApC,OACA,cAAC,GAAD,CACCmI,SAAU1J,EAAU0J,SACpBC,gBAAiB,SAACgB,GAAD,OAtDO,SAAC3K,EAAW2K,GAC5C,IAAMrL,EAAgB,CACrBoK,SAAWkB,SAASD,IAErBL,EAASnL,EAAca,EAAWV,IAkDAuL,CAAyB7K,EAAW2K,MAE/D,cAACrD,EAAA,EAAD,CAAYM,KAAK,QAAQL,QAAS,SAACuD,GAAD,OAjDvB,SAAC9K,GACnBsK,EAASvL,EAAuBiB,IAChCkK,GAAkB,GA+C8Ba,CAAW/K,IAApD,SAAgE,cAAC,KAAD,MAChE,cAACsH,EAAA,EAAD,CAAYM,KAAK,QAAQL,QAAS,SAACuD,GAAD,OA7CrB,SAAC9K,GACrBqK,EAAqBrK,GACrBiK,GAAqB,GA2C2Be,CAAahL,IAAtD,SAAkE,cAAC,IAAD,WAbpE,uBAGsByK,OAevB,uEAGDL,GACA,eAAC1D,EAAA,EAAD,CACCC,KAAMqD,EACNiB,QAAST,EACT,kBAAgB,qBAHjB,UAKC,cAACU,EAAA,EAAD,CAAaxD,GAAG,qBAAhB,sCACwB0C,EAAkB7H,KAD1C,SAGA,eAAC4I,EAAA,EAAD,WACC,cAAC/B,EAAA,EAAD,CAAQV,QAAQ,WAAWnB,QArDG,WACnC0C,GAAqB,GACrBI,OAAqBF,IAmDhB,gBACA,cAACf,EAAA,EAAD,CAAQV,QAAQ,YAAYnB,QAASiD,EAA0BY,WAAS,EAAxE,0BAOJ,cAAC,GAAD,CACCrI,eAAgBA,EAChBD,kBApH2B,WAC7BoH,GAAkB,GAClBI,EAASvL,OAAuBoL,KAmH9BtH,UA/Ge,SAACN,EAAMf,EAAMgB,EAAawB,EAAUF,EAAiBI,EAAgBE,EAAe3B,EAAQU,EAAmBE,GAChI,IAAM/D,EAAgB,CACrB+L,KAAK,IAAI5J,MAAO6H,UAChB/G,OACAf,OACAgB,cACAwB,WACAF,kBACAI,iBACAE,gBACA3B,SACAU,oBACAE,mBAEGvE,EACHwL,EAASnL,EAAcL,EAAkBQ,KAEzCA,EAAcoK,SAAW,EACzBY,EJ3BK,CACNrL,KAAMC,EACNc,UIyBuBV,KAEvBgL,EAAS9K,EAAa,CAAC6D,qBACvBiH,EAASvL,OAAuBoL,U,wFCpC5BmB,GAAc,CAACC,WAAY,GAAIC,YAAa,GAAItD,MAAO,QACvDuD,GAA0B,CAC/BC,IAAK,GAAIrF,IAAK,KAIA,SAASsF,GAAchM,GACrC,IAAM2K,EAAWC,cACX7L,EAAWH,IAETqN,EAA4CjM,EAA5CiM,qBAAsBC,EAAsBlM,EAAtBkM,kBAE9B,EAA0B7I,WAAetE,EAASoC,OAAlD,mBAAOA,EAAP,KAAcgL,EAAd,KACA,EAAwC9I,YAAe,GAAhD+I,EAAP,oBACA,EAAwB/I,WAAetE,EAASuC,MAAhD,mBAAOA,EAAP,KAAa+K,EAAb,KACA,EAAsChJ,YAAe,GAA9CiJ,EAAP,oBACA,EAAsCjJ,WAAetE,EAASyH,aAA9D,mBAAOA,EAAP,KAAoB+F,EAApB,KACA,EAA8BlJ,WAAetE,EAASuB,SAAtD,mBAAOA,EAAP,KAAgBkM,EAAhB,KAEA,EAA4BnJ,WAAetE,EAASmB,QAApD,mBAAOA,EAAP,KAAeuM,EAAf,KACA,EAA4CpJ,WAAmC,YAApBtE,EAASmB,QAApE,mBAAOwM,EAAP,KAAuBC,EAAvB,KACA,EAA4CtJ,WAAetE,EAASiC,gBAApE,mBAAOA,EAAP,KAAuB4L,EAAvB,KACA,GAAsDvJ,WAAA,YAAmBuD,MAAM7H,EAASiC,gBAAgB6F,SAAxG,qBAAOgG,GAAP,MAA4BC,GAA5B,MACA,GAA0CzJ,WAAetE,EAASkC,eAAlE,qBAAOA,GAAP,MAAsB8L,GAAtB,MACA,GAA8C1J,WAAetE,EAASgC,iBAAtE,qBAAOA,GAAP,MAAwBiM,GAAxB,MACA,GAA4C3J,WAAetE,EAASmC,gBAApE,qBAAOA,GAAP,MAAuB+L,GAAvB,MAEMC,GAAoB,SAAClI,GAC1BmH,EAASnH,EAAMC,OAAOC,OACtBiI,MAEKC,GAAmB,SAACpI,GACzBqH,EAAQrH,EAAMC,OAAOC,OACrBiI,MAOKE,GAA0B,SAACnI,EAAOoI,GACvC9G,EAAY8G,GAAYpI,EACxB,IAAMqI,EAAc,eAAO/G,GAC3B+F,EAAegB,GACfJ,MAEKK,GAAsB,SAACtI,EAAOoI,GACnChN,EAAQgN,GAAYpI,EACpB,IAAMuI,EAAU,eAAOnN,GACvBkM,EAAWiB,GACXN,MAwBKO,GAAW,CAChB9J,SAAU,YACVf,YAAa,0JACbC,OAAQ,qBACRlB,SAAU,IAAIE,MAGTqL,GAAiB,aA0BjBQ,GAA0B,OAE1BC,GAAwB,SAAAC,GAAC,gBAAOA,EAAP,OAGzBC,GAAe,WAA+B,IAA9BC,IAA6B,yDAClD,OACC,eAAC,WAAD,WACC,cAAC5L,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,qCACA,cAACyG,GAAA,EAAD,yBACClG,GAAG,kBACHC,MAAM,mBACNC,KAAK,QACL/C,MAAO+F,SAASzE,EAAYjG,IAC5B6H,SAAU,SAAC+C,GAAD,OAAOkC,GAAwBlC,EAAElG,OAAOC,MAAO,OACzDgJ,kBAAmBP,IACf7B,IAPL,IAQCnJ,MAAOgJ,GACPwC,iBAAkBP,WAIrB,cAACzL,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,qCACA,cAACyG,GAAA,EAAD,yBACClG,GAAG,qBACHC,MAAM,sBACNC,KAAK,QACL/C,MAAO+F,SAASzE,EAAY/F,IAC5B2H,SAAU,SAAC+C,GAAD,OAAOkC,GAAwBlC,EAAElG,OAAOC,MAAO,OACzDgJ,kBAAmBP,IACf7B,IAPL,IAQCnJ,MAAOgJ,GACPwC,iBAAkBP,WAIrB,cAACzL,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACuF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,OACHC,MAAM,OACNE,WAAW,gCACXD,KAAK,QACL/C,MAAO5D,EACP6G,MAAOmE,EACPlE,SAAUgF,GACVzK,MAAO,CAAE4F,MAAO,YAGlB,cAACpG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,cAACuF,EAAA,EAAD,CACCC,UAAQ,EACRC,GAAG,aACHC,MAAM,aACNC,KAAK,QACLC,WAAW,GACXhD,MAAO/D,EACPgH,MAAOiE,EACPhE,SAAU8E,GACVvK,MAAO,CAAE4F,MAAO,YAGlB,cAACpG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIyL,EAAoB,EAAI,EAAvC,SACC,eAACzG,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,+BACA,cAACyG,GAAA,EAAD,yBACClG,GAAG,cACHC,MAAM,cACNC,KAAK,QACL/C,MAAO+F,SAAS3K,EAAQC,IACxB6H,SAAU,SAAC+C,GAAD,OAAOqC,GAAoBrC,EAAElG,OAAOC,MAAO,OACrDgJ,kBAAmBP,IACf7B,IAPL,IAQCnJ,MAAOgJ,GACPwC,iBAAkBP,WAIrB,cAACzL,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIyL,EAAoB,EAAI,EAAvC,SACC,eAACzG,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,kCACA,cAACyG,GAAA,EAAD,yBACClG,GAAG,iBACHC,MAAM,iBACNC,KAAK,QACL/C,MAAO+F,SAAS3K,EAAQE,IACxB4H,SAAU,SAAC+C,GAAD,OAAOqC,GAAoBrC,EAAElG,OAAOC,MAAO,OACrDgJ,kBAAmBP,IACf7B,IAPL,IAQCnJ,MAAOgJ,GACPwC,iBAAkBP,eAQxB,OACC,cAAC7G,EAAA,EAAD,CAAQC,KAAMkF,EAAmBjF,OAAO,OAAOC,SAAU,SAAzD,SACC,cAACC,EAAA,EAAD,CAAeC,UAAU,EAAzB,SACC,cAACC,EAAA,EAAD,CAAKhF,UAAU,WAAf,SACC,cAACiF,EAAA,EAAD,CAAaC,WAAW,EAAMC,UAAU,OAAOnF,UAAU,OAAzD,SACC,cAAC+L,GAAA,EAAD,CACC,aAAW,SACXlJ,MAAOhF,EACPkI,SAtLqB,SAACpD,GAC3ByH,EAAUzH,EAAMC,OAAOC,OACvByH,EAAyC,YAAvB3H,EAAMC,OAAOC,OAC/BiI,MAoLKvK,KAAK,sBAJN,SAMC,eAACT,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,WAAtC,UACC,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,oBAAID,UAAU,oBAAd,wBAED,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAGD,UAAU,gBAA5B,SACC,cAACsF,EAAA,EAAD,CAAYC,QArIA,WAWnB+C,EAAS9K,EAVY,CACpBsB,QACAG,OACApB,SACAI,UACAS,mBACAG,kBACAD,iBACAD,oBAGDiL,KAyHO,SAAkC,cAAC,IAAD,QAEnC,cAAC9J,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,SACC,eAACH,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,uBAAtC,UACC,eAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,UACC,cAACkG,EAAA,EAAD,CAAkBtD,MAAM,UAAUuD,QAAS,cAAC4F,GAAA,EAAD,IAAWrG,MAAM,mBAC5D,8BACE6E,GAAoB3G,KAAI,SAAA0D,GAAC,OACzB,cAAC,GAAD,CAEC1J,OAAO,UACPG,UAAWqN,GACXtN,MAAM,GAJP,gBACewJ,YAQjB8C,GACA,eAAC,WAAD,WACEoB,IAAa,GACd,cAAC3L,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,gCACA,cAACyG,GAAA,EAAD,yBACClG,GAAG,eACHC,MAAM,eACNC,KAAK,QACL/C,MAAO+F,SAAS3K,EAAQG,IACxB2H,SAAU,SAAC+C,GAAD,OAAOqC,GAAoBrC,EAAElG,OAAOC,MAAO,OACrDgJ,kBAAmBP,IACf7B,IAPL,IAQCnJ,MAAOgJ,GACPwC,iBAAkBP,WAIrB,cAACzL,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,iCACA,cAACyG,GAAA,EAAD,yBACClG,GAAG,gBACHC,MAAM,gBACNC,KAAK,QACL/C,MAAO+F,SAAS3K,EAAQI,IACxB0H,SAAU,SAAC+C,GAAD,OAAOqC,GAAoBrC,EAAElG,OAAOC,MAAO,OACrDgJ,kBAAmBP,IACf7B,IAPL,IAQCnJ,MAAOgJ,GACPwC,iBAAkBP,WAIrB,cAACzL,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC+G,GAAA,EAAD,CAAYvG,GAAG,iBAAf,uDACA,eAACwG,GAAA,EAAD,CACCzG,UAAQ,EACRC,GAAG,WACHyG,QAAQ,iBACRxG,MAAM,mCACNC,KAAK,QACL/C,MAAOlE,EAEPoH,SAhOqB,SAACpD,GACnC,IAAMyJ,EAAMxD,SAASjG,EAAMC,OAAOC,OACpBuJ,GAAK,GAAKA,GAAK,IAE5B7B,EAAkB6B,GAClB3B,GAAuB,YAAIlG,MAAM6H,GAAK5H,SACtCsG,OA2NYxK,MAAO,CAAE4F,MAAO,QATjB,UAWC,cAACmG,GAAA,EAAD,CAAUxJ,MAAO,EAAjB,eACA,cAACwJ,GAAA,EAAD,CAAUxJ,MAAO,EAAjB,eACA,cAACwJ,GAAA,EAAD,CAAUxJ,MAAO,EAAjB,eACA,cAACwJ,GAAA,EAAD,CAAUxJ,MAAO,EAAjB,eACA,cAACwJ,GAAA,EAAD,CAAUxJ,MAAO,EAAjB,uBAIH,cAAC/C,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAAC+G,GAAA,EAAD,CAAYvG,GAAG,sBAAf,4BACA,eAACwG,GAAA,EAAD,CACCzG,UAAQ,EACRC,GAAG,gBACHyG,QAAQ,sBACRxG,MAAM,iBACNC,KAAK,QACL/C,MAAOjE,GACPmH,SAzPoB,SAACpD,GAClC+H,GAAiB/H,EAAMC,OAAOC,OAC9BiI,MAwPaxK,MAAO,CAAE4F,MAAO,QARjB,UAUC,cAACmG,GAAA,EAAD,CAAUxJ,MAAM,OAAhB,kBACA,cAACwJ,GAAA,EAAD,CAAUxJ,MAAM,QAAhB,mCAQP,cAAC/C,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAID,UAAU,iBAA7B,SACC,eAACF,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,uBAAtC,UACC,eAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,UACC,cAACkG,EAAA,EAAD,CAAkBtD,MAAM,OAAOuD,QAAS,cAAC4F,GAAA,EAAD,IAAWrG,MAAM,oBACzD,cAAC,GAAD,CACC9H,OAAO,OACPG,UAAWqN,GACXtN,MAAM,QAGNsM,GACD,eAAC,WAAD,WACEoB,IAAa,GACd,cAAC3L,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,mCACA,cAACyG,GAAA,EAAD,yBACClG,GAAG,gBACHC,MAAM,wBACNC,KAAK,QACL/C,MAAO+F,SAAS3K,EAAQK,KACxByH,SAAU,SAAC+C,GAAD,OAAOqC,GAAoBrC,EAAElG,OAAOC,MAAO,QACrDgJ,kBAAmBP,IACf7B,IAPL,IAQCnJ,MAAOgJ,GACPwC,iBAAkBP,WAIrB,cAACzL,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,oCACA,cAACyG,GAAA,EAAD,yBACClG,GAAG,iBACHC,MAAM,yBACNC,KAAK,QACL/C,MAAO+F,SAAS3K,EAAQM,KACxBwH,SAAU,SAAC+C,GAAD,OAAOqC,GAAoBrC,EAAElG,OAAOC,MAAO,QACrDgJ,kBAAmBP,IACf7B,IAPL,IAQCnJ,MAAOgJ,GACPwC,iBAAkBP,WAIrB,cAACzL,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,mCACA,cAACyG,GAAA,EAAD,yBACClG,GAAG,gBACHC,MAAM,wBACNC,KAAK,QACL/C,MAAO+F,SAAS3K,EAAQO,KACxBuH,SAAU,SAAC+C,GAAD,OAAOqC,GAAoBrC,EAAElG,OAAOC,MAAO,QACrDgJ,kBAAmBP,IACf7B,IAPL,IAQCnJ,MAAOgJ,GACPwC,iBAAkBP,WAIrB,cAACzL,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,oCACA,cAACyG,GAAA,EAAD,yBACClG,GAAG,iBACHC,MAAM,yBACNC,KAAK,QACL/C,MAAO+F,SAAS3K,EAAQQ,KACxBsH,SAAU,SAAC+C,GAAD,OAAOqC,GAAoBrC,EAAElG,OAAOC,MAAO,QACrDgJ,kBAAmBP,IACf7B,IAPL,IAQCnJ,MAAOgJ,GACPwC,iBAAkBP,WAIrB,cAACzL,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,qCACA,cAACyG,GAAA,EAAD,CACClG,GAAG,gBACHC,MAAM,0BACN9C,MAAO+F,SAAyB,IAAhBlK,IAChBqH,SAjWsB,SAACpD,GACpCgI,GAAmBhI,EAAMC,OAAOC,MAAM,KACtCiI,MAgWalF,KAAK,QACLiG,kBAAmBP,GACnB5B,IAAK,GAAIrF,IAAK,GAEd/D,MAAOgJ,GACPwC,iBA7SwB,SAAAN,GAAC,gBAAOA,EAAP,aAiT5B,cAAC1L,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,eAACgF,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACC,cAACyG,GAAA,EAAD,CAAWxG,UAAU,SAArB,qCACA,cAACyG,GAAA,EAAD,CACClG,GAAG,iBACHC,MAAM,0BACN9C,MAAO+F,SAAS/J,IAChBkH,SA9WqB,SAACpD,GACnCiI,GAAkBjI,EAAMC,OAAOC,OAC/BiI,MA6WalF,KAAK,QACLiG,kBAAmBP,GACnBgB,KAAM,EACN5C,IAAK,EAAGrF,IAAK,GACb/D,MAAOgJ,GACPwC,iBAAkBP,+B,8CCxblB,SAASgB,GAAgB5O,GACvC,MAAkDqD,YAAe,GAAjE,mBAAO6I,EAAP,KAA0B2C,EAA1B,KAEM5P,EAAaD,IACbD,EAAWH,IACjB,EAAgDyE,WAAetE,EAASiC,gBAAjEA,EAAP,oBACA,EAAwCqC,WAAetE,EAASmB,QAAzDA,EAAP,oBA8CAmD,aAAgB,cACb,CAACrC,EAAgBd,IAEpB,IAAMqG,EAA4B,YAAXrG,EACjBsG,EAAc,CACnBjG,GAAIkG,KAAKC,IAAI,EAAG3H,EAASyH,YAAYjG,GAAGxB,EAASuB,QAAQC,IAAI,KAC7DC,GAAIiG,KAAKC,IAAI,EAAG3H,EAASyH,YAAYjG,GAAGxB,EAASuB,QAAQE,IAAI,KAC7DC,GAAIgG,KAAKC,IAAI,EAAG3H,EAASyH,YAAY/F,IAAI8F,EAAiBxH,EAASuB,QAAQG,GAAK1B,EAASuB,QAAQK,MAAM,KACvGD,GAAI+F,KAAKC,IAAI,EAAG3H,EAASyH,YAAY/F,IAAI8F,EAAiBxH,EAASuB,QAAQI,GAAK3B,EAASuB,QAAQQ,MAAM,MAGxG,OACC,eAAC,WAAD,WACC,cAAC,GAAD,CACCoL,kBAAmBA,EACnBD,qBAvD8B,WAChC4C,GAAqB,MAwDpB,sBAAKxM,UAAU,6BAAf,UACC,qBAAIA,UAAU,cAAd,sCACC,cAACgH,EAAA,EAAD,CAASC,MAAM,+FAA+FC,UAAU,QAAxH,SACC,cAAC5B,EAAA,EAAD,CAAYM,KAAK,QAAjB,SACC,cAAC,IAAD,WAIH,sBAAK5F,UAAU,yBAAf,UACC,cAACsF,EAAA,EAAD,CAAYC,QA9BS,WACxBkH,OAAOC,SA6BJ,SAAuC,cAAC,KAAD,MACvC,cAACpH,EAAA,EAAD,CAAYC,QAtEgB,WAC/BiH,GAAqB,IAqElB,SAA8C,cAAC,KAAD,YAGhD,cAAC1M,EAAA,EAAD,yBAAMC,MAAI,EAACC,UAAU,mBAAsBmE,GAA3C,aACEvH,GAAcA,EAAWsG,OAnER,SAACyJ,EAAaC,EAAiBC,GACpC,SAAZA,IACFD,EAAkB,GAGnB,IAAIE,EAAS,GASb,OARAH,EAAYtJ,SAAQ,SAAArF,GACnB,IAAK,IAAIuJ,EAAE,EAAGA,EAAEvJ,EAAU0J,SAAUH,IACnCuF,EAAOrJ,KAAKzF,MAID8O,EAAOC,aAAY,SAACC,EAAEzF,EAAE0F,EAAEC,GAAP,OAAcF,EAAEvJ,KAAKyJ,EAAEC,OAAO,EAAEP,IAAkBI,IAAG,IAEzEnJ,KAAI,SAACuJ,EAAKJ,GACrB,OACA,qBAAKhN,UAAU,eAAf,SACEoN,EAAIvJ,KAAI,SAAC8B,EAAO0H,GAChB,IAAM5E,EAAQuE,EAAEJ,EAAgBS,EAChC,OACC,cAAC,GAAD,CAECrP,UAAW2H,GAFZ,uBACsB8C,QALzB,0BAAsDuE,OAmDlBM,CAAa1Q,EAAYF,EAASiC,eAAgBjC,EAASmB,QAAU,WCvF7F,SAAS0P,KAEvB,IAAM3Q,EAAaD,IACbD,EAAWH,IAEjB,OACC,cAACyI,EAAA,EAAD,CAAKhF,UAAU,MAAf,SACEtD,GAAYE,GACZ,eAAC,WAAD,WACC,cAAC,GAAD,IACA,cAAC,GAAD,SCNU,SAAS4Q,GAA6B7P,GACnCpB,IAAjB,IAEQkR,EAAoD9P,EAApD8P,yBAA0BC,EAA0B/P,EAA1B+P,sBAMlC,OACC,cAAChJ,EAAA,EAAD,CAAQC,KAAM+I,EAAuB9I,OAAO,QAAQC,SAAU,SAA9D,SACC,cAACC,EAAA,EAAD,CAAeC,UAAU,EAAzB,SACC,cAACC,EAAA,EAAD,CAAKhF,UAAU,WAAf,SACC,eAACF,EAAA,EAAD,CAAMsF,WAAS,EAACC,QAAS,EAAGrF,UAAU,WAAtC,UACC,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAf,SACC,oBAAID,UAAU,oBAAd,8BAED,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAGD,UAAU,gBAA5B,SACC,cAACsF,EAAA,EAAD,CAAYC,QAbE,WACnBkI,KAYK,SAAkC,cAAC,IAAD,QAEnC,eAAC3N,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,UACC,4JACA,iMACA,+UACA,kNAEA,gEACA,gTAMA,yCACA,uPACA,ybAaA,0CACA,oVASA,gEACA,4OACA,0EAEA,4CACA,6IAA+G,mBAAG0N,KAAK,6CAAR,4DAE/G,uCACA,qQAEA,2CACA,+GACA,qMACA,oOCzEP,IAAMC,GAAS,CACd,YACA,OACA,UACA,aACA,eACA,aACA,cACA,kBACA,cACA,kBACA,uBACA,eACA,sBACA,QACA,UACA,SACA,YACA,SAGc,SAASC,KAEvB,MAAsC7M,WAAe,GAArD,mBAAO8M,EAAP,KAAoBC,EAApB,KACA,EAA0C/M,WAAe,IAAzD,mBAAOgN,EAAP,KAAsBC,EAAtB,KAiBMC,EAAoB,SAACC,IACV,IAAIC,KACZC,IAAI,kBAAmBF,EAAiB,CAAEG,KAAM,MACxDP,EAAeI,IAGhBnN,aAAgB,WACf,IAAMuN,EAAU,IAAIH,IACdI,EAAe5F,SAAS2F,EAAQE,IAAI,qBAAuB,EACjEV,EAAeS,KACb,IAEHxN,aAAgB,WACfiN,EAAiB,aAAD,OAAcL,GAAOE,OACnC,CAACA,IACJ,MAA0D9M,YAAe,GAAzE,mBAAO0M,EAAP,KAA8BgB,EAA9B,KASA,OACC,sBAAK1O,UAAWgO,EAAhB,UACC,eAACW,EAAA,EAAD,CAAW3O,UAAU,oCAArB,UACC,oBAAIA,UAAU,YAAd,yBACA,sBAAKA,UAAU,6CAAf,UACC,cAACsF,EAAA,EAAD,CAAYC,QA3CS,WACxB,IAAI4I,EAAkBL,EAAc,EAChCK,EAAkB,IACrBA,EAAkBP,GAAO1K,OAAS,GAEnCgL,EAAkBC,IAsCf,SAAuC,cAAC,IAAD,MACvC,cAAC7I,EAAA,EAAD,CAAYC,QArCK,WACpB,IAAI4I,EAAkBL,EAAc,EAChCK,GAAmBP,GAAO1K,SAC7BiL,EAAkB,GAEnBD,EAAkBC,IAgCf,SAAmC,cAAC,IAAD,YAGrC,cAACQ,EAAA,EAAD,CAAW3O,UAAU,YAArB,SACC,cAAC,GAAD,MAED,eAAC2O,EAAA,EAAD,CAAW3O,UAAU,iBAArB,UACC,qBAAKA,UAAU,cAAf,SACC,cAACoH,EAAA,EAAD,CAAQ7B,QArBwB,WACnCmJ,GAAyB,IAoBtB,wCAED,mBAAG1O,UAAU,kBAAb,kDAED,cAACwN,GAAD,CACCE,sBAAuBA,EACvBD,yBAxBkC,WACpCiB,GAAyB,S,oCCxEdE,GAAkB,CAC9B,KAAQ,qBACR,MAAS,GACT,OAAU,UACV,eAAkB,EAClB,cAAiB,OACjB,gBAAmB,IACnB,eAAkB,EAClB,YAAe,CAAC,GAAM,GAAI,GAAM,IAChC,QAAW,CAAC,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,GAAM,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,GAAI,IAAO,IAC5F,iBAAmB,GAGdC,GAAe,CACpBtO,KAAM,cACN3D,WAAY,GACZF,SAAUkS,IAwDIE,GArDC,WAA+C,IAA9CrS,EAA6C,uDAArCoS,GAAqC,yCAAtB5R,EAAsB,EAAtBA,KAAS8R,EAAa,mBAG7D,OAFAC,QAAQC,IAAIxS,EAAOQ,EAAM8R,GAEjB9R,GAEP,KAAKC,EACJ,OAAO,2BACHT,GADJ,IAECK,iBAAkBiS,EAAQjS,mBAI5B,KAAKI,EACJ,OAAO,2BACHT,GADJ,IAECG,WAAW,GAAD,mBAAMH,EAAMG,YAAZ,CAAwBmS,EAAQ/Q,cAI5C,KAAKd,EACJ,IAAMgS,EAAQ,2BACVzS,GADU,IAEbG,WAAYH,EAAMG,WAAWiH,KAC5B,SAAC7F,EAAWuJ,GACX,OAAOvJ,EAAUqL,MAAQ0F,EAAQxR,gBAAgB8L,IAA1C,2BAAoDrL,GAAc+Q,EAAQzR,eAC1EU,OAGV,OAAOkR,EAGR,KAAKhS,EACJ,OAAO,2BACHT,GADJ,IAECG,WAAYH,EAAMG,WAAWuS,QAC5B,SAACnR,EAAWuJ,GAAZ,OAAkBvJ,EAAUqL,MAAQ0F,EAAQ3G,kBAAkBiB,SAMjE,KAAKnM,EACJ,OAAO,2BACHT,GADJ,IAECC,SAAS,2BAAKD,EAAMC,UAAaqS,EAAQrS,YAI3C,QACC,OAAOD,ICtCV,IAAM2S,GAAQC,aAAYP,GAjB1B,WACC,IACC,IAAMQ,EAAkBC,aAAaC,QAAQ,mBAC7C,GAAwB,OAApBF,EAA0B,OAC7B,IAAMG,EAAcC,KAAKC,MAAML,GACzBM,EAAc,2BAAOhB,IAAoBa,EAAY/S,UACrDwS,EAAQ,2BAAOO,GAAP,IAAoB,SAAYG,IAE9C,OADAZ,QAAQC,IAAIC,GACLA,EACP,MAAOpG,GAER,YADAkG,QAAQa,KAAK/G,IAOoBgH,IAInCV,GAAMW,WAAU,kBAhChB,SAA4BtT,GAC3B,IACC,IAAM6S,EAAkBI,KAAKM,UAAUvT,GACvC8S,aAAaU,QAAQ,kBAAmBX,GACvC,MAAOxG,GACRkG,QAAQa,KAAK/G,IA2BOoH,CAAmBd,GAAMe,eAEhCf,UC9BTgB,GAAQC,YAAY,CACzBC,WAAY,CACXtR,WAAY,CACX,OACA,QACA,qBACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACC+E,KAAK,KACPwM,OAAQ,CACNC,SAAU,OACVC,WAAY,MACZC,cAAe,WAgBJC,OAXf,WACE,OACE,cAAC,IAAD,CAAUvB,MAAOA,GAAjB,SACF,eAACwB,EAAA,EAAD,CAAeR,MAAOA,GAAtB,UACC,cAACS,EAAA,EAAD,IACA,cAAC,GAAD,UC1BYC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oBCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACD,cAACC,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,SACC,cAAC,GAAD,QAGAC,SAASC,eAAe,SAM1BhB,O","file":"static/js/main.59c82298.chunk.js","sourcesContent":["export const SET_CURRENT_SOAP_LABEL = 'SET_CURRENT_SOAP_LABEL';\r\nexport const ADD_SOAP_LABEL = 'ADD_SOAP_LABEL';\r\nexport const EDIT_CURRENT_SOAP_LABEL = 'EDIT_CURRENT_SOAP_LABEL';\r\nexport const DELETE_CURRENT_SOAP_LABEL = 'DELETE_CURRENT_SOAP_LABEL';\r\nexport const EDIT_SETTINGS = 'EDIT_SETTINGS';","import * as constants from './constants';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nexport const useSettings = () => {\r\n\treturn useSelector((state) => {\r\n\t\treturn state.settings;\r\n\t});\r\n};\r\nexport const useSoapLabels = () => {\r\n\treturn useSelector((state) => {\r\n\t\treturn state.soapLabels;\r\n\t});\r\n};\r\nexport const useCurrentSoapLabel = () => {\r\n\treturn useSelector((state) => {\r\n\t\treturn state.currentSoapLabel;\r\n\t});\r\n};\r\n\r\n\r\n\r\nexport const selectCurrentSoapLabel = (_currentSoapLabel) => {\r\n\t// console.log(_currentSoapLabel, 'currentSoapLabel');\r\n\treturn {\r\n\t\ttype: constants.SET_CURRENT_SOAP_LABEL,\r\n\t\tcurrentSoapLabel: _currentSoapLabel\r\n\t};\r\n};\r\nexport const addSoapLabel = (_soapLabelData) => {\r\n\t// console.log(_soapLabels, 'soapLabels');\r\n\treturn {\r\n\t\ttype: constants.ADD_SOAP_LABEL,\r\n\t\tsoapLabel: _soapLabelData\r\n\t};\r\n};\r\nexport const editSoapLabel = (_soapLabelToEdit, _soapLabelData) => {\r\n\t// console.log(_soapLabelData, _soapLabelToEdit, 'dispatchEditSoapLabel');\r\n\treturn {\r\n\t\ttype: constants.EDIT_CURRENT_SOAP_LABEL,\r\n\t\tsoapLabelData: _soapLabelData,\r\n\t\tsoapLabelToEdit: _soapLabelToEdit\r\n\t};\r\n};\r\nexport const deleteSoapLabel = (_soapLabelToDelete) => {\r\n\t// console.log(_soapLabels, 'soapLabels');\r\n\treturn {\r\n\t\ttype: constants.DELETE_CURRENT_SOAP_LABEL,\r\n\t\tsoapLabelToDelete: _soapLabelToDelete\r\n\t};\r\n};\r\n\r\nexport const editSettings = (_settingsData) => {\r\n\t// console.log(_soapLabels, 'soapLabels');\r\n\treturn {\r\n\t\ttype: constants.EDIT_SETTINGS,\r\n\t\tsettings: _settingsData\r\n\t};\r\n};\r\n","import './Label.css';\r\nimport './LabelWideRow.css';\r\nimport * as React from 'react';\r\nimport { Grid } from '@mui/material';\r\nimport { useSettings } from '../../store/actions';\r\n\r\nexport default function Label(props) {\r\n\tconst settings = useSettings();\r\n\r\n\tconst {layout: layoutProps, demo: demoProps, soapLabel} = props;\r\n\r\n\tconst {pt, pb, pl, pr, pl1, pr1, pl2, pr2} = settings.padding;\r\n\tconst layout = layoutProps || settings.layout || \"columns\";\r\n\tconst leftColumnWidth = settings.leftColumnWidth;\r\n\tconst layoutNbPerRow = settings.layoutNbPerRow;\r\n\tconst textAlignment = settings.textAlignment;\r\n\tconst seperatorWidth = settings.seperatorWidth;\r\n\tconst brand = settings.brand;\r\n\tconst demo = !!demoProps;\r\n\r\n\tconst styleFont = {fontFamily: settings.font};\r\n\tconst styleFontAlign = {fontFamily: settings.font, textAlign: textAlignment};\r\n\tconst styleAlign = {textAlign: textAlignment};\r\n\tconst styleBackgroundColor = {backgroundColor:  demo ? '#f8f8f8' : 'transparent'};\r\n\r\n\tconst dateOptions = {year: \"numeric\", month: \"long\", day: \"numeric\"};\r\n\tconst soapDate = soapLabel.date ? new Date(soapLabel.date).toLocaleDateString(\"fr-FR\", dateOptions) : \"\";\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{layout === \"columns\" ? (\r\n\t\t\t\t<Grid item \r\n\t\t\t\t\tclassName=\"labelGridItem\" \r\n\t\t\t\t\txs={12/layoutNbPerRow} \r\n\t\t\t\t\tpaddingTop={pt+'px'}\r\n\t\t\t\t\tpaddingBottom={pb+'px'}\r\n\t\t\t\t\tpaddingLeft={pl+'px'}\r\n\t\t\t\t\tpaddingRight={pr+'px'}\r\n\t\t\t\t\tstyle={styleBackgroundColor}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p style={styleFontAlign} className=\"labelSoapName\">{soapLabel.name}</p>\r\n\t\t\t\t\t<p style={styleAlign} className=\"labelSoapIngredients\">{soapLabel.ingredients}</p>\r\n\t\t\t\t\t{brand && (<p style={styleAlign} className=\"labelSoapBrand\">{brand}</p>)}\r\n\t\t\t\t\t{soapLabel.phrase && (<p style={styleAlign} className=\"labelSoapPhrase\">{soapLabel.phrase}</p>)}\r\n\t\t\t\t\t{soapLabel.date && (<p className=\"labelSoapDate\">{soapDate}</p>)}\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t<Grid xs={12} item\r\n\t\t\t\t\tclassName=\"labelWideRowGridItem\"\r\n\t\t\t\t\tpaddingTop={pt+'px'}\r\n\t\t\t\t\tpaddingBottom={pb+'px'}\r\n\t\t\t\t\tstyle={styleBackgroundColor}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item \r\n\t\t\t\t\t\txs={12*leftColumnWidth} \r\n\t\t\t\t\t\tpaddingLeft={pl1+'px'}\r\n\t\t\t\t\t\tpaddingRight={pr1+'px'}\r\n\t\t\t\t\t\tclassName=\"labelWideRowGridItemLeft\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p className=\"labelWideRowSoapIngredients\">{soapLabel.ingredients}</p>\r\n\t\t\t\t\t\t{soapLabel.date && (<p className=\"labelWideRowSoapDate\">{soapDate}</p>)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item \r\n\t\t\t\t\t\txs={12*(1-leftColumnWidth)} \r\n\t\t\t\t\t\tpaddingLeft={pl2+'px'}\r\n\t\t\t\t\t\tpaddingRight={pr2+'px'}\r\n\t\t\t\t\t\tclassName=\"labelWideRowGridItemRight\" \r\n\t\t\t\t\t\tstyle={{borderLeft: `${seperatorWidth}px solid #000`}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{brand && (<p className=\"labelWideRowSoapBrand\">{brand}</p>)}\r\n\t\t\t\t\t\t<p style={styleFont} className=\"labelWideRowSoapName\">{soapLabel.name}</p>\r\n\t\t\t\t\t\t{soapLabel.phrase && (<p className=\"labelWideRowSoapPhrase\">{soapLabel.phrase}</p>)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './LabelModal.css';\r\nimport * as React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport { TextField } from '@mui/material';\r\nimport { FormControl } from '@mui/material';\r\nimport { FormControlLabel } from '@mui/material';\r\nimport { Checkbox } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport { Tooltip } from '@mui/material';\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport BackspaceIcon from '@mui/icons-material/Backspace';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nimport Label from './labelLayouts/Label';\r\nimport { useCurrentSoapLabel, useSettings } from '../store/actions';\r\n\r\nconst translations = {\r\n\t'Almond Oil, sweet': 'Huile d\\'amande douce',\r\n\t'Aloe Butter': 'Beurre d\\'aloès',\r\n\t'Argan Oil': 'Huile d\\'argane',\r\n\t'Avocado Oil': 'Huile d\\'avocat',\r\n\t'Canola Oil': 'Huile de canola',\r\n\t'Castor Oil': 'Huile de ricin',\r\n\t'Cocoa Butter': 'Beurre de cacao',\r\n\t'Coconut Oil, 76 deg': 'Huile de coconut',\r\n\t'Coconut Oil, 92 deg': 'Huile de coconut',\r\n\t'Coconut Oil, fractionated': 'Huile de coconut',\r\n\t'Corn Oil': 'Huile de maïs',\r\n\t'Grapeseed Oil': 'Huile de pépins de raisin',\r\n\t'Kokum Butter': 'Beurre de kokum',\r\n\t'Jojoba Oil (a Liquid Wax Ester)': 'Huile de jojoba',\r\n\t'Mango Seed Butter': 'Beurre de mangue',\r\n\t'Olive Oil': 'Huile d\\'olive',\r\n\t'Palm Oil': 'Huile de palme',\r\n\t'Rice Bran Oil, refined': 'Huile de riz',\r\n\t'Safflower Oil': 'Huile de carthame',\r\n\t'Sesame Oil': 'Huile de sésame',\r\n\t'Shea Butter': 'Beurre de karité',\r\n\t'Sunflower Oil': 'Huile de tournesol',\r\n}\r\n\r\nexport default function LabelModal(props) {\r\n\tconst settings = useSettings();\r\n\tconst currentSoapLabel = useCurrentSoapLabel();\r\n\r\n\tconst {saveLabel, onCloseLabelModal, labelModalOpen} = props;\r\n\r\n\tconst [useThinSpace, setUseThinSpace] = React.useState(false);\r\n\tconst [useSoapCalcRecipe, setUseSoapCalcRecipe] = React.useState(false);\r\n\tconst [translateFrench, setTranslateFrench] = React.useState(false);\r\n\tconst [soapName, setSoapName] = React.useState('');\r\n\tconst [soapNameError, setSoapNameError] = React.useState(false);\r\n\tconst [soapPhrase, setSoapPhrase] = React.useState('');\r\n\tconst [soapDate, setSoapDate] = React.useState(new Date());\r\n\tconst [soapIngredients, setSoapIngredients] = React.useState('');\r\n\tconst [soapCode, setSoapCode] = React.useState('');\r\n\tconst [soapFragrances, setSoapFragrances] = React.useState('');\r\n\tconst [soapColorants, setSoapColorants] = React.useState('');\r\n\r\n\tconst [soapRecipeError, setSoapRecipeError] = React.useState(false);\r\n\t\r\n\tconst [ingredientsCodeOutput, setIngredientsCodeOutput] = React.useState('');\r\n\t\r\n\tconst handleUseThinSpaceChange = (event) => {\r\n\t\tconst _useThinSpace = !!event.target.checked;\r\n\t\tsetUseThinSpace(_useThinSpace);\r\n\t\tsetSoapName(_useThinSpace ? soapName.replaceAll(\" \", \" \") : soapName.replaceAll(\" \", \" \"));\r\n\t};\r\n\tconst handleUseSoapCalcRecipeChange = (event) => {\r\n\t\tsetUseSoapCalcRecipe(!!event.target.checked);\r\n\t};\r\n\tconst handleTranslateFrenchChange = (event) => {\r\n\t\tsetTranslateFrench(!!event.target.checked);\r\n\t};\r\n\tconst handleSoapNameChange = (event) => {\r\n\t\tconst _soapName = event.target.value;\r\n\t\tsetSoapName(useThinSpace ? _soapName.replaceAll(\" \", \" \") : _soapName.replaceAll(\" \", \" \"));\r\n\t};\r\n\t// const handleSoapDateChange = (event) => {\r\n\t// \tconst _soapDate = event.target.value;\r\n\t// \tsetSoapDate(_soapDate);\r\n\t// };\r\n\tconst handleSoapPhraseChange = (event) => {\r\n\t\tsetSoapPhrase(event.target.value);\r\n\t};\r\n\tconst handleSoapFragrancesChange = (event) => {\r\n\t\tsetSoapFragrances(event.target.value);\r\n\t};\r\n\tconst handleSoapColorantsChange = (event) => {\r\n\t\tsetSoapColorants(event.target.value);\r\n\t};\r\n\r\n\tconst handleSoapRecipeChange = (event) => {\r\n\t\tif(useSoapCalcRecipe) {\r\n\t\t\tsetSoapCode(event.target.value);\r\n\t\t} else {\r\n\t\t\tsetSoapIngredients(event.target.value);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleClickSave = () => {\r\n\t\tsetSoapNameError(!soapName);\r\n\t\tsetSoapRecipeError(!soapCode);\r\n\t\tif(soapName && soapCode && ingredientsCodeOutput) {\r\n\t\t\t// name, ingredients, soapCode, soapIngredients, soapFragrances, soapColorants, phrase, translateFrench\r\n\t\t\tsaveLabel(\r\n\t\t\t\tsoapName, \r\n\t\t\t\tsoapDate.getTime(), \r\n\t\t\t\tingredientsCodeOutput, \r\n\t\t\t\tsoapCode, \r\n\t\t\t\tsoapIngredients, \r\n\t\t\t\tsoapFragrances, \r\n\t\t\t\tsoapColorants, \r\n\t\t\t\tsoapPhrase, \r\n\t\t\t\tuseSoapCalcRecipe, \r\n\t\t\t\ttranslateFrench\r\n\t\t\t);\r\n\t\t\tonCloseLabelModal();\r\n\t\t}\r\n\t};\r\n\r\n\tconst generateIngredients = () => {\r\n\t\tlet allIngredients = soapCode;\r\n\r\n\t\tif (useSoapCalcRecipe) {\r\n\t\t\tif (!soapCode) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst soapCodeData = {};\r\n\r\n\t\t\tconst rxMatchWater = soapCode.match(/^Water [0-9.]+ [0-9.]+ ([0-9.]+$)/m);\r\n\t\t\tif (rxMatchWater && rxMatchWater.length > 1 && rxMatchWater[1]) {\r\n\t\t\t\tsoapCodeData[translateFrench ? \"Eau\" : \"Water\"] = rxMatchWater[1];\r\n\t\t\t}\r\n\r\n\t\t\tconst rxMatchLye = soapCode.match(/^Lye - NaOH [0-9.]+ [0-9.]+ ([0-9.]+$)/m);\r\n\t\t\tif (rxMatchLye && rxMatchLye.length > 1 && rxMatchLye[1]) {\r\n\t\t\t\tsoapCodeData[translateFrench ? \"Hydroxyde de sodium\" : \"Lye\"] = rxMatchLye[1];\r\n\t\t\t}\r\n\r\n\t\t\t// 1 Coconut Oil, 76 deg 30.00 0.595 9.52 270.00\r\n\t\t\tconst arrOils = [...soapCode.matchAll(/^[0-9.]+ ([\\s\\w,]+) [0-9.]+\\.[0-9.]+ [0-9.]+ [0-9.]+ ([0-9.]+)$/gm)];\r\n\t\t\tarrOils.forEach((oilElem) => {\r\n\t\t\t\tsoapCodeData[translateFrench ? translations[oilElem[1]] : oilElem[1]] = oilElem[2];\r\n\t\t\t});\r\n\r\n\t\t\tconst sortableRecipeData = [];\r\n\t\t\tfor (let soapItem in soapCodeData) {\r\n\t\t\t\tsortableRecipeData.push([soapItem, soapCodeData[soapItem]]);\r\n\t\t\t}\r\n\t\t\tsortableRecipeData.sort(function(a, b) {\r\n\t\t\t\treturn b[1] - a[1];\r\n\t\t\t});\r\n\r\n\t\t\tallIngredients = sortableRecipeData.map((ingredient) => ingredient[0]).join(\", \").toLowerCase();\r\n\t\t} else {\r\n\t\t\tallIngredients = soapIngredients;\r\n\t\t}\r\n\r\n\t\tsetSoapIngredients(allIngredients);\r\n\r\n\t\tconst ingredientsLabel = translateFrench ? \"Ingrédients\" : \"Ingredients\";\r\n\t\tallIngredients = `${ingredientsLabel}: ${allIngredients}, ${soapFragrances || \"fragrance(s)\"}, ${soapColorants || \"colorant(s)\"}.`\r\n\t\tsetIngredientsCodeOutput(allIngredients);\r\n\t};\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tgenerateIngredients();\r\n\t}, [soapCode, soapIngredients, soapColorants, soapFragrances, soapPhrase, useThinSpace, useSoapCalcRecipe, translateFrench]);\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tif(currentSoapLabel && currentSoapLabel.name && currentSoapLabel.ingredients) {\r\n\t\t\tsetSoapName(currentSoapLabel.name);\r\n\t\t\tsetSoapDate(new Date(currentSoapLabel.date));\r\n\t\t\tsetSoapPhrase(currentSoapLabel.phrase);\r\n\t\t\tsetSoapCode(currentSoapLabel.soapCode);\r\n\t\t\tsetSoapIngredients(currentSoapLabel.soapIngredients || currentSoapLabel.ingredients);\r\n\t\t\tsetSoapFragrances(currentSoapLabel.soapFragrances);\r\n\t\t\tsetSoapColorants(currentSoapLabel.soapColorants);\r\n\t\t\tsetTranslateFrench(currentSoapLabel.translateFrench);\r\n\t\t\tsetUseSoapCalcRecipe(currentSoapLabel.useSoapCalcRecipe && !!currentSoapLabel.soapCode);\r\n\t\t} else {\r\n\t\t\tsetSoapName(\"\");\r\n\t\t\tsetSoapDate(new Date());\r\n\t\t\tsetSoapPhrase(\"\");\r\n\t\t\tsetSoapCode(\"\");\r\n\t\t\tsetSoapIngredients(\"\");\r\n\t\t\tsetSoapFragrances(\"\");\r\n\t\t\tsetSoapColorants(\"\");\r\n\t\t\tsetTranslateFrench(settings.translateFrench || false);\r\n\t\t\tsetUseSoapCalcRecipe(true);\r\n\t\t}\r\n\t}, [currentSoapLabel, settings]);\r\n\r\n\tconst handleClose = () => {\r\n\t\tonCloseLabelModal();\r\n\t};\r\n\t\r\n\tconst isColumnLayout = settings.layout === \"columns\";\r\n\tconst pagePadding = {\r\n\t\tpt: Math.max(0, 20-settings.padding.pt)+'px',\r\n\t\tpb: Math.max(0, 20-settings.padding.pb)+'px',\r\n\t\tpl: Math.max(0, 20-(isColumnLayout ? settings.padding.pl : settings.padding.pl1))+'px',\r\n\t\tpr: Math.max(0, 20-(isColumnLayout ? settings.padding.pr : settings.padding.pr2))+'px',\r\n\t};\r\n\tconst arrPerRow = [...Array(isColumnLayout ? settings.layoutNbPerRow : 1).keys()];\r\n\r\n\tconst tooltipSoapCode = `You can copy and paste the soapcalc.net generated recipe, \r\n\t\tand this if checked, all ingredients will be extracted${translateFrench ? \", translated in french\" : \"\"} and ordered by weight.`;\r\n\t\r\n\treturn (\r\n\t\t<Dialog open={labelModalOpen} scroll=\"body\" maxWidth={'1000px'}>\r\n\t\t\t<DialogContent dividers={false}>\r\n\t\t\t\t<Box className=\"modalBox\">\r\n\t\t\t\t\t<FormControl fullWidth={true} component=\"form\" className=\"form\">\r\n\t\t\t\t\t\t<Grid container spacing={2} className=\"gridForm\">\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<h2 className=\"secondTitle title\">New Soap Label</h2>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} className=\"gridItemClose\">\r\n\t\t\t\t\t\t\t\t<IconButton onClick={handleClose}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tid=\"soap-name\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Name\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapName}\r\n\t\t\t\t\t\t\t\t\terror={soapNameError}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapNameChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel \r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox \r\n\t\t\t\t\t\t\t\t\tchecked={useThinSpace}\r\n\t\t\t\t\t\t\t\t\tonChange={handleUseThinSpaceChange} />} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Use thin spaces in Soap Name\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"phrase\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Phrase\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapPhrase}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapPhraseChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<DesktopDatePicker\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Date\"\r\n\t\t\t\t\t\t\t\t\tinputFormat=\"MM/dd/yyyy\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapDate}\r\n\t\t\t\t\t\t\t\t\tonChange={(newValue) => {\r\n\t\t\t\t\t\t\t\t\t  setSoapDate(newValue);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\trenderInput={(params) => \r\n\t\t\t\t\t\t\t\t\t\t<TextField {...params} size=\"small\" style={{ width: '100%' }} />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{useSoapCalcRecipe ? (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tid=\"soap-code\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Code\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"tfRecipeCode\"\r\n\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\trows={8}\r\n\t\t\t\t\t\t\t\t\t\tvalue={soapCode}\r\n\t\t\t\t\t\t\t\t\t\terror={soapRecipeError}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleSoapRecipeChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tid=\"soap-ingredients\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Ingredients\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"tfRecipeCode\"\r\n\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\trows={8}\r\n\t\t\t\t\t\t\t\t\t\tvalue={soapIngredients}\r\n\t\t\t\t\t\t\t\t\t\terror={soapRecipeError}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleSoapRecipeChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel \r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox \r\n\t\t\t\t\t\t\t\t\tchecked={useSoapCalcRecipe} \r\n\t\t\t\t\t\t\t\t\tonChange={handleUseSoapCalcRecipeChange} />} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Extract ingredients from soapcalc.net recipe\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Tooltip title={tooltipSoapCode} placement=\"right\">\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t<InfoIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel \r\n\t\t\t\t\t\t\t\t\tdisabled={!useSoapCalcRecipe}\r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox \r\n\t\t\t\t\t\t\t\t\tchecked={translateFrench} \r\n\t\t\t\t\t\t\t\t\tonChange={handleTranslateFrenchChange} />} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Translate ingredients in french.\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"soap-fragrances\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Fragrance(s)\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapFragrances}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapFragrancesChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"soap-colorants\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Colorant(s)\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapColorants}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapColorantsChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemButtons\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tendIcon={<BackspaceIcon />}>Clear</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tendIcon={<SaveIcon />} \r\n\t\t\t\t\t\t\t\t\tonClick={handleClickSave}>Save</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h2 className=\"secondTitle\">Label Preview</h2>\r\n\t\t\t\t\t<Grid className=\"gridResult\" {...pagePadding}>\r\n\t\t\t\t\t\t{arrPerRow.map(i => (\r\n\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\tkey={`label-${i}`}\r\n\t\t\t\t\t\t\t\tsoapLabel={{soapName, ingredients: ingredientsCodeOutput, soapPhrase, soapDate}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","\r\nimport './QuantitySelector.css';\r\nimport * as React from 'react';\r\nimport { IconButton } from '@mui/material';\r\n\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\n// const styles = {\r\n// \ticonButton: {\r\n// \t\tpadding: '2px',\r\n// \t\t'svg': {\r\n// \t\t\twidth: '20px',\r\n// \t\t\theight: '20px',\r\n// \t\t},\r\n// \t}\r\n// }\r\n\r\nexport default function QuantitySelector(props) {\r\n\tconst { quantity: quantityProps, handleUpdateQty } = props;\r\n\tconst [quantity, setQuantity] = React.useState(quantityProps);\r\n\r\n\tconst handleRemove = () => {\r\n\t\tupdateQuantity(quantity-1);\r\n\t};\r\n\tconst handleAdd = () => {\r\n\t\tupdateQuantity(quantity+1);\r\n\t};\r\n\tconst updateQuantity = (newQty) => {\r\n\t\tsetQuantity(newQty);\r\n\t\thandleUpdateQty(newQty);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"wrapperQuantity\">\r\n\t\t\t<IconButton size=\"small\" className=\"iconButton\" onClick={handleRemove}><RemoveIcon/></IconButton>\r\n\t\t\t<span className=\"labelQuantity\">{quantity}</span>\r\n\t\t\t<IconButton size=\"small\" className=\"iconButton\" onClick={handleAdd}><AddIcon/></IconButton>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './SoapLabels.css';\r\nimport * as React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport LabelModal from './LabelModal';\r\nimport QuantitySelector from './components/QuantitySelector';\r\n\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addSoapLabel, editSoapLabel, useSoapLabels, useCurrentSoapLabel, selectCurrentSoapLabel, deleteSoapLabel, editSettings } from '../store/actions';\r\n\r\nexport default function LabelsList(props) {\r\n\tconst [confirmDeleteOpen, setConfirmDeleteOpen] = React.useState(false);\r\n\tconst [labelModalOpen, setLabelModalOpen] = React.useState(false);\r\n\tconst [soapLabelToDelete, setSoapLabelToDelete] = React.useState(undefined);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst soapLabels = useSoapLabels();\r\n\t// const settings = useSettings();\r\n\tconst currentSoapLabel = useCurrentSoapLabel();\r\n\r\n\t// Label Modal\r\n\tconst handleLabelModalOpen = () => {\r\n\t\tsetLabelModalOpen(true);\r\n\t\tdispatch(selectCurrentSoapLabel(undefined));\r\n\t}\r\n\tconst handleLabelModalClose = () => {\r\n\t\tsetLabelModalOpen(false);\r\n\t\tdispatch(selectCurrentSoapLabel(undefined));\r\n\t}\r\n\t\r\n\t// (New / Edit)\r\n\tconst saveLabel = (name, date, ingredients, soapCode, soapIngredients, soapFragrances, soapColorants, phrase, useSoapCalcRecipe, translateFrench) => {\r\n\t\tconst soapLabelData = {\r\n\t\t\tuid: new Date().getTime(), \r\n\t\t\tname, \r\n\t\t\tdate, \r\n\t\t\tingredients, \r\n\t\t\tsoapCode, \r\n\t\t\tsoapIngredients, \r\n\t\t\tsoapFragrances, \r\n\t\t\tsoapColorants, \r\n\t\t\tphrase, \r\n\t\t\tuseSoapCalcRecipe, \r\n\t\t\ttranslateFrench, \r\n\t\t};\r\n\t\tif (currentSoapLabel) {\r\n\t\t\tdispatch(editSoapLabel(currentSoapLabel, soapLabelData));\r\n\t\t} else {\r\n\t\t\tsoapLabelData.quantity = 1;\r\n\t\t\tdispatch(addSoapLabel(soapLabelData));\r\n\t\t}\r\n\t\tdispatch(editSettings({translateFrench}));\r\n\t\tdispatch(selectCurrentSoapLabel(undefined));\r\n\t}\r\n\t\r\n\t// Change Qty\r\n\tconst handleSoapLabelQtyChange = (soapLabel, qty) => {\r\n\t\tconst soapLabelData = {\r\n\t\t\tquantity:  parseInt(qty),\r\n\t\t};\r\n\t\tdispatch(editSoapLabel(soapLabel, soapLabelData));\r\n\t};\r\n\t// Edit\r\n\tconst handleEdit = (soapLabel) => {\r\n\t\tdispatch(selectCurrentSoapLabel(soapLabel));\r\n\t\tsetLabelModalOpen(true);\r\n\t};\r\n\t// Delete\r\n\tconst handleDelete = (soapLabel) => {\r\n\t\tsetSoapLabelToDelete(soapLabel);\r\n\t\tsetConfirmDeleteOpen(true);\r\n\t};\r\n\t// Confirm Delete Dialog\r\n\tconst handleConfirmDeleteClose = () => {\r\n\t\tsetConfirmDeleteOpen(false);\r\n\t\tdispatch(deleteSoapLabel(soapLabelToDelete));\r\n\t\tsetSoapLabelToDelete(undefined);\r\n\t};\r\n\tconst handleConfirmDeleteDisagree = () => {\r\n\t\tsetConfirmDeleteOpen(false);\r\n\t\tsetSoapLabelToDelete(undefined);\r\n\t};\r\n\t\r\n\tlet index = 0;\r\n\tconst dateOptions = {year: \"numeric\", month: \"long\", day: \"numeric\"};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid className=\"gridSettings noPrint\">\r\n\t\t\t\t<div className=\"wrapperForAbsolute\">\r\n\t\t\t\t\t<h2 className=\"secondTitle\">Soap Label List</h2>\r\n\t\t\t\t\t<div className=\"rightAbsoluteContainer\">\r\n\t\t\t\t\t\t<Button onClick={handleLabelModalOpen} endIcon={<AddCircleIcon />}>New Soap Label</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Grid container spacing={0} className=\"soapLabelRows\">\r\n\t\t\t\t\t{soapLabels && soapLabels.length ? soapLabels.map(soapLabel => {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\tconst soapDate = soapLabel.date ? new Date(soapLabel.date).toLocaleDateString(\"fr-FR\", dateOptions) : \"\";\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem xs={12}\r\n\t\t\t\t\t\t\t\tclassName=\"soapLabelRow wrapperForAbsolute\"\r\n\t\t\t\t\t\t\t\tkey={`soapLabelRow-${index}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span className=\"soapLabelRowName\">{soapLabel.name} </span>\r\n\t\t\t\t\t\t\t\t<div className=\"soapLabelButtons rightAbsoluteContainer\" >\r\n\t\t\t\t\t\t\t\t\t<span className=\"soapLabelRowDate\">{soapDate} </span>\r\n\t\t\t\t\t\t\t\t\t<QuantitySelector\r\n\t\t\t\t\t\t\t\t\t\tquantity={soapLabel.quantity}\r\n\t\t\t\t\t\t\t\t\t\thandleUpdateQty={(qty) => handleSoapLabelQtyChange(soapLabel, qty)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\" onClick={(e) => handleEdit(soapLabel)}><EditIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\" onClick={(e) => handleDelete(soapLabel)}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}) : (\r\n\t\t\t\t\t\t<div>List is empty. Create a Soap Label</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{soapLabelToDelete && (\r\n\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\topen={confirmDeleteOpen}\r\n\t\t\t\t\t\tonClose={handleConfirmDeleteClose}\r\n\t\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">\r\n\t\t\t\t\t\t\t{`Delete soap label \"${soapLabelToDelete.name}\" ?`}\r\n\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={handleConfirmDeleteDisagree}>No</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={handleConfirmDeleteClose} autoFocus>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t</Dialog>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t\t<LabelModal\r\n\t\t\t\tlabelModalOpen={labelModalOpen}\r\n\t\t\t\tonCloseLabelModal={handleLabelModalClose}\r\n\t\t\t\tsaveLabel={saveLabel}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './SettingsModal.css';\r\nimport * as React from 'react';\r\nimport Label from './labelLayouts/Label';\r\n\r\nimport { Box } from '@mui/material';\r\nimport { Select } from '@mui/material';\r\nimport { MenuItem } from '@mui/material';\r\nimport { TextField } from '@mui/material';\r\nimport { Radio } from '@mui/material';\r\nimport { RadioGroup } from '@mui/material';\r\nimport { FormControlLabel } from '@mui/material';\r\nimport { FormControl } from '@mui/material';\r\nimport { FormLabel } from '@mui/material';\r\nimport { InputLabel } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n// import BackspaceIcon from '@mui/icons-material/Backspace';\r\n// import SaveIcon from '@mui/icons-material/Save';\r\nimport { Slider } from '@mui/material';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { editSettings, useSettings } from '../store/actions';\r\n\r\nconst sliderStyle = {marginLeft: 12, marginRight: 12, width: \"auto\"};\r\nconst sliderPaddingProperties = {\r\n\tmin: 10, max: 100,\r\n\t// marks: [{value: 10, label: '10'}, {value: 100, label: '100'}]\r\n};\r\n\r\nexport default function SettingsModal(props) {\r\n\tconst dispatch = useDispatch();\r\n\tconst settings = useSettings();\r\n\r\n\tconst { onCloseSettingsModal, settingsModalOpen } = props;\r\n\r\n\tconst [brand, setBrand] = React.useState(settings.brand); \r\n\tconst [brandError/*, setBrandError*/] = React.useState(false);\r\n\tconst [font, setFont] = React.useState(settings.font);\r\n\tconst [fontError/*, setFontError*/] = React.useState(false);\r\n\tconst [pagePadding, setPagePadding] = React.useState(settings.pagePadding);\r\n\tconst [padding, setPadding] = React.useState(settings.padding);\r\n\r\n\tconst [layout, setLayout] = React.useState(settings.layout);\r\n\tconst [isLayoutColumn, setIsLayoutColumn] = React.useState(settings.layout === \"columns\");\r\n\tconst [layoutNbPerRow, setLayoutNbPerRow] = React.useState(settings.layoutNbPerRow);\r\n\tconst [layoutNbPerRowArray, setLayoutNbPerRowArray] = React.useState([...Array(settings.layoutNbPerRow).keys()]);\r\n\tconst [textAlignment, setTextAlignment] = React.useState(settings.textAlignment);\r\n\tconst [leftColumnWidth, setLeftColumnWidth] = React.useState(settings.leftColumnWidth);\r\n\tconst [seperatorWidth, setSeperatorWidth] = React.useState(settings.seperatorWidth);\r\n\t\r\n\tconst handleBrandChange = (event) => {\r\n\t\tsetBrand(event.target.value);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleFontChange = (event) => {\r\n\t\tsetFont(event.target.value);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleLayoutChange = (event) => {\r\n\t\tsetLayout(event.target.value);\r\n\t\tsetIsLayoutColumn(event.target.value === \"columns\");\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handlePagePaddingChange = (value, property) => {\r\n\t\tpagePadding[property] = value;\r\n\t\tconst newPagePadding = {...pagePadding};\r\n\t\tsetPagePadding(newPagePadding);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handlePaddingChange = (value, property) => {\r\n\t\tpadding[property] = value;\r\n\t\tconst newPadding = {...padding};\r\n\t\tsetPadding(newPadding);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleLeftColumnWidthChange = (event) => {\r\n\t\tsetLeftColumnWidth(event.target.value/100);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleSeperatorWidthChange = (event) => {\r\n\t\tsetSeperatorWidth(event.target.value);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleTextAlignmentChange = (event) => {\r\n\t\tsetTextAlignment(event.target.value);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleLayoutNbPerRowChange = (event) => {\r\n\t\tconst val = parseInt(event.target.value);\r\n\t\tconst valid = val>=2 && val<=6;\r\n\t\tif (valid) {\r\n\t\t\tsetLayoutNbPerRow(val);\r\n\t\t\tsetLayoutNbPerRowArray([...Array(val).keys()]);\r\n\t\t\tupdateSettings();\r\n\t\t}\r\n\t};\r\n\r\n\tconst demoSoap = {\r\n\t\tsoapName: \"Soap name\", \r\n\t\tingredients: \"Ingredients: water, coconut oil, palm oil, lye, avocado oil, canola oil, castor oil, olive oil, safflower oil, cocoa butter, fragrance(s), colorant(s).\",\r\n\t\tphrase: \"Some catchy phrase\",\r\n\t\tsoapDate: new Date(),\r\n\t};\r\n\r\n\tconst updateSettings = () => {\r\n\t\t// setSettings({...settings});\r\n\t\t// settings.brand = event.target.value;\r\n\t\t// settings.font = event.target.value;\r\n\t\t// settings.layout = event.target.value;\r\n\t\t// settings.padding = newPadding;\r\n\t\t// settings.leftColumnWidth = event.target.value/100;\r\n\t\t// settings.seperatorWidth = event.target.value;\r\n\t\t// settings.textAlignment = event.target.value;\r\n\t}\r\n\r\n\tconst handleClose = () => {\r\n\t\tconst settingsData = {\r\n\t\t\tbrand,\r\n\t\t\tfont,\r\n\t\t\tlayout,\r\n\t\t\tpadding,\r\n\t\t\tleftColumnWidth,\r\n\t\t\tseperatorWidth,\r\n\t\t\ttextAlignment,\r\n\t\t\tlayoutNbPerRow,\r\n\t\t};\r\n\t\tdispatch(editSettings(settingsData));\r\n\t\tonCloseSettingsModal();\r\n\t};\r\n\r\n\tconst sliderValueLabelDisplay = \"auto\";\r\n\r\n\tconst valueLabelFormatInPx = (x => `${x}px`);\r\n\tconst valueLabelFormatInPercentage = (x => `${x}%`);\r\n\r\n\tconst commonFields = (smallLabelPadding = true) => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t<FormLabel component=\"legend\">Page Top/Bottom Padding</FormLabel>\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\tid=\"pagePadding-top\"\r\n\t\t\t\t\t\t\tlabel=\"Page Top Padding\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={parseInt(pagePadding.pt)}\r\n\t\t\t\t\t\t\tonChange={(e) => handlePagePaddingChange(e.target.value, 'pt')}\r\n\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t<FormLabel component=\"legend\">Page Left/Right Padding</FormLabel>\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\tid=\"pagePadding-bottom\"\r\n\t\t\t\t\t\t\tlabel=\"Page Bottom Padding\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={parseInt(pagePadding.pl)}\r\n\t\t\t\t\t\t\tonChange={(e) => handlePagePaddingChange(e.target.value, 'pl')}\r\n\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tid=\"font\"\r\n\t\t\t\t\t\tlabel=\"Font\"\r\n\t\t\t\t\t\thelperText=\"Has to exist on your computer\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={font}\r\n\t\t\t\t\t\terror={fontError}\r\n\t\t\t\t\t\tonChange={handleFontChange}\r\n\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tid=\"soap-brand\"\r\n\t\t\t\t\t\tlabel=\"Soap Brand\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\tvalue={brand}\r\n\t\t\t\t\t\terror={brandError}\r\n\t\t\t\t\t\tonChange={handleBrandChange}\r\n\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={smallLabelPadding ? 3 : 6}>\r\n\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t<FormLabel component=\"legend\">Label Top Padding</FormLabel>\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\tid=\"padding-top\"\r\n\t\t\t\t\t\t\tlabel=\"Top padding\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={parseInt(padding.pt)}\r\n\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pt')}\r\n\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={smallLabelPadding ? 3 : 6}>\r\n\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t<FormLabel component=\"legend\">Label Bottom Padding</FormLabel>\r\n\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\tid=\"padding-bottom\"\r\n\t\t\t\t\t\t\tlabel=\"Bottom Padding\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={parseInt(padding.pb)}\r\n\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pb')}\r\n\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Grid>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dialog open={settingsModalOpen} scroll=\"body\" maxWidth={'1000px'}>\r\n\t\t\t<DialogContent dividers={false}>\r\n\t\t\t\t<Box className=\"modalBox\">\r\n\t\t\t\t\t<FormControl fullWidth={true} component=\"form\" className=\"form\">\r\n\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\taria-label=\"layour\"\r\n\t\t\t\t\t\t\tvalue={layout}\r\n\t\t\t\t\t\t\tonChange={handleLayoutChange}\r\n\t\t\t\t\t\t\tname=\"radio-buttons-group\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid container spacing={2} className=\"gridForm\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<h2 className=\"secondTitle title\">Settings</h2>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6} className=\"gridItemClose\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={handleClose}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={2} className=\"gridLayoutsContainer\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"columns\" control={<Radio />} label=\"Columns Layout\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{layoutNbPerRowArray.map(i => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`label-${i}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlayout=\"columns\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsoapLabel={demoSoap}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdemo={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t{isLayoutColumn && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{commonFields(true)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Label Left Padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Left Padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Label Right Padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Right Padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"nbPerRow-label\">Number of label per row (between 2 and 6)</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"nbPerRow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"nbPerRow-label\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Number of Label per Row (2 to 6)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={layoutNbPerRow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// error={layoutNbPerRowError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleLayoutNbPerRowChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={2}>2</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={3}>3</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={4}>4</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={5}>5</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={6}>6</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"textAlignment-label\">Text Alignment</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"textAlignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"textAlignment-label\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Text Alignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={textAlignment}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTextAlignmentChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"left\">Left</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"right\">Right</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemLayout\">\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={2} className=\"gridLayoutsContainer\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"wide\" control={<Radio />} label=\"Wide Row Layout\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\tlayout=\"wide\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsoapLabel={demoSoap}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdemo={true}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t{!isLayoutColumn && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{commonFields(false)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 1 Left Padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 1 Left Padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl1')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 1 Right Padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 1 Right Padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr1')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 2 Left Padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 2 Left Padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl2')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 2 Right Padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 2 Right Padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr2')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Left Column Size (in %)</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"textAlignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Left Column Size (in %)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(leftColumnWidth*100)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleLeftColumnWidthChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={25} max={75}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marks={[{value: 25, label: '25%'}, {value: 75, label: '75%'}]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPercentage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Seperator Width (in px)</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"seperatorWidth\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seperator Width (in px)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(seperatorWidth)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleSeperatorWidthChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay={sliderValueLabelDisplay}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0} max={10}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelFormat={valueLabelFormatInPx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","import './LabelsPrintView.css';\r\nimport * as React from 'react';\r\nimport Label from './labelLayouts/Label';\r\nimport SettingsModal from './SettingsModal';\r\nimport { IconButton } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { Tooltip } from '@mui/material';\r\n\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nimport { useSoapLabels, useSettings } from '../store/actions';\r\n\r\nexport default function LabelsPrintView(props) {\r\n\tconst [settingsModalOpen, setSettingsModalOpen] = React.useState(false);\r\n\r\n\tconst soapLabels = useSoapLabels();\r\n\tconst settings = useSettings();\r\n\tconst [layoutNbPerRow/*, setLayoutNbPerRow*/] = React.useState(settings.layoutNbPerRow);\r\n\tconst [layout/*, setLayoutNbPerRow*/] = React.useState(settings.layout);\r\n\r\n\t// Settings Modal\r\n\tconst handleClickOpenSettings = () => {\r\n\t\tsetSettingsModalOpen(true);\r\n\t};\r\n\tconst handleSettingsModalClose = () => {\r\n\t\tsetSettingsModalOpen(false);\r\n\t}\r\n\t\r\n\tconst renderLabels = (_soapLabels, _layoutNbPerRow, _layout) => {\r\n\t\tif(_layout === \"wide\") {\r\n\t\t\t_layoutNbPerRow = 1;\r\n\t\t}\r\n\r\n\t\tlet labels = [];\r\n\t\t_soapLabels.forEach(soapLabel => {\r\n\t\t\tfor (let i=0; i<soapLabel.quantity; i++){\r\n\t\t\t\tlabels.push(soapLabel);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst rows = labels.reduceRight((r,i,_,s) => (r.push(s.splice(0,_layoutNbPerRow)),r),[]);\r\n\r\n\t\treturn rows.map((row, r) => {\r\n\t\t\treturn (\r\n\t\t\t<div className=\"gridPrintRow\" key={`labelPreviewRow-${r}`}>\r\n\t\t\t\t{row.map((label, l) => {\r\n\t\t\t\t\tconst index = r*_layoutNbPerRow+l;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\tkey={`labelPreview-${index}`}\r\n\t\t\t\t\t\t\tsoapLabel={label}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\t// Print\r\n\tconst handleClickPrint = () => {\r\n\t\twindow.print();\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t}, [layoutNbPerRow, layout]);\r\n\r\n\tconst isColumnLayout = layout === \"columns\";\r\n\tconst pagePadding = {\r\n\t\tpt: Math.max(0, settings.pagePadding.pt-settings.padding.pt)+'px',\r\n\t\tpb: Math.max(0, settings.pagePadding.pt-settings.padding.pb)+'px',\r\n\t\tpl: Math.max(0, settings.pagePadding.pl-(isColumnLayout ? settings.padding.pl : settings.padding.pl1))+'px',\r\n\t\tpr: Math.max(0, settings.pagePadding.pl-(isColumnLayout ? settings.padding.pr : settings.padding.pr2))+'px',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<SettingsModal\r\n\t\t\t\tsettingsModalOpen={settingsModalOpen}\r\n\t\t\t\tonCloseSettingsModal={handleSettingsModalClose}\r\n\t\t\t/>\r\n\t\t\t<div className=\"wrapperForAbsolute noPrint\">\r\n\t\t\t\t<h2 className=\"secondTitle\">Soap Labels Print Preview\r\n\t\t\t\t\t<Tooltip title=\"Lines are for visual aids only. And margins could render differently in your print settings.\" placement=\"right\">\r\n\t\t\t\t\t\t<IconButton size=\"small\">\r\n\t\t\t\t\t\t\t<InfoIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</h2>\r\n\t\t\t\t<div className=\"rightAbsoluteContainer\">\r\n\t\t\t\t\t<IconButton onClick={handleClickPrint}><PrintIcon/></IconButton>\r\n\t\t\t\t\t<IconButton onClick={handleClickOpenSettings}><SettingsIcon/></IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Grid item className=\"gridPrintLabels\" {...pagePadding}>\r\n\t\t\t\t{soapLabels && soapLabels.length ? renderLabels(soapLabels, settings.layoutNbPerRow, settings.layout) : null}\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './LabelsList.css';\r\nimport * as React from 'react';\r\nimport { Box } from '@mui/material';\r\n\r\nimport LabelsList from './LabelsList';\r\nimport LabelsPrintView from './LabelsPrintView';\r\n\r\n// import { useDispatch } from 'react-redux';\r\nimport { useSoapLabels, useSettings } from '../store/actions';\r\n\r\nexport default function SoapLabels() {\r\n\r\n\tconst soapLabels = useSoapLabels();\r\n\tconst settings = useSettings();\r\n\r\n\treturn (\r\n\t\t<Box className=\"box\">\r\n\t\t\t{settings && soapLabels && (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<LabelsList />\r\n\t\t\t\t\t<LabelsPrintView />\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t</Box>\r\n\t);\r\n}\r\n","import './SettingsModal.css';\r\nimport * as React from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport { useSettings } from '../store/actions';\r\n\r\n\r\n\r\nexport default function PrivacyPolicyTermsConditions(props) {\r\n\tconst settings = useSettings();\r\n\r\n\tconst { onClosePrivacyTermsModal, privacyTermsModalOpen } = props;\r\n\r\n\tconst handleClose = () => {\r\n\t\tonClosePrivacyTermsModal();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog open={privacyTermsModalOpen} scroll=\"paper\" maxWidth={'1000px'}>\r\n\t\t\t<DialogContent dividers={false}>\r\n\t\t\t\t<Box className=\"modalBox\">\r\n\t\t\t\t\t<Grid container spacing={2} className=\"gridForm\">\r\n\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<h2 className=\"secondTitle title\">Privacy Policy</h2>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={6} className=\"gridItemClose\">\r\n\t\t\t\t\t\t\t<IconButton onClick={handleClose}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<p>Joanie built the SoapLabels app as a Free app. This SERVICE is provided by Joanie at no cost and is intended for use as is.</p>\r\n\t\t\t\t\t\t\t<p>This page is used to inform visitors regarding my policies with the collection, use, and disclosure of Personal Information if anyone decided to use my Service.</p>\r\n\t\t\t\t\t\t\t<p>If you choose to use my Service, then you agree to the collection and use of information in relation to this policy. The Personal Information that I collect is used for providing and improving the Service. I will not use or share your information with anyone except as described in this Privacy Policy.</p>\r\n\t\t\t\t\t\t\t<p>The terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, which are accessible at Soap Labels unless otherwise defined in this Privacy Policy.</p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3>Information Collection and Use</h3>\r\n\t\t\t\t\t\t\t<p>For a better experience, while using our Service, I may require you to provide us with certain personally identifiable information, including but not limited to nothing. The information that I request will be retained on your device and is not collected by me in any way.</p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{/*<h3>Log Data</h3>\r\n\t\t\t\t\t\t\t<p>I want to inform you that whenever you use my Service, in a case of an error in the app I collect data and information (through third-party products) on your phone called Log Data. This Log Data may include information such as your device Internet Protocol (&ldquo;IP&rdquo;) address, device name, operating system version, the configuration of the app when utilizing my Service, the time and date of your use of the Service, and other statistics.</p>\r\n\t\t\t\t\t\t\t*/}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3>Cookies</h3>\r\n\t\t\t\t\t\t\t<p>Cookies are files with a small amount of data that are commonly used as anonymous unique identifiers. These are sent to your browser from the websites that you visit and are stored on your device&#39;s internal memory.</p>\r\n\t\t\t\t\t\t\t<p>This Service does not use these &ldquo;cookies&rdquo; explicitly. However, the app may use third-party code and libraries that use &ldquo;cookies&rdquo; to collect information and improve their services. You have the option to either accept or refuse these cookies and know when a cookie is being sent to your device. If you choose to refuse our cookies, you may not be able to use some portions of this Service.</p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{/*<h3>Service Providers</h3>\r\n\t\t\t\t\t\t\t<p>I may employ third-party companies and individuals due to the following reasons:</p>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>To facilitate our Service;</li>\r\n\t\t\t\t\t\t\t<li>To provide the Service on our behalf;</li>\r\n\t\t\t\t\t\t\t<li>To perform Service-related services; or</li>\r\n\t\t\t\t\t\t\t<li>To assist us in analyzing how our Service is used.</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t<p>I want to inform users of this Service that these third parties have access to their Personal Information. The reason is to perform the tasks assigned to them on our behalf. However, they are obligated not to disclose or use the information for any other purpose.</p>\r\n\t\t\t\t\t\t\t*/}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3>Security</h3>\r\n\t\t\t\t\t\t\t<p>I value your trust in providing us your Personal Information, thus we are striving to use commercially acceptable means of protecting it. But remember that no method of transmission over the internet, or method of electronic storage is 100% secure and reliable, and I cannot guarantee its absolute security.</p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{/*<h3>Links to Other Sites</h3>\r\n\t\t\t\t\t\t\t<p>This Service may contain links to other sites. If you click on a third-party link, you will be directed to that site. Note that these external sites are not operated by me. Therefore, I strongly advise you to review the Privacy Policy of these websites. I have no control over and assume no responsibility for the content, privacy policies, or practices of any third-party sites or services.</p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3>Children&rsquo;s Privacy</h3>\r\n\t\t\t\t\t\t\t<p>I do not knowingly collect personally identifiable information from children. I encourage all children to never submit any personally identifiable information through the Application and/or Services. I encourage parents and legal guardians to monitor their children&#39;s Internet usage and to help enforce this Policy by instructing their children never to provide personally identifiable information through the Application and/or Services without their permission. If you have reason to believe that a child has provided personally identifiable information to us through the Application and/or Services, please contact us. You must also be at least 16 years of age to consent to the processing of your personally identifiable information in your country (in some countries we may allow your parent or guardian to do so on your behalf).</p>\r\n\t\t\t\t\t\t\t*/}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3>Changes to This Privacy Policy</h3>\r\n\t\t\t\t\t\t\t<p>I may update our Privacy Policy from time to time. Thus, you are advised to review this page periodically for any changes. I will notify you of any changes by posting the new Privacy Policy on this page.</p>\r\n\t\t\t\t\t\t\t<p>This policy is effective as of 2021-12-07</p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3>Contact Us</h3>\r\n\t\t\t\t\t\t\t<p>If you have any questions or suggestions about my Privacy Policy, do not hesitate to contact me via Github: <a href=\"https://github.com/joaniegithub/SoapLabels\">https://github.com/joaniegithub/SoapLabels.</a></p>\r\n\r\n\t\t\t\t\t\t\t<h3>Terms</h3>\r\n\t\t\t\t\t\t\t<p>The content of this website is for general information purposes only. The content and the features are provided by SoapLabels. SoapLabels will, in no event, be liable for any loss whatsoever arising from the use of this website.</p>\r\n\r\n\t\t\t\t\t\t\t<h3>Copyright</h3>\r\n\t\t\t\t\t\t\t<p>This website and its content is copyright of SoapLabels - All Rights Reserved.</p>\r\n\t\t\t\t\t\t\t<p>Any redistribution or reproduction of part or all of the contents in any form is prohibited except for the generated view of the Soap Labels destined to be printed.</p>\r\n\t\t\t\t\t\t\t<p>You may not, except with our express written permission, distribute the content. Nor may you transmit it or store it in any other website or other form of electronic retrieval system.</p>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","import './Main.css';\r\nimport * as React from 'react';\r\nimport { Container } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport Cookies from 'universal-cookie';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\n\r\nimport SoapLabels from './SoapLabels';\r\nimport PrivacyPolicyTermsConditions from './PrivacyPolicyTermsConditions';\r\n\r\nconst images = [\r\n\t'arab_tile',\r\n\t'bush',\r\n\t'circuit',\r\n\t'full-bloom',\r\n\t'gplaypattern',\r\n\t'greek-vase',\r\n\t'herringbone',\r\n\t'hotel-wallpaper',\r\n\t'more-leaves',\r\n\t'moroccan-flower',\r\n\t'moroccan-flower-dark',\r\n\t'morocco-blue',\r\n\t'new_year_background',\r\n\t'regal',\r\n\t'ripples',\r\n\t'swirls',\r\n\t'tree_bark',\r\n\t'trees',\r\n];\r\n\r\nexport default function Main() {\r\n\r\n\tconst [bgTileIndex, setBgTileIndex] = React.useState(0);\r\n\tconst [mainClassName, setMainClassName] = React.useState(\"\");\r\n\r\n\t// Background\r\n\tconst handlePreviousBg = () => {\r\n\t\tlet nextBgTileIndex = bgTileIndex - 1;\r\n\t\tif (nextBgTileIndex < 0){\r\n\t\t\tnextBgTileIndex = images.length - 1;\r\n\t\t}\r\n\t\tupdateBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\tconst handleNextBg = () => {\r\n\t\tlet nextBgTileIndex = bgTileIndex + 1;\r\n\t\tif (nextBgTileIndex >= images.length){\r\n\t\t\tnextBgTileIndex = 0;\r\n\t\t}\r\n\t\tupdateBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\tconst updateBgTileIndex = (nextBgTileIndex) => {\r\n\t\tconst cookies = new Cookies();\r\n\t\tcookies.set('SoapBgTileIndex', nextBgTileIndex, { path: '/' });\r\n\t\tsetBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst cookies = new Cookies();\r\n\t\tconst _bgTileIndex = parseInt(cookies.get('SoapBgTileIndex')) || 0;\r\n\t\tsetBgTileIndex(_bgTileIndex);\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetMainClassName(`main main_${images[bgTileIndex]}`);\r\n\t}, [bgTileIndex]);\r\n\tconst [privacyTermsModalOpen, setPrivacyTermsModalOpen] = React.useState(false);\r\n\t// Settings Modal\r\n\tconst handlePrivacyTermsModalOpen = () => {\r\n\t\tsetPrivacyTermsModalOpen(true);\r\n\t};\r\n\tconst handlePrivacyTermsModalClose = () => {\r\n\t\tsetPrivacyTermsModalOpen(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={mainClassName}>\r\n\t\t\t<Container className=\"header noPrint wrapperForAbsolute\">\r\n\t\t\t\t<h1 className=\"mainTitle\">Soap Labels</h1>\r\n\t\t\t\t<div className=\"bgSwitcherContainer rightAbsoluteContainer\">\r\n\t\t\t\t\t<IconButton onClick={handlePreviousBg}><ArrowBackIosNewIcon/></IconButton>\r\n\t\t\t\t\t<IconButton onClick={handleNextBg}><ArrowForwardIosIcon/></IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t\t<Container className=\"container\">\r\n\t\t\t\t<SoapLabels/>\r\n\t\t\t</Container>\r\n\t\t\t<Container className=\"footer noPrint\">\r\n\t\t\t\t<div className=\"footerLinks\">\r\n\t\t\t\t\t<Button onClick={handlePrivacyTermsModalOpen}>Privacy Policy and Terms</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"footerCopyright\">Soap Labels @2021 Joanie Lessnick</p>\r\n\t\t\t</Container>\r\n\t\t\t<PrivacyPolicyTermsConditions\r\n\t\t\t\tprivacyTermsModalOpen={privacyTermsModalOpen}\r\n\t\t\t\tonClosePrivacyTermsModal={handlePrivacyTermsModalClose}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import * as constants from './constants';\r\n\r\nexport const defaultSettings = {\r\n\t\"font\": \"Shadows Into Light\",\r\n\t\"brand\": \"\",\r\n\t\"layout\": \"columns\",\r\n\t\"layoutNbPerRow\": 3,\r\n\t\"textAlignment\": \"left\",\r\n\t\"leftColumnWidth\": 0.65,\r\n\t\"seperatorWidth\": 5,\r\n\t\"pagePadding\": {'pt': 36, 'pl': 36},\r\n\t\"padding\": {'pt': 20, 'pb': 20, 'pl': 20, 'pr': 20, 'pl1': 50, 'pr1': 50, 'pl2': 10, 'pr2': 20},\r\n\t\"translateFrench\": false,\r\n};\r\n\r\nconst defaultState = {\r\n\tname: 'Soap Labels',\r\n\tsoapLabels: [],\r\n\tsettings: defaultSettings,\r\n};\r\n\r\nconst reducer = (state = defaultState, {type, ...payload}) => {\t//action déconstruite = {type, name}\r\n\tconsole.log(state, type, payload);\r\n\r\n\tswitch (type) {\r\n\r\n\t\tcase constants.SET_CURRENT_SOAP_LABEL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentSoapLabel: payload.currentSoapLabel,\r\n\t\t\t};\r\n\r\n\t\t\r\n\t\tcase constants.ADD_SOAP_LABEL:\r\n\t\t\treturn { \r\n\t\t\t\t...state, \r\n\t\t\t\tsoapLabels: [...state.soapLabels, payload.soapLabel],\r\n\t\t\t}\r\n\t\t\r\n\r\n\t\tcase constants.EDIT_CURRENT_SOAP_LABEL:\r\n\t\t\tconst newState = { \r\n\t\t\t\t...state, \r\n\t\t\t\tsoapLabels: state.soapLabels.map(\r\n\t\t\t\t\t(soapLabel, i) => { \r\n\t\t\t\t\t\treturn soapLabel.uid === payload.soapLabelToEdit.uid ? {...soapLabel, ...payload.soapLabelData}\r\n\t\t\t\t\t\t\t\t\t\t\t: soapLabel; }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\treturn newState;\r\n\t\t\r\n\r\n\t\tcase constants.DELETE_CURRENT_SOAP_LABEL:\r\n\t\t\treturn { \r\n\t\t\t\t...state, \r\n\t\t\t\tsoapLabels: state.soapLabels.filter(\r\n\t\t\t\t\t(soapLabel, i) => soapLabel.uid === payload.soapLabelToDelete.uid ? false\r\n\t\t\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\r\n\t\tcase constants.EDIT_SETTINGS:\r\n\t\t\treturn { \r\n\t\t\t\t...state, \r\n\t\t\t\tsettings: {...state.settings, ...payload.settings}\r\n\t\t\t}\r\n\r\n\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}; // {reducer, startState, middleware}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer, { defaultSettings } from './reducer';\r\n\r\n// convert object to string and store in localStorage\r\nfunction saveToLocalStorage(state) {\r\n\ttry {\r\n\t\tconst serialisedState = JSON.stringify(state);\r\n\t\tlocalStorage.setItem(\"SoapLabelsState\", serialisedState);\r\n\t} catch (e) {\r\n\t\tconsole.warn(e);\r\n\t}\r\n}\r\n\r\n// load string from localStarage and convert into an Object\r\n// invalid output must be undefined\r\nfunction loadFromLocalStorage() {\r\n\ttry {\r\n\t\tconst serialisedState = localStorage.getItem(\"SoapLabelsState\");\r\n\t\tif (serialisedState === null) return undefined;\r\n\t\t\tconst parsedState = JSON.parse(serialisedState);\r\n\t\t\tconst mergedSettings = {...defaultSettings, ...parsedState.settings}\r\n\t\t\tconst newState = {...parsedState, 'settings': mergedSettings};\r\n\t\t\tconsole.log(newState);\r\n\t\t\treturn newState;\r\n\t} catch (e) {\r\n\t\tconsole.warn(e);\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n\r\n// create our store from our rootReducers and use loadFromLocalStorage\r\n// to overwrite any values that we already have saved\r\nconst store = createStore(reducer, loadFromLocalStorage());\r\n\r\n// listen for store changes and use saveToLocalStorage to\r\n// save them to localStorage\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;\r\n","import './App.css';\r\nimport * as React from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Main from './LabelMaker/Main';\r\nimport store from './store/'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst theme = createTheme({\r\n\ttypography: {\r\n\t\tfontFamily: [\r\n\t\t\t'Lato',\r\n\t\t\t'Arial',\r\n\t\t\t'Shadows Into Light',\r\n\t\t\t'-apple-system',\r\n\t\t\t'BlinkMacSystemFont',\r\n\t\t\t'\"Segoe UI\"',\r\n\t\t\t'Roboto',\r\n\t\t\t'\"Helvetica Neue\"',\r\n\t\t\t'Arial',\r\n\t\t\t'sans-serif',\r\n\t\t\t'\"Apple Color Emoji\"',\r\n\t\t\t'\"Segoe UI Emoji\"',\r\n\t\t\t'\"Segoe UI Symbol\"',\r\n\t\t].join(','),\r\n\t\tbutton: {\r\n\t\t  fontSize: '1rem',\r\n\t\t  fontWeight: '600',\r\n\t\t  textTransform: 'none',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Main />\r\n    \t</ThemeProvider>\r\n\t</Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateAdapter from '@mui/lab/AdapterDateFns';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\t<LocalizationProvider dateAdapter={DateAdapter}>\r\n\t\t<App />\r\n  \t</LocalizationProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}