{"version":3,"sources":["LabelMaker/labelLayouts/Label.js","LabelMaker/LabelModal.js","LabelMaker/components/QuantitySelector.js","LabelMaker/LabelsList.js","LabelMaker/SettingsModal.js","LabelMaker/LabelsPrintView.js","LabelMaker/SoapLabels.js","LabelMaker/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Label","props","settings","padding","pt","pb","pl","pr","pl1","pr1","pl2","pr2","layout","leftColumnWidth","layoutNbPerRow","textAlignment","demo","console","log","styleFont","fontFamily","font","styleFontAlign","textAlign","styleAlign","styleBackgroundColor","backgroundColor","Grid","item","className","xs","paddingTop","paddingBottom","paddingLeft","paddingRight","style","soapName","ingredients","brand","phrase","translations","LabelModal","editLabel","React","setSoapName","soapNameError","setSoapNameError","soapCode","setSoapCode","soapPhrase","setSoapPhrase","soapCodeError","setSoapCodeError","soapFragrances","setSoapFragrances","soapColorants","setSoapColorants","ingredientsCodeOutput","setIngredientsCodeOutput","soapCodeData","useSoapIngredients","setUseSoapIngredients","soapBrand","allIngredients","rxMatchWater","match","rxMatchLye","matchAll","forEach","oilElem","sortableRecipeData","soapItem","push","sort","a","b","ingredientsInOrder","map","ingredient","join","toLowerCase","generateIngredients","name","Dialog","open","scroll","maxWidth","DialogContent","dividers","Box","FormControl","fullWidth","component","container","spacing","IconButton","onClick","onClose","TextField","required","id","label","size","helperText","value","error","onChange","event","target","width","multiline","rows","disabled","Button","endIcon","saveLabel","QuantitySelector","quantity","setQuantity","updateQuantity","newQty","handleUpdateQty","LabelsList","confirmDeleteOpen","setConfirmDeleteOpen","labelModalOpen","setLabelModalOpen","undefined","setEditLabel","handleConfirmDeleteClose","index","soapLabels","indexOf","splice","saveSoapLabels","length","soapLabel","qty","parseInt","handleSoapLabelQtyChange","e","handleEdit","handleDelete","DialogTitle","DialogActions","variant","autoFocus","sliderStyle","marginLeft","marginRight","sliderPaddingProperties","min","max","marks","SettingsModal","setSoapBrand","soapBrandError","setFont","fontError","setPadding","setLayout","isLayoutColumn","setIsLayoutColumn","setLayoutNbPerRow","setLayoutNbPerRowError","Array","keys","layoutNbPerRowArray","setLayoutNbPerRowArray","setTextAlignment","setLeftColumnWidth","handlePaddingChange","property","newPadding","RadioGroup","saveSettings","FormLabel","Slider","valueLabelDisplay","FormControlLabel","control","Radio","i","InputLabel","Select","labelId","val","valid","MenuItem","LabelsPrintView","settingsModalOpen","setSettingsModalOpen","Tooltip","title","placement","window","print","_layoutNbPerRow","_layout","labels","reduceRight","r","_","s","row","l","renderedLabels","defaultSettings","SoapLabels","setSoapLabels","setSettings","cookies","Cookies","get","_soapLabels","set","JSON","stringify","path","_settings","images","Main","bgTileIndex","setBgTileIndex","mainClassName","setMainClassName","updateBgTileIndex","nextBgTileIndex","_bgTileIndex","Container","theme","createTheme","typography","button","fontSize","fontWeight","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab0de919.chunk.js","sourcesContent":["import './Label.css';\r\nimport './LabelWideRow.css';\r\nimport * as React from 'react';\r\nimport { Grid } from '@mui/material';\r\n\r\nexport default function Label(props) {\r\n\t\r\n\tif (!props || !props.settings || !props.settings.padding) {\r\n\t\treturn null;\r\n\t}\r\n\tconst {pt, pb, pl, pr, pl1, pr1, pl2, pr2} = props.settings.padding;\r\n\tconst layout = props.layout || \"columns\";\r\n\tconst leftColumnWidth = props.settings.leftColumnWidth;\r\n\tconst layoutNbPerRow = props.settings.layoutNbPerRow;\r\n\tconst textAlignment = props.settings.textAlignment;\r\n\tconst demo = !!props.demo;\r\n\r\n\tconsole.log(props.settings.textAlignment);\r\n\r\n\tconst styleFont = {fontFamily: props?.settings?.font};\r\n\tconst styleFontAlign = {fontFamily: props?.settings?.font, textAlign: textAlignment};\r\n\tconst styleAlign = { textAlign: textAlignment};\r\n\tconst styleBackgroundColor ={backgroundColor:  demo ? '#f8f8f8' : 'transparent'};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{layout === \"columns\" ? (\r\n\t\t\t\t<Grid item \r\n\t\t\t\t\tclassName=\"labelGridItem\" \r\n\t\t\t\t\txs={12/layoutNbPerRow} \r\n\t\t\t\t\tpaddingTop={pt+'px'}\r\n\t\t\t\t\tpaddingBottom={pb+'px'}\r\n\t\t\t\t\tpaddingLeft={pl+'px'}\r\n\t\t\t\t\tpaddingRight={pr+'px'}\r\n\t\t\t\t\tstyle={styleBackgroundColor}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p style={styleFontAlign} className=\"labelSoapName\">{props.soapName}</p>\r\n\t\t\t\t\t<p style={styleAlign} className=\"labelSoapIngredients\">{props.ingredients}</p>\r\n\t\t\t\t\t{props.brand && (<p style={styleAlign} className=\"labelSoapBrand\">{props.brand}</p>)}\r\n\t\t\t\t\t{props.phrase && (<p style={styleAlign} className=\"labelSoapPhrase\">{props.phrase}</p>)}\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t<Grid xs={12} item\r\n\t\t\t\t\tclassName=\"labelWideRowGridItem\"\r\n\t\t\t\t\tpaddingTop={pt+'px'}\r\n\t\t\t\t\tpaddingBottom={pb+'px'}\r\n\t\t\t\t\tstyle={styleBackgroundColor}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item \r\n\t\t\t\t\t\txs={12*leftColumnWidth} \r\n\t\t\t\t\t\tpaddingLeft={pl1+'px'}\r\n\t\t\t\t\t\tpaddingRight={pr1+'px'}\r\n\t\t\t\t\t\tclassName=\"labelWideRowGridItemLeft\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p className=\"labelWideRowSoapIngredients\">{props.ingredients}</p>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item \r\n\t\t\t\t\t\txs={12*(1-leftColumnWidth)} \r\n\t\t\t\t\t\tpaddingLeft={pl2+'px'}\r\n\t\t\t\t\t\tpaddingRight={pr2+'px'}\r\n\t\t\t\t\t\tclassName=\"labelWideRowGridItemRight\" \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{props.brand && (<p className=\"labelWideRowSoapBrand\">{props.brand}</p>)}\r\n\t\t\t\t\t\t<p style={styleFont} className=\"labelWideRowSoapName\">{props.soapName}</p>\r\n\t\t\t\t\t\t{props.phrase && (<p className=\"labelWideRowSoapPhrase\">{props.phrase}</p>)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './LabelModal.css';\r\nimport * as React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport { TextField } from '@mui/material';\r\nimport { FormControl } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport BackspaceIcon from '@mui/icons-material/Backspace';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport Label from './labelLayouts/Label';\r\n\r\nconst translations = {\r\n\t'Almond Oil, sweet': 'Huile d\\'amande douce',\r\n\t'Aloe Butter': 'Beurre d\\'aloès',\r\n\t'Argan Oil': 'Huile d\\'argane',\r\n\t'Avocado Oil': 'Huile d\\'avocat',\r\n\t'Canola Oil': 'Huile de canola',\r\n\t'Castor Oil': 'Huile de ricin',\r\n\t'Cocoa Butter': 'Beurre de cacao',\r\n\t'Coconut Oil, 76 deg': 'Huile de coconut',\r\n\t'Coconut Oil, 92 deg': 'Huile de coconut',\r\n\t'Coconut Oil, fractionated': 'Huile de coconut',\r\n\t'Corn Oil': 'Huile de maïs',\r\n\t'Grapeseed Oil': 'Huile de pépins de raisin',\r\n\t'Kokum Butter': 'Beurre de kokum',\r\n\t'Jojoba Oil (a Liquid Wax Ester)': 'Huile de jojoba',\r\n\t'Mango Seed Butter': 'Beurre de mangue',\r\n\t'Olive Oil': 'Huile d\\'olive',\r\n\t'Palm Oil': 'Huile de palme',\r\n\t'Rice Bran Oil, refined': 'Huile de riz',\r\n\t'Safflower Oil': 'Huile de carthame',\r\n\t'Sesame Oil': 'Huile de sésame',\r\n\t'Shea Butter': 'Beurre de karité',\r\n\t'Sunflower Oil': 'Huile de tournesol',\r\n}\r\n\r\nexport default function LabelModal(props) {\r\n\tconst { editLabel } = props;\r\n\tconst [settings] = React.useState(props.settings);\r\n\tconst [soapName, setSoapName] = React.useState('');\r\n\tconst [soapNameError, setSoapNameError] = React.useState(false);\r\n\tconst [soapCode, setSoapCode] = React.useState('');\r\n\tconst [soapPhrase, setSoapPhrase] = React.useState('');\r\n\tconst [soapCodeError, setSoapCodeError] = React.useState(false);\r\n\tconst [soapFragrances, setSoapFragrances] = React.useState('');\r\n\tconst [soapColorants, setSoapColorants] = React.useState('');\r\n\t\r\n\tconst [ingredientsCodeOutput, setIngredientsCodeOutput] = React.useState('');\r\n\tconst [soapCodeData/*, setSoapCodeData*/] = React.useState({});\r\n\tconst [useSoapIngredients, setUseSoapIngredients] = React.useState(false);\r\n\tconst [soapBrand/*, setSoapBrand*/] = React.useState(\"Joanie Soaperie\");\r\n\t\r\n\tconst handleSoapNameChange = (event) => {\r\n\t\tsetSoapName(event.target.value);\r\n\t};\r\n\tconst handleSoapPhraseChange = (event) => {\r\n\t\tsetSoapPhrase(event.target.value);\r\n\t};\r\n\tconst handleSoapFragrancesChange = (event) => {\r\n\t\tsetSoapFragrances(event.target.value);\r\n\t};\r\n\tconst handleSoapColorantsChange = (event) => {\r\n\t\tsetSoapColorants(event.target.value);\r\n\t};\r\n\tconst handleRecipeCodeChange = (event) => {\r\n\t\tsetSoapCode(event.target.value);\r\n\t};\r\n\t\r\n\tconst handleClickSave = () => {\r\n\t\tsetSoapNameError(!soapName);\r\n\t\tsetSoapCodeError(!soapCode);\r\n\t\tif(soapName && soapCode && ingredientsCodeOutput) {\r\n\t\t\tprops.saveLabel(soapName, ingredientsCodeOutput, soapBrand, soapPhrase);\r\n\t\t\tprops.onClose();\r\n\t\t}\r\n\t};\r\n\r\n\tconst generateIngredients = () => {\r\n\t\tlet allIngredients = soapCode;\r\n\t\tif (!useSoapIngredients) {\r\n\t\t\tconst rxMatchWater = soapCode.match(/^Water [0-9.]+ [0-9.]+ ([0-9.]+$)/m);\r\n\t\t\tif (rxMatchWater?.[1]) {\r\n\t\t\t\tsoapCodeData[\"Eau\"] = rxMatchWater[1];\r\n\t\t\t}\r\n\r\n\t\t\tconst rxMatchLye = soapCode.match(/^Lye - NaOH [0-9.]+ [0-9.]+ ([0-9.]+$)/m);\r\n\t\t\tif (rxMatchLye?.[1]) {\r\n\t\t\t\tsoapCodeData[\"Hydroxyde de sodium\"] = rxMatchLye[1];\r\n\t\t\t}\r\n\r\n\t\t\t// 1 Coconut Oil, 76 deg 30.00 0.595 9.52 270.00\r\n\t\t\tconst arrOils = [...soapCode.matchAll(/^[0-9.]+ ([\\s\\w,]+) [0-9.]+\\.[0-9.]+ [0-9.]+ [0-9.]+ ([0-9.]+)$/gm)];\r\n\t\t\t// console.log(arrOils);\r\n\t\t\tarrOils.forEach((oilElem) => {\r\n\t\t\t\tsoapCodeData[translations[oilElem[1]]] = oilElem[2];\r\n\t\t\t});\r\n\r\n\t\t\tconst sortableRecipeData = [];\r\n\t\t\tfor (let soapItem in soapCodeData) {\r\n\t\t\t\tsortableRecipeData.push([soapItem, soapCodeData[soapItem]]);\r\n\t\t\t}\r\n\t\t\tsortableRecipeData.sort(function(a, b) {\r\n\t\t\t\treturn b[1] - a[1];\r\n\t\t\t});\r\n\r\n\t\t\tconst ingredientsInOrder = sortableRecipeData.map((ingredient) => ingredient[0]).join(\", \").toLowerCase();\r\n\t\t\tallIngredients = `Ingrédients: ${ingredientsInOrder}, ${soapFragrances || \"fragrance(s)\"}, ${soapColorants || \"colorant(s)\"}.`\r\n\t\t}\r\n\t\tsetIngredientsCodeOutput(allIngredients);\r\n\t};\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tgenerateIngredients();\r\n\t}, [soapCode, soapColorants, soapFragrances]);\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tif(editLabel && editLabel.name && editLabel.ingredients) {\r\n\t\t\tsetSoapName(editLabel.name);\r\n\t\t\tsetSoapPhrase(editLabel.phrase);\r\n\t\t\tsetSoapCode(editLabel.ingredients);\r\n\t\t\tsetUseSoapIngredients(true);\r\n\t\t} else {\r\n\t\t\tsetSoapName(\"\");\r\n\t\t\tsetSoapPhrase(\"\");\r\n\t\t\tsetSoapCode(\"\");\r\n\t\t\tsetUseSoapIngredients(false);\r\n\t\t}\r\n\t}, [editLabel]);\r\n\r\n\tconst handleClose = () => {\r\n\t\tprops.onClose();\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<Dialog open={props.open} scroll=\"body\" maxWidth={1000}>\r\n\t\t\t<DialogContent dividers={false}>\r\n\t\t\t\t<Box className=\"modalBox\">\r\n\t\t\t\t\t<FormControl fullWidth={true} component=\"form\" className=\"form\">\r\n\t\t\t\t\t\t<Grid container spacing={2} className=\"gridForm\">\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<h2 className=\"secondTitle title\">New Soap Label</h2>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} className=\"gridItemClose\">\r\n\t\t\t\t\t\t\t\t<IconButton onClick={handleClose}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tid=\"soap-name\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Name\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapName}\r\n\t\t\t\t\t\t\t\t\terror={soapNameError}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapNameChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"phrase\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Phrase\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapPhrase}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapPhraseChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tid=\"soap-code\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Recipe Code\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"tfRecipeCode\"\r\n\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\trows={8}\r\n\t\t\t\t\t\t\t\t\tvalue={soapCode}\r\n\t\t\t\t\t\t\t\t\terror={soapCodeError}\r\n\t\t\t\t\t\t\t\t\tonChange={handleRecipeCodeChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"soap-fragrances\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Fragrance(s)\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapFragrances}\r\n\t\t\t\t\t\t\t\t\tdisabled={useSoapIngredients}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapFragrancesChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"soap-colorants\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Colorant(s)\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapColorants}\r\n\t\t\t\t\t\t\t\t\tdisabled={useSoapIngredients}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapColorantsChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemButtons\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tendIcon={<BackspaceIcon />}>Clear</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tendIcon={<SaveIcon />} \r\n\t\t\t\t\t\t\t\t\tonClick={handleClickSave}>Save</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h2 className=\"secondTitle\">Label Preview</h2>\r\n\t\t\t\t\t<div className=\"gridResult\">\r\n\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\tsettings={settings}\r\n\t\t\t\t\t\t\tlayout={settings.layout}\r\n\t\t\t\t\t\t\tsoapName={soapName}\r\n\t\t\t\t\t\t\tingredients={ingredientsCodeOutput}\r\n\t\t\t\t\t\t\tbrand={soapBrand}\r\n\t\t\t\t\t\t\tphrase={soapPhrase}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","\r\nimport './QuantitySelector.css';\r\nimport * as React from 'react';\r\nimport { IconButton } from '@mui/material';\r\n\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\n// const styles = {\r\n// \ticonButton: {\r\n// \t\tpadding: '2px',\r\n// \t\t'svg': {\r\n// \t\t\twidth: '20px',\r\n// \t\t\theight: '20px',\r\n// \t\t},\r\n// \t}\r\n// }\r\n\r\nexport default function QuantitySelector(props) {\r\n\tconst [quantity, setQuantity] = React.useState(props.quantity);\r\n\r\n\tconst handleRemove = () => {\r\n\t\tupdateQuantity(quantity-1);\r\n\t};\r\n\tconst handleAdd = () => {\r\n\t\tupdateQuantity(quantity+1);\r\n\t};\r\n\tconst updateQuantity = (newQty) => {\r\n\t\tsetQuantity(newQty);\r\n\t\tprops.handleUpdateQty(newQty);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"wrapperQuantity\">\r\n\t\t\t<IconButton size=\"small\" className=\"iconButton\" onClick={handleRemove}><RemoveIcon/></IconButton>\r\n\t\t\t<span className=\"labelQuantity\">{quantity}</span>\r\n\t\t\t<IconButton size=\"small\" className=\"iconButton\" onClick={handleAdd}><AddIcon/></IconButton>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './SoapLabels.css';\r\nimport * as React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport LabelModal from './LabelModal';\r\nimport QuantitySelector from './components/QuantitySelector';\r\n\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\n\r\n\r\nexport default function LabelsList(props) {\r\n\tconst [settings] = React.useState(props.settings);\r\n\tconst [confirmDeleteOpen, setConfirmDeleteOpen] = React.useState(false);\r\n\tconst [labelModalOpen, setLabelModalOpen] = React.useState(false);\r\n\tconst [editLabel, setEditLabel] = React.useState(undefined);\r\n\r\n\t// Label Modal\r\n\tconst handleLabelModalOpen = () => {\r\n\t\tsetLabelModalOpen(true);\r\n\t\tsetEditLabel(undefined);\r\n\t}\r\n\tconst handleLabelModalClose = () => {\r\n\t\tsetLabelModalOpen(false);\r\n\t\tsetEditLabel(undefined);\r\n\t}\r\n\t\r\n\t// (New / Edit)\r\n\tconst saveLabel = (name, ingredients, brand, phrase) => {\r\n\t\tconsole.log(editLabel);\r\n\t\tif (editLabel) {\r\n\t\t\teditLabel.name = name;\r\n\t\t\teditLabel.ingredients = ingredients;\r\n\t\t\teditLabel.brand = brand;\r\n\t\t\teditLabel.phrase = phrase;\r\n\t\t\tconsole.log(editLabel);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"push\");\r\n\t\t\tprops.soapLabels.push({name, ingredients, brand, quantity: 1});\r\n\t\t}\r\n\t\tprops.saveSoapLabels(props.soapLabels);\r\n\t\tsetEditLabel(undefined);\r\n\t}\r\n\t\r\n\t// Change Qty\r\n\tconst handleSoapLabelQtyChange = (soapLabel, qty) => {\r\n\t\tsoapLabel.quantity = parseInt(qty);\r\n\t\tprops.saveSoapLabels(props.soapLabels);\r\n\t};\r\n\t// Edit\r\n\tconst handleEdit = (soapLabel) => {\r\n\t\tsetEditLabel(soapLabel);\r\n\t\tsetLabelModalOpen(true);\r\n\t};\r\n\t// Delete\r\n\tconst handleDelete = (soapLabel) => {\r\n\t\tsetEditLabel(soapLabel);\r\n\t\tsetConfirmDeleteOpen(true);\r\n\t};\r\n\t// Confirm Delete Dialog\r\n\tconst handleConfirmDeleteClose = () => {\r\n\t\tsetConfirmDeleteOpen(false);\r\n\t\tconst index = props.soapLabels.indexOf(editLabel);\r\n\t\tif (index > -1) {\r\n\t\t\tprops.soapLabels.splice(index, 1);\r\n\t\t\tprops.saveSoapLabels(props.soapLabels);\r\n\t\t}\r\n\t\tsetEditLabel(undefined);\r\n\t};\r\n\tconst handleConfirmDeleteDisagree = () => {\r\n\t\tsetConfirmDeleteOpen(false);\r\n\t\tsetEditLabel(undefined);\r\n\t};\r\n\t\r\n\tlet index = 0;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid className=\"gridSettings noPrint\">\r\n\t\t\t\t<div className=\"wrapperForAbsolute\">\r\n\t\t\t\t\t<h2 className=\"secondTitle\">Soap Label List</h2>\r\n\t\t\t\t\t<div className=\"rightAbsoluteContainer\">\r\n\t\t\t\t\t\t<Button onClick={handleLabelModalOpen} endIcon={<AddCircleIcon />}>New Soap Label</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Grid container spacing={0} className=\"soapLabelRows\">\r\n\t\t\t\t\t{props.soapLabels && props.soapLabels.length ? props.soapLabels.map(soapLabel => {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem xs={12}\r\n\t\t\t\t\t\t\t\tclassName=\"soapLabelRow wrapperForAbsolute\"\r\n\t\t\t\t\t\t\t\tkey={`soapLabelRow-${index}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span className=\"soapLabelRowName\">{soapLabel.name} </span>\r\n\t\t\t\t\t\t\t\t<div className=\"soapLabelButtons rightAbsoluteContainer\" >\r\n\t\t\t\t\t\t\t\t\t<QuantitySelector\r\n\t\t\t\t\t\t\t\t\t\tquantity={soapLabel.quantity}\r\n\t\t\t\t\t\t\t\t\t\thandleUpdateQty={(qty) => handleSoapLabelQtyChange(soapLabel, qty)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\" onClick={(e) => handleEdit(soapLabel)}><EditIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\" onClick={(e) => handleDelete(soapLabel)}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}) : (\r\n\t\t\t\t\t\t<div>List is empty. Create a Soap Label</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{editLabel && (\r\n\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\topen={confirmDeleteOpen}\r\n\t\t\t\t\t\tonClose={handleConfirmDeleteClose}\r\n\t\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">\r\n\t\t\t\t\t\t\t{`Delete soap label \"${editLabel.name}\" ?`}\r\n\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={handleConfirmDeleteDisagree}>No</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={handleConfirmDeleteClose} autoFocus>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t</Dialog>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t\t<LabelModal\r\n\t\t\t\topen={labelModalOpen}\r\n\t\t\t\tonClose={handleLabelModalClose}\r\n\t\t\t\tsaveLabel={saveLabel}\r\n\t\t\t\teditLabel={editLabel}\r\n\t\t\t\tsettings={settings}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './SettingsModal.css';\r\nimport * as React from 'react';\r\nimport Label from './labelLayouts/Label';\r\nimport LabelWideRow from './labelLayouts/LabelWideRow';\r\n\r\nimport { Box } from '@mui/material';\r\nimport { Select } from '@mui/material';\r\nimport { MenuItem } from '@mui/material';\r\nimport { TextField } from '@mui/material';\r\nimport { Radio } from '@mui/material';\r\nimport { RadioGroup } from '@mui/material';\r\nimport { FormControlLabel } from '@mui/material';\r\nimport { FormControl } from '@mui/material';\r\nimport { FormLabel } from '@mui/material';\r\nimport { InputLabel } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n// import BackspaceIcon from '@mui/icons-material/Backspace';\r\n// import SaveIcon from '@mui/icons-material/Save';\r\nimport { Slider } from '@mui/material';\r\n\r\nconst sliderStyle = {marginLeft: 12, marginRight: 12, width: \"auto\"};\r\nconst sliderPaddingProperties = {\r\n\tmin: 10, max: 100,\r\n\tmarks: [{value: 10, label: '10'}, {value: 100, label: '100'}]\r\n};\r\n\r\nexport default function SettingsModal(props) {\r\n\tconst [settings] = React.useState(props.settings);\r\n\r\n\tconst [soapBrand, setSoapBrand] = React.useState(props.settings.brand);\r\n\tconst [soapBrandError/*, setSoapBrandError*/] = React.useState(false);\r\n\tconst [font, setFont] = React.useState(props.settings.font);\r\n\tconst [fontError/*, setFontError*/] = React.useState(false);\r\n\tconst [padding, setPadding] = React.useState(props.settings.padding);\r\n\r\n\tconst [layout, setLayout] = React.useState(props.settings.layout);\r\n\tconst [isLayoutColumn, setIsLayoutColumn] = React.useState(props.settings.layout === \"columns\");\r\n\tconst [layoutNbPerRow, setLayoutNbPerRow] = React.useState(props.settings.layoutNbPerRow);\r\n\tconst [layoutNbPerRowError, setLayoutNbPerRowError] = React.useState(false);\r\n\tconst [layoutNbPerRowArray, setLayoutNbPerRowArray] = React.useState([...Array(props.settings.layoutNbPerRow).keys()]);\r\n\tconst [textAlignment, setTextAlignment] = React.useState(props.settings.textAlignment);\r\n\tconst [leftColumnWidth, setLeftColumnWidth] = React.useState(props.settings.leftColumnWidth);\r\n\t\r\n\tconst handleSoapBrandChange = (event) => {\r\n\t\tsetSoapBrand(event.target.value);\r\n\t\tsettings.brand = event.target.value;\r\n\t};\r\n\tconst handleFontChange = (event) => {\r\n\t\tsetFont(event.target.value);\r\n\t\tsettings.font = event.target.value;\r\n\t};\r\n\tconst handleLayoutChange = (event) => {\r\n\t\tsetLayout(event.target.value);\r\n\t\tsetIsLayoutColumn(event.target.value === \"columns\");\r\n\t\tsettings.layout = event.target.value;\r\n\t};\r\n\tconst handleTextAlignmentChange = (event) => {\r\n\t\tsetTextAlignment(event.target.value);\r\n\t\tsettings.textAlignment = event.target.value;\r\n\t};\r\n\tconst handleLeftColumnWidthChange = (event) => {\r\n\t\tsetLeftColumnWidth(event.target.value/100);\r\n\t\tsettings.leftColumnWidth = event.target.value/100;\r\n\t};\r\n\tconst handleLayoutNbPerRowChange = (event) => {\r\n\t\tconst val = parseInt(event.target.value);\r\n\t\tconst valid = val>=2 && val<=6;\r\n\t\tsetLayoutNbPerRowError(!valid);\r\n\t\tif (valid) {\r\n\t\t\tsetLayoutNbPerRow(val);\r\n\t\t\tsetLayoutNbPerRowArray([...Array(val).keys()]);\r\n\t\t\tsettings.layoutNbPerRow = val;\r\n\t\t}\r\n\t};\r\n\tconst handlePaddingChange = (value, property) => {\r\n\t\tpadding[property] = value;\r\n\t\tconst newPadding = {...padding};\r\n\t\tsetPadding(newPadding);\r\n\t\tconsole.log('property='+value);\r\n\t\tsettings.padding = newPadding;\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tprops.onClose();\r\n\t\tprops.saveSettings(settings);\r\n\t};\r\n\r\n\tconsole.log(layoutNbPerRowArray);\r\n\r\n\treturn (\r\n\t\t<Dialog open={props.open} scroll=\"body\" maxWidth={1000}>\r\n\t\t\t<DialogContent dividers={false}>\r\n\t\t\t\t<Box className=\"modalBox\">\r\n\t\t\t\t\t<FormControl fullWidth={true} component=\"form\" className=\"form\">\r\n\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\taria-label=\"layour\"\r\n\t\t\t\t\t\t\tvalue={layout}\r\n\t\t\t\t\t\t\tonChange={handleLayoutChange}\r\n\t\t\t\t\t\t\tname=\"radio-buttons-group\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid container spacing={2} className=\"gridForm\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<h2 className=\"secondTitle title\">Settings</h2>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6} className=\"gridItemClose\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={handleClose}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tid=\"font\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Font\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={font}\r\n\t\t\t\t\t\t\t\t\t\terror={fontError}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleFontChange}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tid=\"soap-brand\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Brand\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={soapBrand}\r\n\t\t\t\t\t\t\t\t\t\terror={soapBrandError}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleSoapBrandChange}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Top padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"padding-top\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Top padding\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pt)}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pt')}\r\n\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Bottom padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"padding-bottom\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Bottom padding\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pb)}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pb')}\r\n\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemLayout\">\r\n\t\t\t\t\t\t\t\t\t<Grid container xs={12} spacing={2} className=\"gridLayoutsContainer\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemLayout\">\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"columns\" control={<Radio />} label=\"Columns Layout\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{layoutNbPerRowArray.map(i => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`label-${i}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsettings={settings}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlayout=\"columns\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsoapName=\"Soap name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tingredients=\"Ingredients: water, coconut oil, palm oil, lye, avocado oil, canola oil, castor oil, olive oil, safflower oil, cocoa butter, fragrance(s), colorant(s).\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbrand={settings.brand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tphrase=\"Some catchy phrase\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdemo={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t{isLayoutColumn && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Left padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Left padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Right padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Right padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"nbPerRow-label\">Number of label per row (between 2 and 6)</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"nbPerRow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"nbPerRow-label\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Number of label per row (between 2 and 6)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={layoutNbPerRow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// error={layoutNbPerRowError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleLayoutNbPerRowChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={2}>2</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={3}>3</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={4}>4</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={5}>5</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={6}>6</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"textAlignment-label\">Text Alignment</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"textAlignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"textAlignment-label\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Text Alignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={textAlignment}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTextAlignmentChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"left\">Left</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"right\">Right</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemLayout\">\r\n\t\t\t\t\t\t\t\t\t<Grid container xs={12} spacing={2} className=\"gridLayoutsContainer\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemLayout\">\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"wide\" control={<Radio />} label=\"Wide Row Layout\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\tsettings={settings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlayout=\"wide\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsoapName=\"Soap name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tingredients=\"Ingredients: water, coconut oil, palm oil, lye, avocado oil, canola oil, castor oil, olive oil, safflower oil, cocoa butter, fragrance(s), colorant(s).\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tbrand={settings.brand}\r\n\t\t\t\t\t\t\t\t\t\t\t\tphrase=\"Some catchy phrase\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdemo={true}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t{!isLayoutColumn && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 1 left padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 1 left padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl1')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 1 right padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 1 right padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr1')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 2 left padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 2 left padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl2')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 2 right padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 2 right padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr2')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Left Column Size</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"textAlignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Left Column Size\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(leftColumnWidth*100)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleLeftColumnWidthChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={25} max={75}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarks={[{value: 25, label: '25%'}, {value: 75, label: '75%'}]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","import './LabelsPrintView.css';\r\nimport * as React from 'react';\r\nimport Label from './labelLayouts/Label';\r\nimport SettingsModal from './SettingsModal';\r\nimport { IconButton } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nexport default function LabelsPrintView(props) {\r\n\tconst [settings] = React.useState(props.settings);\r\n\tconst [layoutNbPerRow/*, setLayoutNbPerRow*/] = React.useState(props.settings.layoutNbPerRow);\r\n\tconst [layout/*, setLayoutNbPerRow*/] = React.useState(props.settings.layout);\r\n\tconst [settingsModalOpen, setSettingsModalOpen] = React.useState(false);\r\n\r\n\t// Settings Modal\r\n\tconst handleClickOpenSettings = () => {\r\n\t\tsetSettingsModalOpen(true);\r\n\t};\r\n\tconst handleSettingsModalClose = () => {\r\n\t\tsetSettingsModalOpen(false);\r\n\t}\r\n\tconsole.log('settings=',settings);\r\n\tconst renderedLabels = (soapLabels, _layoutNbPerRow, _layout) => {\r\n\t\tif(_layout === \"wide\") {\r\n\t\t\t_layoutNbPerRow = 1;\r\n\t\t}\r\n\r\n\t\tconsole.log(_layoutNbPerRow, _layout);\r\n\t\tlet labels = [];\r\n\t\tsoapLabels.forEach(soapLabel => {\r\n\t\t\tfor (let i=0; i<soapLabel.quantity; i++){\r\n\t\t\t\tlabels.push(soapLabel);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst rows = labels.reduceRight((r,i,_,s) => (r.push(s.splice(0,_layoutNbPerRow)),r),[]);\r\n\r\n\t\treturn rows.map((row, r) => {\r\n\t\t\treturn (\r\n\t\t\t<div className=\"gridPrintRow\" key={`labelPreviewRow-${r}`}>\r\n\t\t\t\t{row.map((label, l) => {\r\n\t\t\t\t\tconst index = r*_layoutNbPerRow+l;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\tsettings={settings}\r\n\t\t\t\t\t\t\tlayout={settings.layout}\r\n\t\t\t\t\t\t\tkey={`labelPreview-${index}`}\r\n\t\t\t\t\t\t\tsoapName={label.name} \r\n\t\t\t\t\t\t\tingredients={label.ingredients} \r\n\t\t\t\t\t\t\tbrand={settings.brand}\r\n\t\t\t\t\t\t\tphrase={label.phrase}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\t// Print\r\n\tconst handleClickPrint = () => {\r\n\t\twindow.print();\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t}, [layoutNbPerRow, layout]);\r\n\r\n\tif(!settings) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<SettingsModal\r\n\t\t\t\tsettings={settings}\r\n\t\t\t\tsaveSettings={props.saveSettings}\r\n\t\t\t\topen={settingsModalOpen}\r\n\t\t\t\tonClose={handleSettingsModalClose}\r\n\t\t\t/>\r\n\t\t\t<div className=\"wrapperForAbsolute noPrint\">\r\n\t\t\t\t<h2 className=\"secondTitle\">Soap Labels Print Preview\r\n\t\t\t\t<Tooltip title=\"Lines are for visual aids only. And margins could render differently in your print settings.\" placement=\"right\">\r\n\t\t\t\t\t<IconButton size=\"small\">\r\n\t\t\t\t\t\t<InfoIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t</h2>\r\n\t\t\t\t<div className=\"rightAbsoluteContainer\">\r\n\t\t\t\t\t<IconButton onClick={handleClickPrint}><PrintIcon/></IconButton>\r\n\t\t\t\t\t<IconButton onClick={handleClickOpenSettings}><SettingsIcon/></IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"gridPrintLabels\">\r\n\t\t\t\t{props.soapLabels && props.soapLabels.length ? renderedLabels(props.soapLabels, settings.layoutNbPerRow, settings.layout) : null}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './LabelsList.css';\r\nimport * as React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport LabelsList from './LabelsList';\r\nimport LabelsPrintView from './LabelsPrintView';\r\n\r\nconst defaultSettings = {\r\n\t\"font\": \"Shadows Into Light\",\r\n\t\"brand\": \"Soap Brand\",\r\n\t\"layout\": \"columns\",\r\n\t\"layoutNbPerRow\": 3,\r\n\t\"textAlignment\": \"left\",\r\n\t\"leftColumnWidth\": 0.65,\r\n\t\"padding\": {'pt': 20, 'pb': 20, 'pl': 20, 'pr': 20, 'pl1': 50, 'pr1': 50, 'pl2': 10, 'pr2': 20},\r\n};\r\n\r\nexport default function SoapLabels() {\r\n\r\n\tconst [soapLabels, setSoapLabels] = React.useState([]);\r\n\tconst [settings, setSettings] = React.useState(undefined);\r\n\r\n\t// Save\r\n\tconst saveSoapLabels = (_soapLabels) => {\r\n\t\tsetSoapLabels([...soapLabels]);\r\n\t\tconst cookies = new Cookies();\r\n\t\tcookies.set('SoapLabels', JSON.stringify(soapLabels), { path: '/' });\r\n\t\tconsole.log(cookies.get('SoapLabels'));\r\n\t};\r\n\t// Settings\r\n\tconst saveSettings = (_settings) => {\r\n\t\tsetSettings(_settings);\r\n\t\tconst cookies = new Cookies();\r\n\t\tcookies.set('Settings', JSON.stringify(settings), { path: '/' });\r\n\t\tconsole.log(cookies.get('Settings'));\r\n\t};\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tconst cookies = new Cookies();\r\n\t\tsetSoapLabels(cookies.get('SoapLabels') || []);\r\n\t\tsetSettings(cookies.get('Settings') || defaultSettings);\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconsole.log(settings);\r\n\t}, [soapLabels, settings]);\r\n\r\n\treturn (\r\n\t\t<Box className=\"box\">\r\n\t\t\t{settings && (<LabelsList \r\n\t\t\t\tsettings={settings}\r\n\t\t\t\tsaveSoapLabels={saveSoapLabels}\r\n\t\t\t\tsoapLabels={soapLabels}\r\n\t\t\t/>)}\r\n\t\t\t{settings && (<LabelsPrintView \r\n\t\t\t\tsoapLabels={soapLabels}\r\n\t\t\t\tsettings={settings}\r\n\t\t\t\tsaveSettings={saveSettings}\r\n\t\t\t/>)}\r\n\t\t</Box>\r\n\t);\r\n}\r\n","import './Main.css';\r\nimport * as React from 'react';\r\nimport { Container } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport Cookies from 'universal-cookie';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\n\r\nimport SoapLabels from './SoapLabels';\r\n\r\nconst images = [\r\n\t'arab_tile',\r\n\t'bush',\r\n\t'circuit',\r\n\t'full-bloom',\r\n\t'gplaypattern',\r\n\t'greek-vase',\r\n\t'herringbone',\r\n\t'hotel-wallpaper',\r\n\t'more-leaves',\r\n\t'moroccan-flower',\r\n\t'moroccan-flower-dark',\r\n\t'morocco-blue',\r\n\t'new_year_background',\r\n\t'regal',\r\n\t'ripples',\r\n\t'swirls',\r\n\t'tree_bark',\r\n\t'trees',\r\n];\r\n\r\nexport default function Main() {\r\n\r\n\tconst [bgTileIndex, setBgTileIndex] = React.useState(0);\r\n\tconst [mainClassName, setMainClassName] = React.useState(\"\");\r\n\r\n\t// Background\r\n\tconst handlePreviousBg = () => {\r\n\t\tlet nextBgTileIndex = bgTileIndex - 1;\r\n\t\tif (nextBgTileIndex < 0){\r\n\t\t\tnextBgTileIndex = images.length - 1;\r\n\t\t}\r\n\t\tupdateBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\tconst handleNextBg = () => {\r\n\t\tlet nextBgTileIndex = bgTileIndex + 1;\r\n\t\tif (nextBgTileIndex >= images.length){\r\n\t\t\tnextBgTileIndex = 0;\r\n\t\t}\r\n\t\tupdateBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\tconst updateBgTileIndex = (nextBgTileIndex) => {\r\n\t\tconst cookies = new Cookies();\r\n\t\tcookies.set('SoapBgTileIndex', nextBgTileIndex, { path: '/' });\r\n\t\tsetBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst cookies = new Cookies();\r\n\t\tconst _bgTileIndex = parseInt(cookies.get('SoapBgTileIndex')) || 0;\r\n\t\tsetBgTileIndex(_bgTileIndex);\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetMainClassName(`main main_${images[bgTileIndex]}`);\r\n\t}, [bgTileIndex]);\r\n\r\n\treturn (\r\n\t\t<div className={mainClassName}>\r\n\t\t\t<Container className=\"header noPrint wrapperForAbsolute\">\r\n\t\t\t\t<h1 className=\"mainTitle\">Soap Labels</h1>\r\n\t\t\t\t<div className=\"bgSwitcherContainer rightAbsoluteContainer\">\r\n\t\t\t\t\t<IconButton onClick={handlePreviousBg}><ArrowBackIosNewIcon/></IconButton>\r\n\t\t\t\t\t<IconButton onClick={handleNextBg}><ArrowForwardIosIcon/></IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t\t<Container className=\"container\">\r\n\t\t\t\t<SoapLabels/>\r\n\t\t\t</Container>\r\n\t\t\t<Container className=\"footer noPrint\">\r\n\t\t\t\t<p className=\"footerCopyright\">Soap Labels @2021 Joanie Lessnick</p>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './App.css';\r\nimport * as React from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Main from './LabelMaker/Main';\r\n\r\nconst theme = createTheme({\r\n\ttypography: {\r\n\t\tfontFamily: [\r\n\t\t\t'Lato',\r\n\t\t\t'Arial',\r\n\t\t\t'Shadows Into Light',\r\n\t\t\t'-apple-system',\r\n\t\t\t'BlinkMacSystemFont',\r\n\t\t\t'\"Segoe UI\"',\r\n\t\t\t'Roboto',\r\n\t\t\t'\"Helvetica Neue\"',\r\n\t\t\t'Arial',\r\n\t\t\t'sans-serif',\r\n\t\t\t'\"Apple Color Emoji\"',\r\n\t\t\t'\"Segoe UI Emoji\"',\r\n\t\t\t'\"Segoe UI Symbol\"',\r\n\t\t].join(','),\r\n\t\tbutton: {\r\n\t\t  fontSize: '1rem',\r\n\t\t  fontWeight: '600',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n\t\t<CssBaseline />\r\n\t\t<Main />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}