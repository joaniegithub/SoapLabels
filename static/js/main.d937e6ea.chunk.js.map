{"version":3,"sources":["store/constants.js","store/actions.js","LabelMaker/labelLayouts/Label.js","LabelMaker/LabelModal.js","LabelMaker/components/QuantitySelector.js","LabelMaker/LabelsList.js","LabelMaker/SettingsModal.js","LabelMaker/LabelsPrintView.js","LabelMaker/SoapLabels.js","LabelMaker/Main.js","store/reducer.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["SET_CURRENT_SOAP_LABEL","ADD_SOAP_LABEL","EDIT_CURRENT_SOAP_LABEL","DELETE_CURRENT_SOAP_LABEL","EDIT_SETTINGS","useSettings","useSelector","state","settings","useSoapLabels","soapLabels","useCurrentSoapLabel","currentSoapLabel","selectCurrentSoapLabel","_currentSoapLabel","type","constants","editSoapLabel","_soapLabelToEdit","_soapLabelData","soapLabelData","soapLabelToEdit","editSettings","_settingsData","Label","props","layoutProps","layout","demoProps","demo","soapName","ingredients","phrase","padding","pt","pb","pl","pr","pl1","pr1","pl2","pr2","leftColumnWidth","layoutNbPerRow","textAlignment","seperatorWidth","brand","styleFont","fontFamily","font","styleFontAlign","textAlign","styleAlign","styleBackgroundColor","backgroundColor","Grid","item","className","xs","paddingTop","paddingBottom","paddingLeft","paddingRight","style","borderLeft","translations","LabelModal","saveLabel","onCloseLabelModal","labelModalOpen","React","useThinSpace","setUseThinSpace","useSoapCalcRecipe","setUseSoapCalcRecipe","translateFrench","setTranslateFrench","setSoapName","soapNameError","setSoapNameError","soapIngredients","setSoapIngredients","soapCode","setSoapCode","soapPhrase","setSoapPhrase","soapFragrances","setSoapFragrances","soapColorants","setSoapColorants","soapRecipeError","setSoapRecipeError","ingredientsCodeOutput","setIngredientsCodeOutput","handleSoapRecipeChange","event","target","value","allIngredients","soapCodeData","rxMatchWater","match","length","rxMatchLye","matchAll","forEach","oilElem","sortableRecipeData","soapItem","push","sort","a","b","map","ingredient","join","toLowerCase","generateIngredients","name","isColumnLayout","pagePadding","Math","max","arrPerRow","Array","keys","tooltipSoapCode","Dialog","open","scroll","maxWidth","DialogContent","dividers","Box","FormControl","fullWidth","component","container","spacing","IconButton","onClick","TextField","required","id","label","size","helperText","error","onChange","_soapName","replaceAll","width","FormControlLabel","control","Checkbox","checked","_useThinSpace","multiline","rows","Tooltip","title","placement","disabled","Button","endIcon","i","QuantitySelector","quantityProps","quantity","handleUpdateQty","setQuantity","updateQuantity","newQty","LabelsList","confirmDeleteOpen","setConfirmDeleteOpen","setLabelModalOpen","undefined","soapLabelToDelete","setSoapLabelToDelete","dispatch","useDispatch","handleConfirmDeleteClose","index","soapLabel","qty","parseInt","handleSoapLabelQtyChange","e","handleEdit","handleDelete","onClose","DialogTitle","DialogActions","variant","autoFocus","uid","Date","getTime","sliderStyle","marginLeft","marginRight","sliderPaddingProperties","min","marks","SettingsModal","onCloseSettingsModal","settingsModalOpen","setBrand","brandError","setFont","fontError","setPadding","setLayout","isLayoutColumn","setIsLayoutColumn","setLayoutNbPerRow","layoutNbPerRowArray","setLayoutNbPerRowArray","setTextAlignment","setLeftColumnWidth","setSeperatorWidth","handleBrandChange","updateSettings","handleFontChange","handlePaddingChange","property","newPadding","RadioGroup","Radio","FormLabel","Slider","valueLabelDisplay","InputLabel","Select","labelId","val","MenuItem","step","LabelsPrintView","setSettingsModalOpen","window","print","_soapLabels","_layoutNbPerRow","_layout","labels","reduceRight","r","_","s","splice","row","l","renderLabels","SoapLabels","images","Main","bgTileIndex","setBgTileIndex","mainClassName","setMainClassName","updateBgTileIndex","nextBgTileIndex","Cookies","set","path","cookies","_bgTileIndex","get","Container","defaultState","reducer","payload","console","log","newState","filter","store","createStore","serialisedState","localStorage","getItem","JSON","parse","warn","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","theme","createTheme","typography","button","fontSize","fontWeight","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d937e6ea.chunk.js","sourcesContent":["export const SET_CURRENT_SOAP_LABEL = 'SET_CURRENT_SOAP_LABEL';\r\nexport const ADD_SOAP_LABEL = 'ADD_SOAP_LABEL';\r\nexport const EDIT_CURRENT_SOAP_LABEL = 'EDIT_CURRENT_SOAP_LABEL';\r\nexport const DELETE_CURRENT_SOAP_LABEL = 'DELETE_CURRENT_SOAP_LABEL';\r\nexport const EDIT_SETTINGS = 'EDIT_SETTINGS';","import * as constants from './constants';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nexport const useSettings = () => {\r\n\treturn useSelector((state) => {\r\n\t\treturn state.settings;\r\n\t});\r\n};\r\nexport const useSoapLabels = () => {\r\n\treturn useSelector((state) => {\r\n\t\treturn state.soapLabels;\r\n\t});\r\n};\r\nexport const useCurrentSoapLabel = () => {\r\n\treturn useSelector((state) => {\r\n\t\treturn state.currentSoapLabel;\r\n\t});\r\n};\r\n\r\n\r\n\r\nexport const selectCurrentSoapLabel = (_currentSoapLabel) => {\r\n\t// console.log(_currentSoapLabel, 'currentSoapLabel');\r\n\treturn {\r\n\t\ttype: constants.SET_CURRENT_SOAP_LABEL,\r\n\t\tcurrentSoapLabel: _currentSoapLabel\r\n\t};\r\n};\r\nexport const addSoapLabel = (_soapLabelData) => {\r\n\t// console.log(_soapLabels, 'soapLabels');\r\n\treturn {\r\n\t\ttype: constants.ADD_SOAP_LABEL,\r\n\t\tsoapLabel: _soapLabelData\r\n\t};\r\n};\r\nexport const editSoapLabel = (_soapLabelToEdit, _soapLabelData) => {\r\n\t// console.log(_soapLabelData, _soapLabelToEdit, 'dispatchEditSoapLabel');\r\n\treturn {\r\n\t\ttype: constants.EDIT_CURRENT_SOAP_LABEL,\r\n\t\tsoapLabelData: _soapLabelData,\r\n\t\tsoapLabelToEdit: _soapLabelToEdit\r\n\t};\r\n};\r\nexport const deleteSoapLabel = (_soapLabelToDelete) => {\r\n\t// console.log(_soapLabels, 'soapLabels');\r\n\treturn {\r\n\t\ttype: constants.DELETE_CURRENT_SOAP_LABEL,\r\n\t\tsoapLabelToDelete: _soapLabelToDelete\r\n\t};\r\n};\r\n\r\nexport const editSettings = (_settingsData) => {\r\n\t// console.log(_soapLabels, 'soapLabels');\r\n\treturn {\r\n\t\ttype: constants.EDIT_SETTINGS,\r\n\t\tsettings: _settingsData\r\n\t};\r\n};\r\n","import './Label.css';\r\nimport './LabelWideRow.css';\r\nimport * as React from 'react';\r\nimport { Grid } from '@mui/material';\r\nimport { useSettings } from '../../store/actions';\r\n\r\nexport default function Label(props) {\r\n\tconst settings = useSettings();\r\n\r\n\tconst {layout: layoutProps, demo: demoProps, soapName, ingredients, phrase} = props;\r\n\r\n\tconst {pt, pb, pl, pr, pl1, pr1, pl2, pr2} = settings.padding;\r\n\tconst layout = layoutProps || settings.layout || \"columns\";\r\n\tconst leftColumnWidth = settings.leftColumnWidth;\r\n\tconst layoutNbPerRow = settings.layoutNbPerRow;\r\n\tconst textAlignment = settings.textAlignment;\r\n\tconst seperatorWidth = settings.seperatorWidth;\r\n\tconst brand = settings.brand;\r\n\tconst demo = !!demoProps;\r\n\r\n\tconst styleFont = {fontFamily: settings.font};\r\n\tconst styleFontAlign = {fontFamily: settings.font, textAlign: textAlignment};\r\n\tconst styleAlign = {textAlign: textAlignment};\r\n\tconst styleBackgroundColor = {backgroundColor:  demo ? '#f8f8f8' : 'transparent'};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{layout === \"columns\" ? (\r\n\t\t\t\t<Grid item \r\n\t\t\t\t\tclassName=\"labelGridItem\" \r\n\t\t\t\t\txs={12/layoutNbPerRow} \r\n\t\t\t\t\tpaddingTop={pt+'px'}\r\n\t\t\t\t\tpaddingBottom={pb+'px'}\r\n\t\t\t\t\tpaddingLeft={pl+'px'}\r\n\t\t\t\t\tpaddingRight={pr+'px'}\r\n\t\t\t\t\tstyle={styleBackgroundColor}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p style={styleFontAlign} className=\"labelSoapName\">{soapName}</p>\r\n\t\t\t\t\t<p style={styleAlign} className=\"labelSoapIngredients\">{ingredients}</p>\r\n\t\t\t\t\t{brand && (<p style={styleAlign} className=\"labelSoapBrand\">{brand}</p>)}\r\n\t\t\t\t\t{phrase && (<p style={styleAlign} className=\"labelSoapPhrase\">{phrase}</p>)}\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t<Grid xs={12} item\r\n\t\t\t\t\tclassName=\"labelWideRowGridItem\"\r\n\t\t\t\t\tpaddingTop={pt+'px'}\r\n\t\t\t\t\tpaddingBottom={pb+'px'}\r\n\t\t\t\t\tstyle={styleBackgroundColor}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid item \r\n\t\t\t\t\t\txs={12*leftColumnWidth} \r\n\t\t\t\t\t\tpaddingLeft={pl1+'px'}\r\n\t\t\t\t\t\tpaddingRight={pr1+'px'}\r\n\t\t\t\t\t\tclassName=\"labelWideRowGridItemLeft\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p className=\"labelWideRowSoapIngredients\">{ingredients}</p>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item \r\n\t\t\t\t\t\txs={12*(1-leftColumnWidth)} \r\n\t\t\t\t\t\tpaddingLeft={pl2+'px'}\r\n\t\t\t\t\t\tpaddingRight={pr2+'px'}\r\n\t\t\t\t\t\tclassName=\"labelWideRowGridItemRight\" \r\n\t\t\t\t\t\tstyle={{borderLeft: `${seperatorWidth}px solid #000`}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{brand && (<p className=\"labelWideRowSoapBrand\">{brand}</p>)}\r\n\t\t\t\t\t\t<p style={styleFont} className=\"labelWideRowSoapName\">{soapName}</p>\r\n\t\t\t\t\t\t{phrase && (<p className=\"labelWideRowSoapPhrase\">{phrase}</p>)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './LabelModal.css';\r\nimport * as React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport { TextField } from '@mui/material';\r\nimport { FormControl } from '@mui/material';\r\nimport { FormControlLabel } from '@mui/material';\r\nimport { Checkbox } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport { Tooltip } from '@mui/material';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport BackspaceIcon from '@mui/icons-material/Backspace';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nimport Label from './labelLayouts/Label';\r\nimport { useCurrentSoapLabel, useSettings } from '../store/actions';\r\n\r\nconst translations = {\r\n\t'Almond Oil, sweet': 'Huile d\\'amande douce',\r\n\t'Aloe Butter': 'Beurre d\\'aloès',\r\n\t'Argan Oil': 'Huile d\\'argane',\r\n\t'Avocado Oil': 'Huile d\\'avocat',\r\n\t'Canola Oil': 'Huile de canola',\r\n\t'Castor Oil': 'Huile de ricin',\r\n\t'Cocoa Butter': 'Beurre de cacao',\r\n\t'Coconut Oil, 76 deg': 'Huile de coconut',\r\n\t'Coconut Oil, 92 deg': 'Huile de coconut',\r\n\t'Coconut Oil, fractionated': 'Huile de coconut',\r\n\t'Corn Oil': 'Huile de maïs',\r\n\t'Grapeseed Oil': 'Huile de pépins de raisin',\r\n\t'Kokum Butter': 'Beurre de kokum',\r\n\t'Jojoba Oil (a Liquid Wax Ester)': 'Huile de jojoba',\r\n\t'Mango Seed Butter': 'Beurre de mangue',\r\n\t'Olive Oil': 'Huile d\\'olive',\r\n\t'Palm Oil': 'Huile de palme',\r\n\t'Rice Bran Oil, refined': 'Huile de riz',\r\n\t'Safflower Oil': 'Huile de carthame',\r\n\t'Sesame Oil': 'Huile de sésame',\r\n\t'Shea Butter': 'Beurre de karité',\r\n\t'Sunflower Oil': 'Huile de tournesol',\r\n}\r\n\r\nexport default function LabelModal(props) {\r\n\tconst settings = useSettings();\r\n\tconst currentSoapLabel = useCurrentSoapLabel();\r\n\r\n\tconst {saveLabel, onCloseLabelModal, labelModalOpen} = props;\r\n\r\n\tconst [useThinSpace, setUseThinSpace] = React.useState(false);\r\n\tconst [useSoapCalcRecipe, setUseSoapCalcRecipe] = React.useState(false);\r\n\tconst [translateFrench, setTranslateFrench] = React.useState(false);\r\n\tconst [soapName, setSoapName] = React.useState('');\r\n\tconst [soapNameError, setSoapNameError] = React.useState(false);\r\n\tconst [soapIngredients, setSoapIngredients] = React.useState('');\r\n\tconst [soapCode, setSoapCode] = React.useState('');\r\n\tconst [soapPhrase, setSoapPhrase] = React.useState('');\r\n\tconst [soapFragrances, setSoapFragrances] = React.useState('');\r\n\tconst [soapColorants, setSoapColorants] = React.useState('');\r\n\r\n\tconst [soapRecipeError, setSoapRecipeError] = React.useState(false);\r\n\t\r\n\tconst [ingredientsCodeOutput, setIngredientsCodeOutput] = React.useState('');\r\n\t\r\n\tconst handleUseThinSpaceChange = (event) => {\r\n\t\tconst _useThinSpace = !!event.target.checked;\r\n\t\tsetUseThinSpace(_useThinSpace);\r\n\t\tsetSoapName(_useThinSpace ? soapName.replaceAll(\" \", \" \") : soapName.replaceAll(\" \", \" \"));\r\n\t};\r\n\tconst handleUseSoapCalcRecipeChange = (event) => {\r\n\t\tsetUseSoapCalcRecipe(!!event.target.checked);\r\n\t};\r\n\tconst handleTranslateFrenchChange = (event) => {\r\n\t\tsetTranslateFrench(!!event.target.checked);\r\n\t};\r\n\tconst handleSoapNameChange = (event) => {\r\n\t\tconst _soapName = event.target.value;\r\n\t\tsetSoapName(useThinSpace ? _soapName.replaceAll(\" \", \" \") : _soapName.replaceAll(\" \", \" \"));\r\n\t};\r\n\tconst handleSoapPhraseChange = (event) => {\r\n\t\tsetSoapPhrase(event.target.value);\r\n\t};\r\n\tconst handleSoapFragrancesChange = (event) => {\r\n\t\tsetSoapFragrances(event.target.value);\r\n\t};\r\n\tconst handleSoapColorantsChange = (event) => {\r\n\t\tsetSoapColorants(event.target.value);\r\n\t};\r\n\r\n\tconst handleSoapRecipeChange = (event) => {\r\n\t\tif(useSoapCalcRecipe) {\r\n\t\t\tsetSoapCode(event.target.value);\r\n\t\t} else {\r\n\t\t\tsetSoapIngredients(event.target.value);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleClickSave = () => {\r\n\t\tsetSoapNameError(!soapName);\r\n\t\tsetSoapRecipeError(!soapCode);\r\n\t\tif(soapName && soapCode && ingredientsCodeOutput) {\r\n\t\t\t// name, ingredients, soapCode, soapIngredients, soapFragrances, soapColorants, phrase, translateFrench\r\n\t\t\tsaveLabel(\r\n\t\t\t\tsoapName, \r\n\t\t\t\tingredientsCodeOutput, \r\n\t\t\t\tsoapCode, \r\n\t\t\t\tsoapIngredients, \r\n\t\t\t\tsoapFragrances, \r\n\t\t\t\tsoapColorants, \r\n\t\t\t\tsoapPhrase, \r\n\t\t\t\tuseSoapCalcRecipe, \r\n\t\t\t\ttranslateFrench\r\n\t\t\t);\r\n\t\t\tonCloseLabelModal();\r\n\t\t}\r\n\t};\r\n\r\n\tconst generateIngredients = () => {\r\n\t\tlet allIngredients = soapCode;\r\n\r\n\t\tif (useSoapCalcRecipe) {\r\n\t\t\tif (!soapCode) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst soapCodeData = {};\r\n\r\n\t\t\tconst rxMatchWater = soapCode.match(/^Water [0-9.]+ [0-9.]+ ([0-9.]+$)/m);\r\n\t\t\tif (rxMatchWater && rxMatchWater.length > 1 && rxMatchWater[1]) {\r\n\t\t\t\tsoapCodeData[translateFrench ? \"Eau\" : \"Water\"] = rxMatchWater[1];\r\n\t\t\t}\r\n\r\n\t\t\tconst rxMatchLye = soapCode.match(/^Lye - NaOH [0-9.]+ [0-9.]+ ([0-9.]+$)/m);\r\n\t\t\tif (rxMatchLye && rxMatchLye.length > 1 && rxMatchLye[1]) {\r\n\t\t\t\tsoapCodeData[translateFrench ? \"Hydroxyde de sodium\" : \"Lye\"] = rxMatchLye[1];\r\n\t\t\t}\r\n\r\n\t\t\t// 1 Coconut Oil, 76 deg 30.00 0.595 9.52 270.00\r\n\t\t\tconst arrOils = [...soapCode.matchAll(/^[0-9.]+ ([\\s\\w,]+) [0-9.]+\\.[0-9.]+ [0-9.]+ [0-9.]+ ([0-9.]+)$/gm)];\r\n\t\t\tarrOils.forEach((oilElem) => {\r\n\t\t\t\tsoapCodeData[translateFrench ? translations[oilElem[1]] : oilElem[1]] = oilElem[2];\r\n\t\t\t});\r\n\r\n\t\t\tconst sortableRecipeData = [];\r\n\t\t\tfor (let soapItem in soapCodeData) {\r\n\t\t\t\tsortableRecipeData.push([soapItem, soapCodeData[soapItem]]);\r\n\t\t\t}\r\n\t\t\tsortableRecipeData.sort(function(a, b) {\r\n\t\t\t\treturn b[1] - a[1];\r\n\t\t\t});\r\n\r\n\t\t\tallIngredients = sortableRecipeData.map((ingredient) => ingredient[0]).join(\", \").toLowerCase();\r\n\t\t} else {\r\n\t\t\tallIngredients = soapIngredients;\r\n\t\t}\r\n\r\n\t\tsetSoapIngredients(allIngredients);\r\n\r\n\t\tconst ingredientsLabel = translateFrench ? \"Ingrédients\" : \"Ingredients\";\r\n\t\tallIngredients = `${ingredientsLabel}: ${allIngredients}, ${soapFragrances || \"fragrance(s)\"}, ${soapColorants || \"colorant(s)\"}.`\r\n\t\tsetIngredientsCodeOutput(allIngredients);\r\n\t};\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tgenerateIngredients();\r\n\t}, [soapCode, soapIngredients, soapColorants, soapFragrances, soapPhrase, useThinSpace, useSoapCalcRecipe, translateFrench]);\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tif(currentSoapLabel && currentSoapLabel.name && currentSoapLabel.ingredients) {\r\n\t\t\tsetSoapName(currentSoapLabel.name);\r\n\t\t\tsetSoapPhrase(currentSoapLabel.phrase);\r\n\t\t\tsetSoapCode(currentSoapLabel.soapCode);\r\n\t\t\tsetSoapIngredients(currentSoapLabel.soapIngredients || currentSoapLabel.ingredients);\r\n\t\t\tsetSoapFragrances(currentSoapLabel.soapFragrances);\r\n\t\t\tsetSoapColorants(currentSoapLabel.soapColorants);\r\n\t\t\tsetTranslateFrench(currentSoapLabel.translateFrench);\r\n\t\t\tsetUseSoapCalcRecipe(currentSoapLabel.useSoapCalcRecipe && !!currentSoapLabel.soapCode);\r\n\t\t} else {\r\n\t\t\tsetSoapName(\"\");\r\n\t\t\tsetSoapPhrase(\"\");\r\n\t\t\tsetSoapCode(\"\");\r\n\t\t\tsetSoapIngredients(\"\");\r\n\t\t\tsetSoapFragrances(\"\");\r\n\t\t\tsetSoapColorants(\"\");\r\n\t\t\tsetTranslateFrench(settings.translateFrench || false);\r\n\t\t\tsetUseSoapCalcRecipe(true);\r\n\t\t}\r\n\t}, [currentSoapLabel, settings]);\r\n\r\n\tconst handleClose = () => {\r\n\t\tonCloseLabelModal();\r\n\t};\r\n\t\r\n\tconst isColumnLayout = settings.layout === \"columns\";\r\n\tconst pagePadding = {\r\n\t\tpt: Math.max(0, 20-settings.padding.pt)+'px',\r\n\t\tpb: Math.max(0, 20-settings.padding.pb)+'px',\r\n\t\tpl: Math.max(0, 20-(isColumnLayout ? settings.padding.pl : settings.padding.pl1))+'px',\r\n\t\tpr: Math.max(0, 20-(isColumnLayout ? settings.padding.pr : settings.padding.pr2))+'px',\r\n\t};\r\n\tconst arrPerRow = [...Array(isColumnLayout ? settings.layoutNbPerRow : 1).keys()];\r\n\r\n\tconst tooltipSoapCode = `You can copy and paste the soapcalc.net generated recipe, \r\n\t\tand this if checked, all ingredients will be extracted${translateFrench ? \", translated in french\" : \"\"} and ordered by weight.`;\r\n\t\r\n\treturn (\r\n\t\t<Dialog open={labelModalOpen} scroll=\"body\" maxWidth={'1000px'}>\r\n\t\t\t<DialogContent dividers={false}>\r\n\t\t\t\t<Box className=\"modalBox\">\r\n\t\t\t\t\t<FormControl fullWidth={true} component=\"form\" className=\"form\">\r\n\t\t\t\t\t\t<Grid container spacing={2} className=\"gridForm\">\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t<h2 className=\"secondTitle title\">New Soap Label</h2>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6} className=\"gridItemClose\">\r\n\t\t\t\t\t\t\t\t<IconButton onClick={handleClose}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tid=\"soap-name\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Name\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapName}\r\n\t\t\t\t\t\t\t\t\terror={soapNameError}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapNameChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControlLabel \r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox \r\n\t\t\t\t\t\t\t\t\tchecked={useThinSpace}\r\n\t\t\t\t\t\t\t\t\tonChange={handleUseThinSpaceChange} />} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Use thin spaces in Soap Name\" />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"phrase\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Phrase\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapPhrase}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapPhraseChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{useSoapCalcRecipe ? (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tid=\"soap-code\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Code\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"tfRecipeCode\"\r\n\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\trows={8}\r\n\t\t\t\t\t\t\t\t\t\tvalue={soapCode}\r\n\t\t\t\t\t\t\t\t\t\terror={soapRecipeError}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleSoapRecipeChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tid=\"soap-ingredients\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Ingredients\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"tfRecipeCode\"\r\n\t\t\t\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\t\t\t\trows={8}\r\n\t\t\t\t\t\t\t\t\t\tvalue={soapIngredients}\r\n\t\t\t\t\t\t\t\t\t\terror={soapRecipeError}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleSoapRecipeChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel \r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox \r\n\t\t\t\t\t\t\t\t\tchecked={useSoapCalcRecipe} \r\n\t\t\t\t\t\t\t\t\tonChange={handleUseSoapCalcRecipeChange} />} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Extract ingredients from soapcalc.net recipe\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Tooltip title={tooltipSoapCode} placement=\"right\">\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t<InfoIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<FormControlLabel \r\n\t\t\t\t\t\t\t\t\tdisabled={!useSoapCalcRecipe}\r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox \r\n\t\t\t\t\t\t\t\t\tchecked={translateFrench} \r\n\t\t\t\t\t\t\t\t\tonChange={handleTranslateFrenchChange} />} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Translate ingredients in french.\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"soap-fragrances\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Fragrance(s)\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapFragrances}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapFragrancesChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tid=\"soap-colorants\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Soap Colorant(s)\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tvalue={soapColorants}\r\n\t\t\t\t\t\t\t\t\tonChange={handleSoapColorantsChange}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemButtons\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tendIcon={<BackspaceIcon />}>Clear</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tendIcon={<SaveIcon />} \r\n\t\t\t\t\t\t\t\t\tonClick={handleClickSave}>Save</Button>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h2 className=\"secondTitle\">Label Preview</h2>\r\n\t\t\t\t\t<Grid className=\"gridResult\" {...pagePadding}>\r\n\t\t\t\t\t\t{arrPerRow.map(i => (\r\n\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\tkey={`label-${i}`}\r\n\t\t\t\t\t\t\t\tsoapName={soapName}\r\n\t\t\t\t\t\t\t\tingredients={ingredientsCodeOutput}\r\n\t\t\t\t\t\t\t\tphrase={soapPhrase}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","\r\nimport './QuantitySelector.css';\r\nimport * as React from 'react';\r\nimport { IconButton } from '@mui/material';\r\n\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\n// const styles = {\r\n// \ticonButton: {\r\n// \t\tpadding: '2px',\r\n// \t\t'svg': {\r\n// \t\t\twidth: '20px',\r\n// \t\t\theight: '20px',\r\n// \t\t},\r\n// \t}\r\n// }\r\n\r\nexport default function QuantitySelector(props) {\r\n\tconst { quantity: quantityProps, handleUpdateQty } = props;\r\n\tconst [quantity, setQuantity] = React.useState(quantityProps);\r\n\r\n\tconst handleRemove = () => {\r\n\t\tupdateQuantity(quantity-1);\r\n\t};\r\n\tconst handleAdd = () => {\r\n\t\tupdateQuantity(quantity+1);\r\n\t};\r\n\tconst updateQuantity = (newQty) => {\r\n\t\tsetQuantity(newQty);\r\n\t\thandleUpdateQty(newQty);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"wrapperQuantity\">\r\n\t\t\t<IconButton size=\"small\" className=\"iconButton\" onClick={handleRemove}><RemoveIcon/></IconButton>\r\n\t\t\t<span className=\"labelQuantity\">{quantity}</span>\r\n\t\t\t<IconButton size=\"small\" className=\"iconButton\" onClick={handleAdd}><AddIcon/></IconButton>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './SoapLabels.css';\r\nimport * as React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport LabelModal from './LabelModal';\r\nimport QuantitySelector from './components/QuantitySelector';\r\n\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addSoapLabel, editSoapLabel, useSoapLabels, useCurrentSoapLabel, selectCurrentSoapLabel, deleteSoapLabel, editSettings } from '../store/actions';\r\n\r\nexport default function LabelsList(props) {\r\n\tconst [confirmDeleteOpen, setConfirmDeleteOpen] = React.useState(false);\r\n\tconst [labelModalOpen, setLabelModalOpen] = React.useState(false);\r\n\tconst [soapLabelToDelete, setSoapLabelToDelete] = React.useState(undefined);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst soapLabels = useSoapLabels();\r\n\t// const settings = useSettings();\r\n\tconst currentSoapLabel = useCurrentSoapLabel();\r\n\r\n\t// Label Modal\r\n\tconst handleLabelModalOpen = () => {\r\n\t\tsetLabelModalOpen(true);\r\n\t\tdispatch(selectCurrentSoapLabel(undefined));\r\n\t}\r\n\tconst handleLabelModalClose = () => {\r\n\t\tsetLabelModalOpen(false);\r\n\t\tdispatch(selectCurrentSoapLabel(undefined));\r\n\t}\r\n\t\r\n\t// (New / Edit)\r\n\tconst saveLabel = (name, ingredients, soapCode, soapIngredients, soapFragrances, soapColorants, phrase, useSoapCalcRecipe, translateFrench) => {\r\n\t\tconst soapLabelData = {\r\n\t\t\tuid: new Date().getTime(), \r\n\t\t\tname, \r\n\t\t\tingredients, \r\n\t\t\tsoapCode, \r\n\t\t\tsoapIngredients, \r\n\t\t\tsoapFragrances, \r\n\t\t\tsoapColorants, \r\n\t\t\tphrase, \r\n\t\t\tuseSoapCalcRecipe, \r\n\t\t\ttranslateFrench, \r\n\t\t};\r\n\t\tif (currentSoapLabel) {\r\n\t\t\tdispatch(editSoapLabel(currentSoapLabel, soapLabelData));\r\n\t\t} else {\r\n\t\t\tsoapLabelData.quantity = 1;\r\n\t\t\tdispatch(addSoapLabel(soapLabelData));\r\n\t\t}\r\n\t\tdispatch(editSettings({translateFrench}));\r\n\t\tdispatch(selectCurrentSoapLabel(undefined));\r\n\t}\r\n\t\r\n\t// Change Qty\r\n\tconst handleSoapLabelQtyChange = (soapLabel, qty) => {\r\n\t\tconst soapLabelData = {\r\n\t\t\tquantity:  parseInt(qty),\r\n\t\t};\r\n\t\tdispatch(editSoapLabel(soapLabel, soapLabelData));\r\n\t};\r\n\t// Edit\r\n\tconst handleEdit = (soapLabel) => {\r\n\t\tdispatch(selectCurrentSoapLabel(soapLabel));\r\n\t\tsetLabelModalOpen(true);\r\n\t};\r\n\t// Delete\r\n\tconst handleDelete = (soapLabel) => {\r\n\t\tsetSoapLabelToDelete(soapLabel);\r\n\t\tsetConfirmDeleteOpen(true);\r\n\t};\r\n\t// Confirm Delete Dialog\r\n\tconst handleConfirmDeleteClose = () => {\r\n\t\tsetConfirmDeleteOpen(false);\r\n\t\tdispatch(deleteSoapLabel(soapLabelToDelete));\r\n\t\tsetSoapLabelToDelete(undefined);\r\n\t};\r\n\tconst handleConfirmDeleteDisagree = () => {\r\n\t\tsetConfirmDeleteOpen(false);\r\n\t\tsetSoapLabelToDelete(undefined);\r\n\t};\r\n\t\r\n\tlet index = 0;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid className=\"gridSettings noPrint\">\r\n\t\t\t\t<div className=\"wrapperForAbsolute\">\r\n\t\t\t\t\t<h2 className=\"secondTitle\">Soap Label List</h2>\r\n\t\t\t\t\t<div className=\"rightAbsoluteContainer\">\r\n\t\t\t\t\t\t<Button onClick={handleLabelModalOpen} endIcon={<AddCircleIcon />}>New Soap Label</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Grid container spacing={0} className=\"soapLabelRows\">\r\n\t\t\t\t\t{soapLabels && soapLabels.length ? soapLabels.map(soapLabel => {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem xs={12}\r\n\t\t\t\t\t\t\t\tclassName=\"soapLabelRow wrapperForAbsolute\"\r\n\t\t\t\t\t\t\t\tkey={`soapLabelRow-${index}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span className=\"soapLabelRowName\">{soapLabel.name} </span>\r\n\t\t\t\t\t\t\t\t<div className=\"soapLabelButtons rightAbsoluteContainer\" >\r\n\t\t\t\t\t\t\t\t\t<QuantitySelector\r\n\t\t\t\t\t\t\t\t\t\tquantity={soapLabel.quantity}\r\n\t\t\t\t\t\t\t\t\t\thandleUpdateQty={(qty) => handleSoapLabelQtyChange(soapLabel, qty)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\" onClick={(e) => handleEdit(soapLabel)}><EditIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton size=\"small\" onClick={(e) => handleDelete(soapLabel)}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}) : (\r\n\t\t\t\t\t\t<div>List is empty. Create a Soap Label</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{soapLabelToDelete && (\r\n\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\topen={confirmDeleteOpen}\r\n\t\t\t\t\t\tonClose={handleConfirmDeleteClose}\r\n\t\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">\r\n\t\t\t\t\t\t\t{`Delete soap label \"${soapLabelToDelete.name}\" ?`}\r\n\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={handleConfirmDeleteDisagree}>No</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={handleConfirmDeleteClose} autoFocus>\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t</Dialog>\r\n\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t\t<LabelModal\r\n\t\t\t\tlabelModalOpen={labelModalOpen}\r\n\t\t\t\tonCloseLabelModal={handleLabelModalClose}\r\n\t\t\t\tsaveLabel={saveLabel}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './SettingsModal.css';\r\nimport * as React from 'react';\r\nimport Label from './labelLayouts/Label';\r\n\r\nimport { Box } from '@mui/material';\r\nimport { Select } from '@mui/material';\r\nimport { MenuItem } from '@mui/material';\r\nimport { TextField } from '@mui/material';\r\nimport { Radio } from '@mui/material';\r\nimport { RadioGroup } from '@mui/material';\r\nimport { FormControlLabel } from '@mui/material';\r\nimport { FormControl } from '@mui/material';\r\nimport { FormLabel } from '@mui/material';\r\nimport { InputLabel } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n// import BackspaceIcon from '@mui/icons-material/Backspace';\r\n// import SaveIcon from '@mui/icons-material/Save';\r\nimport { Slider } from '@mui/material';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { editSettings, useSettings } from '../store/actions';\r\n\r\nconst sliderStyle = {marginLeft: 12, marginRight: 12, width: \"auto\"};\r\nconst sliderPaddingProperties = {\r\n\tmin: 10, max: 100,\r\n\tmarks: [{value: 10, label: '10'}, {value: 100, label: '100'}]\r\n};\r\n\r\nexport default function SettingsModal(props) {\r\n\tconst dispatch = useDispatch();\r\n\tconst settings = useSettings();\r\n\r\n\tconst { onCloseSettingsModal, settingsModalOpen } = props;\r\n\r\n\tconst [brand, setBrand] = React.useState(settings.brand); \r\n\tconst [brandError/*, setBrandError*/] = React.useState(false);\r\n\tconst [font, setFont] = React.useState(settings.font);\r\n\tconst [fontError/*, setFontError*/] = React.useState(false);\r\n\tconst [padding, setPadding] = React.useState(settings.padding);\r\n\r\n\tconst [layout, setLayout] = React.useState(settings.layout);\r\n\tconst [isLayoutColumn, setIsLayoutColumn] = React.useState(settings.layout === \"columns\");\r\n\tconst [layoutNbPerRow, setLayoutNbPerRow] = React.useState(settings.layoutNbPerRow);\r\n\tconst [layoutNbPerRowArray, setLayoutNbPerRowArray] = React.useState([...Array(settings.layoutNbPerRow).keys()]);\r\n\tconst [textAlignment, setTextAlignment] = React.useState(settings.textAlignment);\r\n\tconst [leftColumnWidth, setLeftColumnWidth] = React.useState(settings.leftColumnWidth);\r\n\tconst [seperatorWidth, setSeperatorWidth] = React.useState(settings.seperatorWidth);\r\n\t\r\n\tconst handleBrandChange = (event) => {\r\n\t\tsetBrand(event.target.value);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleFontChange = (event) => {\r\n\t\tsetFont(event.target.value);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleLayoutChange = (event) => {\r\n\t\tsetLayout(event.target.value);\r\n\t\tsetIsLayoutColumn(event.target.value === \"columns\");\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handlePaddingChange = (value, property) => {\r\n\t\tpadding[property] = value;\r\n\t\tconst newPadding = {...padding};\r\n\t\tsetPadding(newPadding);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleLeftColumnWidthChange = (event) => {\r\n\t\tsetLeftColumnWidth(event.target.value/100);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleSeperatorWidthChange = (event) => {\r\n\t\tsetSeperatorWidth(event.target.value);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleTextAlignmentChange = (event) => {\r\n\t\tsetTextAlignment(event.target.value);\r\n\t\tupdateSettings();\r\n\t};\r\n\tconst handleLayoutNbPerRowChange = (event) => {\r\n\t\tconst val = parseInt(event.target.value);\r\n\t\tconst valid = val>=2 && val<=6;\r\n\t\tif (valid) {\r\n\t\t\tsetLayoutNbPerRow(val);\r\n\t\t\tsetLayoutNbPerRowArray([...Array(val).keys()]);\r\n\t\t\tupdateSettings();\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateSettings = () => {\r\n\t\t// setSettings({...settings});\r\n\t\t// settings.brand = event.target.value;\r\n\t\t// settings.font = event.target.value;\r\n\t\t// settings.layout = event.target.value;\r\n\t\t// settings.padding = newPadding;\r\n\t\t// settings.leftColumnWidth = event.target.value/100;\r\n\t\t// settings.seperatorWidth = event.target.value;\r\n\t\t// settings.textAlignment = event.target.value;\r\n\t}\r\n\r\n\tconst handleClose = () => {\r\n\t\tconst settingsData = {\r\n\t\t\tbrand,\r\n\t\t\tfont,\r\n\t\t\tlayout,\r\n\t\t\tpadding,\r\n\t\t\tleftColumnWidth,\r\n\t\t\tseperatorWidth,\r\n\t\t\ttextAlignment,\r\n\t\t\tlayoutNbPerRow,\r\n\t\t};\r\n\t\tdispatch(editSettings(settingsData));\r\n\t\tonCloseSettingsModal();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog open={settingsModalOpen} scroll=\"body\" maxWidth={'1000px'}>\r\n\t\t\t<DialogContent dividers={false}>\r\n\t\t\t\t<Box className=\"modalBox\">\r\n\t\t\t\t\t<FormControl fullWidth={true} component=\"form\" className=\"form\">\r\n\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\taria-label=\"layour\"\r\n\t\t\t\t\t\t\tvalue={layout}\r\n\t\t\t\t\t\t\tonChange={handleLayoutChange}\r\n\t\t\t\t\t\t\tname=\"radio-buttons-group\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid container spacing={2} className=\"gridForm\">\r\n\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t<h2 className=\"secondTitle title\">Settings</h2>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={6} className=\"gridItemClose\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={handleClose}><CloseIcon/></IconButton>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={2} className=\"gridLayoutsContainer\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"columns\" control={<Radio />} label=\"Columns Layout\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{layoutNbPerRowArray.map(i => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`label-${i}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlayout=\"columns\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsoapName=\"Soap name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tingredients=\"Ingredients: water, coconut oil, palm oil, lye, avocado oil, canola oil, castor oil, olive oil, safflower oil, cocoa butter, fragrance(s), colorant(s).\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tphrase=\"Some catchy phrase\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdemo={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t{isLayoutColumn && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"font\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Font\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText=\"Has to exist on your computer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={font}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={fontError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleFontChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"soap-brand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Brand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={brand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={brandError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleBrandChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Top padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Top padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pt)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pt')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Bottom padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-bottom\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Bottom padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pb)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pb')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Left padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Left padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Right padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Right padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"nbPerRow-label\">Number of label per row (between 2 and 6)</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"nbPerRow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"nbPerRow-label\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Number of label per row (between 2 and 6)\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={layoutNbPerRow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// error={layoutNbPerRowError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleLayoutNbPerRowChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={2}>2</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={3}>3</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={4}>4</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={5}>5</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={6}>6</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"textAlignment-label\">Text Alignment</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"textAlignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"textAlignment-label\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Text Alignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={textAlignment}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTextAlignmentChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"left\">Left</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"right\">Right</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12} className=\"gridItemLayout\">\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={2} className=\"gridLayoutsContainer\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"wide\" control={<Radio />} label=\"Wide Row Layout\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\tlayout=\"wide\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsoapName=\"Soap name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tingredients=\"Ingredients: water, coconut oil, palm oil, lye, avocado oil, canola oil, castor oil, olive oil, safflower oil, cocoa butter, fragrance(s), colorant(s).\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tphrase=\"Some catchy phrase\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdemo={true}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t{!isLayoutColumn && (\r\n\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"font\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Font\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText=\"Has to exist on your computer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={font}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={fontError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleFontChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"soap-brand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Soap Brand\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={brand}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={brandError}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleBrandChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Top padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Top padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pt)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pt')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Bottom padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-bottom\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Bottom padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pb)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pb')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 1 left padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 1 left padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl1')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 1 right padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 1 right padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr1)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr1')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 2 left padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-left2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 2 left padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pl2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pl2')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Column 2 right padding</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"padding-right2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Column 2 right padding\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(padding.pr2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handlePaddingChange(e.target.value, 'pr2')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...sliderPaddingProperties}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Left Column Size</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"textAlignment\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Left Column Size\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(leftColumnWidth*100)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleLeftColumnWidthChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={25} max={75}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarks={[{value: 25, label: '25%'}, {value: 75, label: '75%'}]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Seperator Width</FormLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"seperatorWidth\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seperator Width\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={parseInt(seperatorWidth)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleSeperatorWidthChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0} max={10}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={sliderStyle}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n","import './LabelsPrintView.css';\r\nimport * as React from 'react';\r\nimport Label from './labelLayouts/Label';\r\nimport SettingsModal from './SettingsModal';\r\nimport { IconButton } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { Tooltip } from '@mui/material';\r\n\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nimport { useSoapLabels, useSettings } from '../store/actions';\r\n\r\nexport default function LabelsPrintView(props) {\r\n\tconst [settingsModalOpen, setSettingsModalOpen] = React.useState(false);\r\n\r\n\tconst soapLabels = useSoapLabels();\r\n\tconst settings = useSettings();\r\n\tconst [layoutNbPerRow/*, setLayoutNbPerRow*/] = React.useState(settings.layoutNbPerRow);\r\n\tconst [layout/*, setLayoutNbPerRow*/] = React.useState(settings.layout);\r\n\r\n\t// Settings Modal\r\n\tconst handleClickOpenSettings = () => {\r\n\t\tsetSettingsModalOpen(true);\r\n\t};\r\n\tconst handleSettingsModalClose = () => {\r\n\t\tsetSettingsModalOpen(false);\r\n\t}\r\n\t\r\n\tconst renderLabels = (_soapLabels, _layoutNbPerRow, _layout) => {\r\n\t\tif(_layout === \"wide\") {\r\n\t\t\t_layoutNbPerRow = 1;\r\n\t\t}\r\n\r\n\t\tlet labels = [];\r\n\t\t_soapLabels.forEach(soapLabel => {\r\n\t\t\tfor (let i=0; i<soapLabel.quantity; i++){\r\n\t\t\t\tlabels.push(soapLabel);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst rows = labels.reduceRight((r,i,_,s) => (r.push(s.splice(0,_layoutNbPerRow)),r),[]);\r\n\r\n\t\treturn rows.map((row, r) => {\r\n\t\t\treturn (\r\n\t\t\t<div className=\"gridPrintRow\" key={`labelPreviewRow-${r}`}>\r\n\t\t\t\t{row.map((label, l) => {\r\n\t\t\t\t\tconst index = r*_layoutNbPerRow+l;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\tkey={`labelPreview-${index}`}\r\n\t\t\t\t\t\t\tsoapName={label.name} \r\n\t\t\t\t\t\t\tingredients={label.ingredients} \r\n\t\t\t\t\t\t\tphrase={label.phrase}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\t// Print\r\n\tconst handleClickPrint = () => {\r\n\t\twindow.print();\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t}, [layoutNbPerRow, layout]);\r\n\r\n\tconst isColumnLayout = layout === \"columns\";\r\n\tconst pagePadding = {\r\n\t\tpt: Math.max(0, 20-settings.padding.pt)+'px',\r\n\t\tpb: Math.max(0, 20-settings.padding.pb)+'px',\r\n\t\tpl: Math.max(0, 20-(isColumnLayout ? settings.padding.pl : settings.padding.pl1))+'px',\r\n\t\tpr: Math.max(0, 20-(isColumnLayout ? settings.padding.pr : settings.padding.pr2))+'px',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<SettingsModal\r\n\t\t\t\tsettingsModalOpen={settingsModalOpen}\r\n\t\t\t\tonCloseSettingsModal={handleSettingsModalClose}\r\n\t\t\t/>\r\n\t\t\t<div className=\"wrapperForAbsolute noPrint\">\r\n\t\t\t\t<h2 className=\"secondTitle\">Soap Labels Print Preview\r\n\t\t\t\t\t<Tooltip title=\"Lines are for visual aids only. And margins could render differently in your print settings.\" placement=\"right\">\r\n\t\t\t\t\t\t<IconButton size=\"small\">\r\n\t\t\t\t\t\t\t<InfoIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</h2>\r\n\t\t\t\t<div className=\"rightAbsoluteContainer\">\r\n\t\t\t\t\t<IconButton onClick={handleClickPrint}><PrintIcon/></IconButton>\r\n\t\t\t\t\t<IconButton onClick={handleClickOpenSettings}><SettingsIcon/></IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Grid item className=\"gridPrintLabels\" {...pagePadding}>\r\n\t\t\t\t{soapLabels && soapLabels.length ? renderLabels(soapLabels, settings.layoutNbPerRow, settings.layout) : null}\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import './LabelsList.css';\r\nimport * as React from 'react';\r\nimport { Box } from '@mui/material';\r\n\r\nimport LabelsList from './LabelsList';\r\nimport LabelsPrintView from './LabelsPrintView';\r\n\r\n// import { useDispatch } from 'react-redux';\r\nimport { useSoapLabels, useSettings } from '../store/actions';\r\n\r\nexport default function SoapLabels() {\r\n\r\n\tconst soapLabels = useSoapLabels();\r\n\tconst settings = useSettings();\r\n\r\n\treturn (\r\n\t\t<Box className=\"box\">\r\n\t\t\t{settings && soapLabels && (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<LabelsList />\r\n\t\t\t\t\t<LabelsPrintView />\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t</Box>\r\n\t);\r\n}\r\n","import './Main.css';\r\nimport * as React from 'react';\r\nimport { Container } from '@mui/material';\r\nimport { IconButton } from '@mui/material';\r\nimport Cookies from 'universal-cookie';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\n\r\nimport SoapLabels from './SoapLabels';\r\n\r\nconst images = [\r\n\t'arab_tile',\r\n\t'bush',\r\n\t'circuit',\r\n\t'full-bloom',\r\n\t'gplaypattern',\r\n\t'greek-vase',\r\n\t'herringbone',\r\n\t'hotel-wallpaper',\r\n\t'more-leaves',\r\n\t'moroccan-flower',\r\n\t'moroccan-flower-dark',\r\n\t'morocco-blue',\r\n\t'new_year_background',\r\n\t'regal',\r\n\t'ripples',\r\n\t'swirls',\r\n\t'tree_bark',\r\n\t'trees',\r\n];\r\n\r\nexport default function Main() {\r\n\r\n\tconst [bgTileIndex, setBgTileIndex] = React.useState(0);\r\n\tconst [mainClassName, setMainClassName] = React.useState(\"\");\r\n\r\n\t// Background\r\n\tconst handlePreviousBg = () => {\r\n\t\tlet nextBgTileIndex = bgTileIndex - 1;\r\n\t\tif (nextBgTileIndex < 0){\r\n\t\t\tnextBgTileIndex = images.length - 1;\r\n\t\t}\r\n\t\tupdateBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\tconst handleNextBg = () => {\r\n\t\tlet nextBgTileIndex = bgTileIndex + 1;\r\n\t\tif (nextBgTileIndex >= images.length){\r\n\t\t\tnextBgTileIndex = 0;\r\n\t\t}\r\n\t\tupdateBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\tconst updateBgTileIndex = (nextBgTileIndex) => {\r\n\t\tconst cookies = new Cookies();\r\n\t\tcookies.set('SoapBgTileIndex', nextBgTileIndex, { path: '/' });\r\n\t\tsetBgTileIndex(nextBgTileIndex);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst cookies = new Cookies();\r\n\t\tconst _bgTileIndex = parseInt(cookies.get('SoapBgTileIndex')) || 0;\r\n\t\tsetBgTileIndex(_bgTileIndex);\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetMainClassName(`main main_${images[bgTileIndex]}`);\r\n\t}, [bgTileIndex]);\r\n\r\n\treturn (\r\n\t\t<div className={mainClassName}>\r\n\t\t\t<Container className=\"header noPrint wrapperForAbsolute\">\r\n\t\t\t\t<h1 className=\"mainTitle\">Soap Labels</h1>\r\n\t\t\t\t<div className=\"bgSwitcherContainer rightAbsoluteContainer\">\r\n\t\t\t\t\t<IconButton onClick={handlePreviousBg}><ArrowBackIosNewIcon/></IconButton>\r\n\t\t\t\t\t<IconButton onClick={handleNextBg}><ArrowForwardIosIcon/></IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t\t<Container className=\"container\">\r\n\t\t\t\t<SoapLabels/>\r\n\t\t\t</Container>\r\n\t\t\t<Container className=\"footer noPrint\">\r\n\t\t\t\t<p className=\"footerCopyright\">Soap Labels @2021 Joanie Lessnick</p>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import * as constants from './constants';\r\n\r\nconst defaultSettings = {\r\n\t\"font\": \"Shadows Into Light\",\r\n\t\"brand\": \"\",\r\n\t\"layout\": \"columns\",\r\n\t\"layoutNbPerRow\": 3,\r\n\t\"textAlignment\": \"left\",\r\n\t\"leftColumnWidth\": 0.65,\r\n\t\"seperatorWidth\": 5,\r\n\t\"padding\": {'pt': 20, 'pb': 20, 'pl': 20, 'pr': 20, 'pl1': 50, 'pr1': 50, 'pl2': 10, 'pr2': 20},\r\n\t\"translateFrench\": false,\r\n};\r\n\r\nconst defaultState = {\r\n\tname: 'Soap Labels',\r\n\tsoapLabels: [],\r\n\tsettings: defaultSettings,\r\n};\r\n\r\nconst reducer = (state = defaultState, {type, ...payload}) => {\t//action déconstruite = {type, name}\r\n\tconsole.log(state, type, payload);\r\n\r\n\tswitch (type) {\r\n\r\n\t\tcase constants.SET_CURRENT_SOAP_LABEL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentSoapLabel: payload.currentSoapLabel,\r\n\t\t\t};\r\n\r\n\t\t\r\n\t\tcase constants.ADD_SOAP_LABEL:\r\n\t\t\treturn { \r\n\t\t\t\t...state, \r\n\t\t\t\tsoapLabels: [...state.soapLabels, payload.soapLabel],\r\n\t\t\t}\r\n\t\t\r\n\r\n\t\tcase constants.EDIT_CURRENT_SOAP_LABEL:\r\n\t\t\tconst newState = { \r\n\t\t\t\t...state, \r\n\t\t\t\tsoapLabels: state.soapLabels.map(\r\n\t\t\t\t\t(soapLabel, i) => { \r\n\t\t\t\t\t\treturn soapLabel.uid === payload.soapLabelToEdit.uid ? {...soapLabel, ...payload.soapLabelData}\r\n\t\t\t\t\t\t\t\t\t\t\t: soapLabel; }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\treturn newState;\r\n\t\t\r\n\r\n\t\tcase constants.DELETE_CURRENT_SOAP_LABEL:\r\n\t\t\treturn { \r\n\t\t\t\t...state, \r\n\t\t\t\tsoapLabels: state.soapLabels.filter(\r\n\t\t\t\t\t(soapLabel, i) => soapLabel.uid === payload.soapLabelToDelete.uid ? false\r\n\t\t\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\r\n\t\tcase constants.EDIT_SETTINGS:\r\n\t\t\treturn { \r\n\t\t\t\t...state, \r\n\t\t\t\tsettings: {...state.settings, ...payload.settings}\r\n\t\t\t}\r\n\r\n\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}; // {reducer, startState, middleware}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\n// convert object to string and store in localStorage\r\nfunction saveToLocalStorage(state) {\r\n\ttry {\r\n\t\tconst serialisedState = JSON.stringify(state);\r\n\t\tlocalStorage.setItem(\"SoapLabelsState\", serialisedState);\r\n\t} catch (e) {\r\n\t\tconsole.warn(e);\r\n\t}\r\n}\r\n\r\n// load string from localStarage and convert into an Object\r\n// invalid output must be undefined\r\nfunction loadFromLocalStorage() {\r\n\ttry {\r\n\t\tconst serialisedState = localStorage.getItem(\"SoapLabelsState\");\r\n\t\tif (serialisedState === null) return undefined;\r\n\t\t\treturn JSON.parse(serialisedState);\r\n\t} catch (e) {\r\n\t\tconsole.warn(e);\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n\r\n// create our store from our rootReducers and use loadFromLocalStorage\r\n// to overwrite any values that we already have saved\r\nconst store = createStore(reducer, loadFromLocalStorage());\r\n\r\n// listen for store changes and use saveToLocalStorage to\r\n// save them to localStorage\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;\r\n","import './App.css';\r\nimport * as React from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Main from './LabelMaker/Main';\r\nimport store from './store/'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst theme = createTheme({\r\n\ttypography: {\r\n\t\tfontFamily: [\r\n\t\t\t'Lato',\r\n\t\t\t'Arial',\r\n\t\t\t'Shadows Into Light',\r\n\t\t\t'-apple-system',\r\n\t\t\t'BlinkMacSystemFont',\r\n\t\t\t'\"Segoe UI\"',\r\n\t\t\t'Roboto',\r\n\t\t\t'\"Helvetica Neue\"',\r\n\t\t\t'Arial',\r\n\t\t\t'sans-serif',\r\n\t\t\t'\"Apple Color Emoji\"',\r\n\t\t\t'\"Segoe UI Emoji\"',\r\n\t\t\t'\"Segoe UI Symbol\"',\r\n\t\t].join(','),\r\n\t\tbutton: {\r\n\t\t  fontSize: '1rem',\r\n\t\t  fontWeight: '600',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Main />\r\n    \t</ThemeProvider>\r\n\t</Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}